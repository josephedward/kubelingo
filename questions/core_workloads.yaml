questions:
- question: Create a deployment named 'webapp' with image 'nginx:1.21' and 3 replicas.
  solution: kubectl create deployment webapp --image=nginx:1.21 --replicas=3
- question: Scale the 'webapp' deployment to 5 replicas.
  solution: kubectl scale deployment webapp --replicas=5
- question: Update the image for the 'webapp' deployment to 'nginx:1.22'.
  solution: kubectl set image deployment/webapp webapp=nginx:1.22
- question: Check the rollout status of a deployment named 'frontend'.
  solution: kubectl rollout status deployment/frontend
  source: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=You%20can%20check%20if%20a,returns%20a%20zero%20exit%20code
- question: View the history of a deployment named 'webapp'.
  solution: kubectl rollout history deployment/webapp
  source: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=,rollout%20started
- question: Roll back a deployment named 'webapp' to its previous version.
  solution: kubectl rollout undo deployment/webapp
  source: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=1,rollback%20to%20the%20previous%20revision
- question: Create a manifest for a Pod named 'simple-pod'. The pod should use the
    'nginx:1.21-alpine' image and have a label 'app=webserver'.
  solution: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: simple-pod\n  labels:\n\
    \    app: webserver\nspec:\n  containers:\n  - name: nginx-container\n    image:\
    \ nginx:1.21-alpine\n"
- question: Edit the following Pod manifest to change the image tag to '1.22-alpine'
    and add the annotation 'owner=study-app'.
  starter_manifest: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: simple-pod\n  labels:\n\
    \    app: webserver\nspec:\n  containers:\n  - name: nginx-container\n    image:\
    \ nginx:1.21-alpine\n"
  solution: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: simple-pod\n  labels:\n\
    \    app: webserver\n  annotations:\n    owner: study-app\nspec:\n  containers:\n\
    \  - name: nginx-container\n    image: nginx:1.22-alpine\n"
- question: Create a new pod named 'nginx' using the 'nginx:alpine' image.
  solution: kubectl run nginx --image=nginx:alpine
- question: Expose the 'nginx' pod on port 80.
  solution: kubectl expose pod nginx --port=80 --name=nginx-service
- question: Delete the 'nginx' pod and the 'nginx-service'.
  solution: 'kubectl delete pod nginx

    kubectl delete service nginx-service

    '
- question: Create a pod named busybox using the busybox image that runs the command
    'sleep 3600'.
  solution: kubectl run busybox --image=busybox -- sleep 3600
  source: https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,argN)
- question: Generate a YAML definition file for a pod named nginx, using the nginx
    image, without creating it.
  solution: kubectl run nginx --image=nginx --dry-run=client -o yaml > nginx.yaml
  source: https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,run%3Dclient
- question: Create an interactive temporary pod named 'my-shell' using the Ubuntu
    image to troubleshoot cluster issues.
  solution: kubectl run my-shell --rm -i --tty --image=ubuntu -- bash
  source: https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,restart%3DNever
- question: Create a temporary, interactive pod named 'curl1' using 'curlimages/curl'
    to run a curl command against an internal service at 10.244.0.4.
  solution: kubectl run curl1 --image=curlimages/curl -i -t --rm --restart=Never --
    curl 10.244.0.4
  source: https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,restart%3DNever
- question: Force delete a pod named 'webserver-sat-003' in the 'saturn' namespace.
  solution: kubectl -n saturn delete pod webserver-sat-003 --force --grace-period=0
- question: Print the status phase of pod 'pod1' in the default namespace using a
    jsonpath query.
  solution: kubectl -n default get pod pod1 -o jsonpath="{.status.phase}"
- question: Create a manifest for a Deployment named `nginx-deployment` with 3 replicas.
  solution: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n\
    spec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n\
    \    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n\
    \      - name: nginx\n        image: nginx:1.14.2\n"
