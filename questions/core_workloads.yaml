questions:
  - question: "Create a deployment named 'webapp' with image 'nginx:1.21' and 3 replicas."
    solution: |
      kubectl create deployment webapp --image=nginx:1.21 --replicas=3
  - question: "Scale the 'webapp' deployment to 5 replicas."
    solution: |
      kubectl scale deployment webapp --replicas=5
  - question: "Create a Pod manifest for a pod named 'simple-pod'. The pod should use the 'nginx:1.21-alpine' image and have a label 'app=webserver'."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: simple-pod
        labels:
          app: webserver
      spec:
        containers:
        - name: nginx-container
          image: nginx:1.21-alpine
  - question: "Edit the following Pod manifest to change the image tag to '1.22-alpine' and add the annotation 'owner=study-app'."
    starter_manifest: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: simple-pod
        labels:
          app: webserver
      spec:
        containers:
        - name: nginx-container
          image: nginx:1.21-alpine
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: simple-pod
        labels:
          app: webserver
        annotations:
          owner: study-app
      spec:
        containers:
        - name: nginx-container
          image: nginx:1.22-alpine
  - question: "Generate a Deployment named web (3 replicas) using image nginx:1.25 and output the manifest."
    solution: "kubectl create deploy web --image=nginx:1.25 --replicas=3 --dry-run=client -o yaml"
  - question: "Manifest for a Deployment web (2 replicas) with label app=web and container port 80."
    solution: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: web
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: web
        template:
          metadata:
            labels:
              app: web
          spec:
            containers:
              - name: nginx
                image: nginx:1.27
                ports:
                  - containerPort: 80
  - question: "Create a new pod named 'nginx' using the 'nginx:alpine' image."
    solution: |
      kubectl run nginx --image=nginx:alpine
  - question: "Get the YAML for the pod named 'nginx' without the cluster-specific information."
    solution: |
      # The --export flag is deprecated. A modern alternative is not straightforward
      # but for study purposes, this is what's often expected.
      kubectl get pod nginx -o yaml --export
  - question: "Expose the 'nginx' pod on port 80."
    solution: |
      kubectl expose pod nginx --port=80 --name=nginx-service
  - question: "Delete the 'nginx' pod and the 'nginx-service'."
    solution: |
      kubectl delete pod nginx
      kubectl delete service nginx-service
  - question: "Create a manifest for a Pod named 'nginx-pod-manifest' using the 'nginx:alpine' image."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: nginx-pod-manifest
      spec:
        containers:
        - name: nginx
          image: nginx:alpine
  - question: "Create a deployment named frontend using image nginx:1.14"
    solution: "kubectl create deployment frontend --image=nginx:1.14"
  - question: "List all deployments"
    solution: "kubectl get deployments"
  - question: "Describe deployment frontend"
    solution: "kubectl describe deployment frontend"
  - question: "Scale a deployment named 'frontend' to 5 replicas"
    solution: "kubectl scale deployment frontend --replicas=5"
  - question: "Roll back a deployment named 'webapp' to its previous version"
    solution: "kubectl rollout undo deployment/webapp"
  - question: "Restart the deployment frontend"
    solution: "kubectl rollout restart deployment frontend"
  - question: "Delete deployment frontend"
    solution: "kubectl delete deployment frontend"
  - question: "Update the image of a deployment named 'webapp' to nginx:1.18"
    solution: "kubectl set image deployment/webapp webapp=nginx:1.18"
  - question: "Check the rollout status of a deployment named 'frontend'"
    solution: "kubectl rollout status deployment/frontend"
  - question: "Create a deployment with a record of the change-cause for future reference"
    solution: "kubectl create deployment nginx --image=nginx --record"
  - question: "View the history of a deployment named 'webapp'"
    solution: "kubectl rollout history deployment/webapp"
  - question: "Pause the rollout of a deployment named 'frontend'"
    solution: "kubectl rollout pause deployment/frontend"
  - question: "Resume the rollout of a deployment named 'frontend'"
    solution: "kubectl rollout resume deployment/frontend"
  - question: "View the details of a specific revision (e.g., 2) of a deployment named 'webapp'"
    solution: "kubectl rollout history deployment/webapp --revision=2"
  - question: "Roll back the deployment api-new-c32 in namespace neptune to the previous revision."
    solution: "kubectl -n neptune rollout undo deployment api-new-c32"
  - question: "Restart the deployment web-moon in the moon namespace."
    solution: "kubectl -n moon rollout restart deployment web-moon"
  - question: "Create a pod named nginx using the nginx image and expose port 80"
    solution: "kubectl run nginx --image=nginx --port=80"
  - question: "Create a pod named busybox using the busybox image that runs the command 'sleep 3600'"
    solution: "kubectl run busybox --image=busybox -- sleep 3600"
  - question: "Generate a YAML definition file for a pod named nginx, using the nginx image, without creating it"
    solution: "kubectl run nginx --image=nginx --dry-run=client -o yaml > nginx.yaml"
  - question: "Create a pod named 'nginx' that runs the latest nginx image and sets an environment variable DB_URL=postgresql://db"
    solution: "kubectl run nginx --image=nginx --env=\"DB_URL=postgresql://db\""
  - question: "Extract the YAML definition of a running pod named 'webapp' in the 'development' namespace"
    solution: "kubectl get pod webapp -n development -o yaml > webapp.yaml"
  - question: "Create a pod named nginx using the nginx image and set labels app=web and tier=frontend"
    solution: "kubectl run nginx --image=nginx --labels=\"app=web,tier=frontend\""
  - question: "Create an interactive temporary pod named 'my-shell' using the Ubuntu image to troubleshoot cluster issues"
    solution: "kubectl run my-shell --rm -i --tty --image=ubuntu -- bash"
  - question: "Get detailed information about a pod named 'nginx'"
    solution: "kubectl describe pod nginx"
  - question: "Delete a pod named 'nginx'"
    solution: "kubectl delete pod nginx"
  - question: "View the logs for a pod named 'webapp'"
    solution: "kubectl logs webapp"
  - question: "Execute the 'env' command in a pod named 'nginx'"
    solution: "kubectl exec nginx -- env"
  - question: "Create a temporary, interactive pod named 'curl1' using the 'curlimages/curl' image to run a curl command against an internal service at 10.244.0.4"
    solution: "kubectl run curl1 --image=curlimages/curl -i -t --rm --restart=Never -- curl 10.244.0.4"
  - question: "Create a pod named pod1 with image httpd:2.4.41-alpine and output YAML only."
    solution: "kubectl run pod1 --image=httpd:2.4.41-alpine --dry-run=client -o yaml"
  - question: "Force delete a pod named webserver-sat-003 in the saturn namespace."
    solution: "kubectl -n saturn delete pod webserver-sat-003 --force --grace-period=0"
  - question: "Print the status phase of pod pod1 in the default namespace using a jsonpath query."
    solution: "kubectl -n default get pod pod1 -o jsonpath=\"{.status.phase}\""
  - question: "Create a Deployment named 'frontend' with 3 replicas and label 'app: frontend'. The Pods should use the 'nginx:1.21' image."
    solution: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: frontend
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: frontend
        template:
          metadata:
            labels:
              app: frontend
          spec:
            containers:
            - name: nginx
              image: nginx:1.21
  - question: Create a Pod named 'web-server' with a container named 'nginx' using the 'nginx:1.20' image, and expose port 80.
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: web-server
      spec:
        containers:
        - name: nginx
          image: nginx:1.20
          ports:
          - containerPort: 80
  - question: "Create a Pod named 'app-pod' with a container 'app' using image 'nginx'. Add environment variables DB_HOST=localhost and DB_PORT=5432."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: app-pod
      spec:
        containers:
        - name: app
          image: nginx
          env:
          - name: DB_HOST
            value: localhost
          - name: DB_PORT
            value: "5432"
  - question: "Create a manifest for a Deployment named `nginx-deployment` with 3 replicas."
    solution: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: nginx-deployment
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: nginx
        template:
          metadata:
            labels:
              app: nginx
          spec:
            containers:
            - name: nginx
              image: nginx:1.14.2
  - question: "Create a manifest for a Deployment named `nginx-deployment` with 2 replicas, using image `nginx:1.16.1`."
    solution: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: nginx-deployment
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: nginx
        template:
          metadata:
            labels:
              app: nginx
          spec:
            containers:
            - name: nginx
              image: nginx:1.16.1
  - question: Create a manifest for a Pod named `my-pod` with a container `nginx` using image `nginx:1.14.2`. Add an environment variable `GREETING` with the value `Hello World`.
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: my-pod
      spec:
        containers:
        - name: nginx
          image: nginx:1.14.2
          env:
          - name: GREETING
            value: "Hello World"
