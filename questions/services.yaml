questions:
- question: You have a deployment named 'webapp' with label 'app=webapp'. Create a
    ClusterIP service named 'webapp-svc' to expose the deployment on port 80.
  source: https://stackoverflow.com/questions/62964958/expose-a-web-app-on-port-80-using-kubernetes-and-minikube
  suggestion:
  - kubectl expose deployment webapp --name=webapp-svc --port=80 --target-port=80
- question: Create a manifest for a NodePort service named 'webapp-nodeport'. The
    service should forward traffic from a port on the node to port 80 on pods with
    the label 'app=webapp'.
  source: https://kubernetes.io/docs/concepts/services-networking/service/
  suggestion:
  - apiVersion: v1
    kind: Service
    metadata:
      name: webapp-nodeport
    spec:
      ports:
      - port: 80
        protocol: TCP
        targetPort: 80
      selector:
        app: webapp
      type: NodePort
- question: Service manifest (ClusterIP) exposing app=web on port 80 to targetPort
    8080.
  source: https://kubernetes.io/docs/concepts/services-networking/service/
  suggestion:
  - apiVersion: v1
    kind: Service
    metadata:
      name: web
    spec:
      ports:
      - port: 80
        targetPort: 8080
      selector:
        app: web
- question: Headless Service manifest for app=db on port 5432.
  source: https://stackoverflow.com/questions/69611827/kubernetes-is-there-any-way-to-get-headless-service-endpoint-info-in-container
  suggestion:
  - apiVersion: v1
    kind: Service
    metadata:
      name: db
    spec:
      clusterIP: None
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        app: db
- question: List all services.
  source: https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=,current%20namespace%2C%20with%20more%20details
  suggestion:
  - kubectl get services
- question: Delete service frontend-svc.
  source: https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=,port%3D8000
  suggestion:
  - kubectl delete service frontend-svc
- question: 'Create a Service `my-service` that selects pods with label `app: MyApp`.
    The service should expose TCP port 80 and target port 8080 on the pods.'
  source: https://kubernetes.io/docs/tutorials/services/connect-applications-service/
  suggestion:
  - apiVersion: v1
    kind: Service
    metadata:
      name: my-service
    spec:
      ports:
      - port: 80
        protocol: TCP
        targetPort: 8080
      selector:
        app: MyApp
