questions:
  - question: "Create a Pod manifest for a pod named 'pod-with-init' that has an initContainer. The initContainer should use the 'busybox' image and run the command 'sleep 2'. The main container should use the 'nginx' image."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: pod-with-init
      spec:
        initContainers:
        - name: init-work
          image: busybox
          command: ['sh', '-c', 'sleep 2']
        containers:
        - name: main-app
          image: nginx
  - question: "Pod manifest with one initContainer that waits 5s before starting app container."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: app-with-init
      spec:
        initContainers:
          - name: wait
            image: busybox
            command: ["sh","-c","sleep 5"]
        containers:
          - name: app
            image: nginx
  - question: "Pod manifest with a sidecar that tails a shared log file."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: app-with-sidecar
      spec:
        volumes:
          - name: logs
            emptyDir: {}
        containers:
          - name: app
            image: busybox
            command: ["sh","-c","while true; do date >> /var/log/app/app.log; sleep 2; done"]
            volumeMounts:
              - name: logs
                mountPath: /var/log/app
          - name: log-tailer
            image: busybox
            command: ["sh","-c","tail -n+1 -F /var/log/app/app.log"]
            volumeMounts:
              - name: logs
                mountPath: /var/log/app
  - question: "Run a pod named busybox with image busybox that runs indefinitely."
    solution: "kubectl run busybox --image=busybox --restart=Never -- /bin/sh -c \"sleep 3600\""
  - question: "List all pods."
    solution: "kubectl get pods"
  - question: "Describe pod busybox."
    solution: "kubectl describe pod busybox"
  - question: "Delete pod busybox."
    solution: "kubectl delete pod busybox"
  - question: Create a Deployment named `test-init-container` in namespace `mars`. It should have one replica. The Pods should have an `nginx:1.17.3-alpine` container and an `initContainer` named `init-con` using `busybox:1.31.0`. An `emptyDir` volume `web-content` should be mounted to `/usr/share/nginx/html` in the nginx container and `/tmp/web-content` in the init container. The init container should run `echo 'check this out!' > /tmp/web-content/index.html`.
    solution: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: test-init-container
        namespace: mars
      spec:
        replicas: 1
        selector:
          matchLabels:
            id: test-init-container
        template:
          metadata:
            labels:
              id: test-init-container
          spec:
            volumes:
            - name: web-content
              emptyDir: {}
            initContainers:
            - name: init-con
              image: busybox:1.31.0
              command: ['sh', '-c', 'echo "check this out!" > /tmp/web-content/index.html']
              volumeMounts:
              - name: web-content
                mountPath: /tmp/web-content
            containers:
            - name: nginx
              image: nginx:1.17.3-alpine
              volumeMounts:
              - name: web-content
                mountPath: /usr/share/nginx/html
              ports:
              - containerPort: 80
