questions:
  - question: "Generate the manifest for a pod named 'resource-pod' with image 'nginx'. Set CPU requests to '100m' and memory requests to '256Mi'. Set CPU limits to '200m' and memory limits to '512Mi'."
    solution: |
      kubectl run resource-pod --image=nginx --requests=cpu=100m,memory=256Mi --limits=cpu=200m,memory=512Mi --dry-run=client -o yaml
  - question: "Create a manifest for a Pod named 'resource-pod-manifest' that requests '50m' of CPU and '128Mi' of memory, and has a limit of '100m' CPU and '256Mi' of memory."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: resource-pod-manifest
      spec:
        containers:
        - name: main
          image: nginx
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "100m"
  - question: "Command to set requests (200m,128Mi) and limits (500m,256Mi) on Deployment web."
    solution: "kubectl set resources deploy/web --requests=cpu=200m,memory=128Mi --limits=cpu=500m,memory=256Mi"
  - question: "Command to create an HPA for web: min 2, max 5, target 50% CPU."
    solution: "kubectl autoscale deployment web --min=2 --max=5 --cpu-percent=50"
  - id: yaml-author-q1
    prompt: 'In namespace limit create a Pod named resource-checker using image httpd:alpine
      with container name my-container; requests: cpu=30m, memory=30Mi; limits: cpu=300m,
      memory=30Mi.'
    type: yaml_author
    metadata:
      id: yaml-author-q1
      category: YAML Authoring
      type: yaml_author
      answer: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-checker\n  namespace:\
        \ limit\nspec:\n  containers:\n  - name: my-container\n    image: httpd:alpine\n\
        \    resources:\n      requests:\n        cpu: 30m\n        memory: 30Mi\n \
        \     limits:\n        cpu: 300m\n        memory: 30Mi\n"
  - id: yaml_quiz::resource-checker-pod
    prompt: A namespace 'limit' has been created. Edit 'pod.yaml' to define a Pod named
      'resource-checker' in that namespace. It should use the 'httpd:alpine' image with
      a container named 'my-container'. Configure resource requests for 'cpu=30m' and
      'memory=30Mi', and limits for 'cpu=300m' and 'memory=30Mi'. After editing, apply
      the manifest.
    type: live_k8s_edit
    initial_files:
      pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-checker\n  namespace:\
        \ limit\nspec:\n  containers:\n  - name: my-container\n    image: httpd:alpine\n\
        \    resources:\n      requests:\n        cpu: # TODO\n        memory: # TODO\n\
        \      limits:\n        cpu: # TODO\n        memory: # TODO\n"
    pre_shell_cmds:
    - kubectl create ns limit
    validation_steps:
    - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.requests.cpu}'
      matcher:
        contains: 30m
    - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.requests.memory}'
      matcher:
        contains: 30Mi
    - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.limits.cpu}'
      matcher:
        contains: 300m
    - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.limits.memory}'
      matcher:
        contains: 30Mi
    explanation: Pod with resource requests and limits. Validation is performed by checking
      the live resource in the cluster, not by comparing YAML files.
    metadata:
      id: yaml_quiz::resource-checker-pod
      type: live_k8s_edit
      category: YAML Editing - General
