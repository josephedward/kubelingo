questions:
  - question: "Create a pod manifest for 'probe-pod' using image 'nginx' that has a liveness probe. The probe should perform an HTTP GET request on port 80 at the path '/'."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: probe-pod
      spec:
        containers:
        - name: nginx
          image: nginx
          livenessProbe:
            httpGet:
              path: /
              port: 80
  - question: "Pod manifest with HTTP liveness probe on /healthz port 8080."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: liveness-http
      spec:
        containers:
          - name: app
            image: nginx
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
  - question: "Pod manifest with readiness exec probe checking /tmp/ready exists."
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: readiness-exec
      spec:
        containers:
          - name: app
            image: busybox
            command: ["sh","-c","touch /tmp/ready; sleep 3600"]
            readinessProbe:
              exec:
                command: ["sh","-c","test -f /tmp/ready"]
  - question: Create a single Pod named `pod6` in namespace `default` with image `busybox:1.31.0`. The pod should run the command `touch /tmp/ready && sleep 1d`. Configure a readiness probe that executes `cat /tmp/ready`, with an `initialDelaySeconds` of 5 and a `periodSeconds` of 10.
    solution: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: pod6
        namespace: default
      spec:
        containers:
        - name: pod6
          image: busybox:1.31.0
          command: ["sh", "-c", "touch /tmp/ready && sleep 1d"]
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/ready
            initialDelaySeconds: 5
            periodSeconds: 10
  - question: Create a Deployment named space-alien-welcome-message-generator using image httpd:alpine with 1 replica and a readinessProbe running 'stat /tmp/ready' with initialDelaySeconds=10 and periodSeconds=5.
    solution: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: space-alien-welcome-message-generator
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: space-alien-welcome-message-generator
        template:
          metadata:
            labels:
              app: space-alien-welcome-message-generator
          spec:
            containers:
            - name: httpd
              image: httpd:alpine
              readinessProbe:
                exec:
                  command:
                  - stat
                  - /tmp/ready
                initialDelaySeconds: 10
                periodSeconds: 5
