questions:
- question: Create a Pod manifest named `args-pod` with a container named `busybox-container`
    using the `busybox` image. Override the container's command to be `[/bin/sh,
    -c]` and its arguments to be `[echo Hello world]` . The Pod should have a
    `restartPolicy` of `Never`.
  source: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/
  suggestion:
  - apiVersion: v1
    kind: Pod
    metadata:
      name: args-pod
    spec:
      containers:
      - args:
        - echo Hello world
        command:
        - /bin/sh
        - -c
        image: busybox
        name: busybox-container
      restartPolicy: Never
- question: '**Scenario:** In Kubernetes, you often need to run a container with a
    different command than the one specified in its Dockerfile. For example, you might
    want to run a one-off debugging script, or start a database container with a custom
    configuration flag. You can override a container''s default startup instruction
    (`ENTRYPOINT`) and its default arguments (`CMD`) directly in the Pod manifest.
    *   `spec.containers.command` overrides the image''s `ENTRYPOINT`. *   `spec.containers.args`
    overrides the image''s `CMD`. **Your Task:** Create a Pod manifest for a container
    that uses the `busybox` image. Your goal is to override its default command to
    make it print the word "hello" to its standard output and then remain running.
    **Requirements:** 1.  **Pod Name:** The Pod should be named `cmd-args`. 2.  **Image:**
    Use the `busybox` image. 3.  **Command:** The container should execute a shell.
    Use the `command` field to set this to `["sh", "-c"]`. 4.  **Arguments:** The
    shell should be given a command string to execute. Use the `args` field to provide
    a string that first prints "hello" and then sleeps for a long time (e.g., `echo
    hello && sleep 3600`). The `sleep` command ensures the container remains in a
    `Running` state for inspection." '
  source: https://stackoverflow.com/questions/28976455/start-kubernetes-container-with-specific-command
  suggestion:
  - apiVersion: v1
    kind: Pod
    metadata:
      name: cmd-args
    spec:
      containers:
      - args:
        - echo hello && sleep 3600
        command:
        - sh
        - -c
        image: busybox
        name: c
- question: Create a Pod manifest named 'envfrom-cm'. The Pod should have a container
    named 'c' that uses the 'busybox' image. Configure the container to import all
    key-value pairs from the ConfigMap named 'app-cm' as environment variables.
  source: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/
  suggestion:
  - apiVersion: v1
    kind: Pod
    metadata:
      name: envfrom-cm
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-cm
        image: busybox
        name: c
- question: 'Create a pod named ''env-pod-2'' with image ''nginx'' that runs the command
    ''echo $(FIRST) $(SECOND)!'' and defines two environment variables: FIRST=Welcome
    and SECOND=CKAD. The pod should output ''Welcome CKAD!'' to its logs and should
    be configured to run in the ''default'' namespace with a ''restartPolicy'' of
    ''Never'''
  rationale: This question tests the candidate's ability to define environment variables,
    set a custom command, and work with pod configurations such as namespace and restart
    policy in the context of a CKAD exam.
  solution: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: env-pod-2\n  namespace: default\nspec:\n  containers:\n  - name: nginx-container\n    image: nginx\n    command: [\"/bin/sh\", \"-c\"]\n    args: [\"echo $(FIRST) $(SECOND)!\"]\n    env:\n    - name: FIRST\n      value: Welcome\n    - name: SECOND\n      value: CKAD\n  restartPolicy: Never"
  source: https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/