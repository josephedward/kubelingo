questions:
  # 1) Pod question
  - question: >
      Create a Pod named 'cache-server' that runs a container
      with the image 'redis:6.2'. The container should be named
      'cache-server' and expose port 6379.
    suggestion:
      - "kubectl run cache-server --image=redis:6.2 --port=6379"
      - apiVersion: v1
        kind: Pod
        metadata:
          name: cache-server
        spec:
          containers:
            - name: cache-server
              image: redis:6.2
              ports:
                - containerPort: 6379
      - apiVersion: v1
        kind: Pod
        metadata:
          name: cache-server
          labels:
            app: cache
        spec:
          containers:
            - name: cache-server
              image: redis:6.2
              ports:
                - containerPort: 6379
              resources:
                requests:
                  cpu: "50m"
                  memory: "64Mi"
    requirements:
      kind: Pod
      name: cache-server
      image: redis:6.2
      port: 6379

  # 2) PVC question
  - question: >
      Create a PersistentVolumeClaim named 'data-pvc' that requests
      5Gi of storage with ReadWriteOnce access mode. Use the
      default storage class.
    suggestion:
      - "kubectl create pvc data-pvc --storage=5Gi --access-mode=ReadWriteOnce"
      - apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: data-pvc
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
    requirements:
      kind: PersistentVolumeClaim
      name: data-pvc
      storage: 5Gi
      access_modes:
        - ReadWriteOnce

  # 3) Service question
  - question: >
      Create a Service of type NodePort named 'web-svc' that exposes
      port 80 on target port 8080 for Pods labeled app=web.
    suggestion:
      - "kubectl expose deployment web --name=web-svc --port=80 --target-port=8080 --type=NodePort"
      - apiVersion: v1
        kind: Service
        metadata:
          name: web-svc
        spec:
          type: NodePort
          selector:
            app: web
          ports:
            - port: 80
              targetPort: 8080
    requirements:
      kind: Service
      name: web-svc
      service_type: NodePort
      port: 80
      targetPort: 8080
      selector:
        app: web

  # 4) Deployment question
  - question: >
      Create a Deployment named 'nginx-deploy' with 3 replicas
      of the image 'nginx:1.21', each container exposing port 80.
    suggestion:
      - "kubectl create deployment nginx-deploy --image=nginx:1.21 --replicas=3"
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: nginx-deploy
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: nginx-deploy
          template:
            metadata:
              labels:
                app: nginx-deploy
            spec:
              containers:
                - name: nginx-deploy
                  image: nginx:1.21
                  ports:
                    - containerPort: 80
    requirements:
      kind: Deployment
      name: nginx-deploy
      image: nginx:1.21
      replicas: 3
      port: 80