- id: secret-mgmt-q1
  prompt: Create a Secret named 'db-creds' with username=admin and password=password123
  type: command
  metadata:
    id: secret-mgmt-q1
    category: Secret Management
    response: kubectl create secret generic db-creds --from-literal=username=admin
      --from-literal=password=password123
    validator:
      type: ai
      expected: kubectl create secret generic db-creds --from-literal=username=admin
        --from-literal=password=password123
    links:
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
- id: secret-mgmt-q2
  prompt: Create a Secret named 'tls-cert' from a certificate file
  type: command
  metadata:
    id: secret-mgmt-q2
    category: Secret Management
    response: kubectl create secret generic tls-cert --from-file=/path/to/cert.pem
    validator:
      type: ai
      expected: kubectl create secret generic tls-cert --from-file=/path/to/cert.pem
    links:
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
- id: secret-mgmt-q3
  prompt: View the encoded values in a Secret named 'api-secrets'
  type: command
  metadata:
    id: secret-mgmt-q3
    category: Secret Management
    response: kubectl get secret api-secrets -o yaml
    validator:
      type: ai
      expected: kubectl get secret api-secrets -o yaml
    links:
    - https://kubernetes.io/docs/tasks/configmap-secret/managing-secret-using-config-file/#:~:text=Managing%20Secrets%20using%20Configuration%20File,yaml
- id: secret-mgmt-q4
  prompt: Encode a string for use in a Secret YAML definition
  type: command
  metadata:
    id: secret-mgmt-q4
    category: Secret Management
    response: echo -n 'string' | base64
    links:
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
- id: secret-mgmt-q5
  prompt: Decode a base64 encoded Secret value
  type: command
  metadata:
    id: secret-mgmt-q5
    category: Secret Management
    response: echo -n 'encoded string...' | base64 --decode
    links:
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
- id: secret-mgmt-q6
  prompt: Create a TLS Secret type from certificate and key files
  type: command
  metadata:
    id: secret-mgmt-q6
    category: Secret Management
    response: kubectl create secret tls my-tls --cert=path/to/cert.crt --key=path/to/key.key
    validator:
      type: ai
      expected: kubectl create secret tls my-tls --cert=path/to/cert.crt --key=path/to/key.key
    links:
    - https://kubernetes.io/docs/concepts/configuration/secret/#:~:text=kubectl%20get%20secret%20secret,which%20is
- id: secret-mgmt-q8
  prompt: Create a Secret from a .env file
  type: command
  metadata:
    id: secret-mgmt-q8
    category: Secret Management
    response: kubectl create secret generic my-secrets --from-env-file=.env
    validator:
      type: ai
      expected: kubectl create secret generic my-secrets --from-env-file=.env
    links:
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
- id: secret-mgmt-q10
  prompt: Create a docker-registry type Secret for private registry authentication
  type: command
  metadata:
    id: secret-mgmt-q10
    category: Secret Management
    response: kubectl create secret docker-registry regcred --docker-server=REGISTRY_SERVER
      --docker-username=USERNAME --docker-password=PASSWORD --docker-email=EMAIL
    validator:
      type: ai
      expected: kubectl create secret docker-registry regcred --docker-server=REGISTRY_SERVER
        --docker-username=USERNAME --docker-password=PASSWORD --docker-email=EMAIL
    links:
    - https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#:~:text=Pull%20an%20Image%20from%20a,your
