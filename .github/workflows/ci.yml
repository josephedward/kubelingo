
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a compatible Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements.txt
        pip install pytest build twine

    - name: Run tests
      run: pytest

  publish:
    needs: test
    if: github.event_name == 'push' && success()
    runs-on: ubuntu-latest
    environment: release
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install publishing dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Increment version
      run: |
        sed -i -E 's/^(version = "[0-9]+\.[0-9]+\.)([0-9]+)"$/echo "\1$((\2+1))"/e' pyproject.toml
        cat pyproject.toml # For debugging: show the updated version
    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*
