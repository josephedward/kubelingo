
# 2025-08-13 15:25:24.504318
+help me design an app that helps me study for the CKAD 

# 2025-08-13 15:25:57.741839
+proceed

# 2025-08-13 15:26:17.956431
+help me design an app that helps me study for the CKAD - it should be a CLI app since the CKAD is on CLI 

# 2025-08-13 15:27:03.731270
+/run pip install -r requirements.txt

# 2025-08-13 15:27:03.731422
+/run pip install -r requirements.txt

# 2025-08-13 15:27:08.172233
+/run python ckad_study.py core_concepts

# 2025-08-13 15:27:08.172374
+/run python ckad_study.py core_concepts

# 2025-08-13 15:27:30.407396
+it should let me enter commands to teset 

# 2025-08-13 15:28:53.069777
+/run python ckad_study.py core_concepts

# 2025-08-13 15:28:53.070075
+/run python ckad_study.py core_concepts

# 2025-08-13 15:31:45.809015
+Implement llm-gemini to provide feedback on each question and fuzzy matching for aliased commands 

# 2025-08-13 15:32:12.744875
+y

# 2025-08-13 15:32:16.326078
+/run python ckad_study.py core_concepts

# 2025-08-13 15:33:16.906481
+/run pip install -r requirements.txt

# 2025-08-13 15:33:16.906685
+/run pip install -r requirements.txt

# 2025-08-13 15:33:46.901807
+/run export GEMINI_API_KEY=AIzaSyBqnZHNKEquoJV_1-SEwV41t8pL1br6CJM

# 2025-08-13 15:33:57.278115
+python ckad_study.py core_concepts   

# 2025-08-13 15:34:00.634297
+/run python ckad_study.py core_concepts   

# 2025-08-13 15:36:26.690411
+create questions for all of these subject areas: '''   ○ Linux Syntax(Commands from Vim, Kubectl, Docker ,Helm )  (12)
+   ○ Core workloads (Pods, ReplicaSets, Deployments; rollouts/rollbacks) (30)
+   ○ Pod design patterns (initContainers, sidecars, lifecycle hooks) (5)
+   ○ Commands, args, and env (ENTRYPOINT/CMD overrides, env/envFrom) (17)
+   ○ App configuration (ConfigMaps, Secrets, projected & downwardAPI volumes) (9)
+   ○ Probes & health (liveness, readiness, startup; graceful shutdown)(22)
+   ○ Resource management (requests/limits, QoS classes, HPA basics) (13)
+   ○ Jobs & CronJobs (completions, parallelism, backoff, schedules) (40)
+   ○ Services (ClusterIP/NodePort/LoadBalancer, selectors, headless) (19)
+   ○ Ingress & HTTP routing (basic rules, paths, service backends) (53)
+   ○ Networking utilities (DNS in-cluster, port-forward, exec, curl) (40)
+   ○ Persistence (PVCs, using existing StorageClasses, common volume types) (8)
+   ○ Observability & troubleshooting (logs, describe/events, kubectl debug/ephemeral containers)(18)
+   ○ Labels, annotations & selectors (label ops, field selectors, jsonpath) (19)
+   ○ Imperative vs declarative (—dry-run, create/apply/edit/replace/patch) (22)
+   ○ Image & registry use (imagePullPolicy, imagePullSecrets, private registries)
+   ○ Security basics (securityContext, runAsUser/fsGroup, capabilities, readOnlyRootFilesystem) (12)
+   ○ ServiceAccounts in apps (mounting SA, minimal RBAC needed for app access) (15)
+   ○ Scheduling hints (nodeSelector, affinity/anti-affinity, tolerations) (20)
+   ○ Namespaces & contexts (scoping resources, default namespace, context switching) (23)
+   ○ API discovery & docs (kubectl explain, api-resources, api-versions) (17)
+''' and let the user pick 

# 2025-08-13 15:38:00.751558
+A

# 2025-08-13 15:38:13.441916
+/run python ckad_study.py

# 2025-08-13 15:38:13.442038
+/run python ckad_study.py

# 2025-08-13 15:38:50.612024
+/drop

# 2025-08-13 15:39:46.593411
+well, on the vim quiz, fuzzy matching did not happen, I entered ":x" instead of ":wq" and I got it wrong when it performs the same function

# 2025-08-13 15:42:00.227703
+well, ideally the fuzzy matching would be handled by ai - but we got this error: '''--- AI Feedback ---
+Error getting feedback from LLM: 404 models/gemini-pro is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.
+----------------------------------------
+
+
+'''

# 2025-08-13 15:43:37.986517
+I think you should keep them - I like that approach, but both are needed 

# 2025-08-13 15:45:46.148534
+/run pip install -r requirements.txt

# 2025-08-13 15:45:46.148978
+/run pip install -r requirements.txt

# 2025-08-13 15:45:54.752282
+--- AI Feedback ---
+Error getting feedback from LLM: 404 models/gemini-1.0-pro is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.
+----------------------------------------
+
+
+
+
+

# 2025-08-13 15:46:22.280998
+/run python ckad_study.py

# 2025-08-13 15:46:22.281462
+/run python ckad_study.py

# 2025-08-13 15:51:00.032291
+we need to build in a few more features: - the app should automatically store missed questions into their own lists - the user should be able flag/triage questions that do not have the level of detail needed or are problematic (another list)- the user needs to be able to enter vim and edit manifests for these questions, with an AI evaluation on exiting vim - the user needs to be ablt to generate more similar questions with AI 

# 2025-08-13 16:00:59.549336
+you may just want to have vim as an option on all quizzes, so we can have manifest-based questions for any subject? And if you are going to grade as soon as they quit, you should prep a vim template with the question in it. Some of the CKAD questions will have you edit yaml manifests instead of create them from scratch, so that must be accounted for as well. 

# 2025-08-13 16:03:30.440039
+/run python ckad_study.py

# 2025-08-13 16:03:30.440294
+/run python ckad_study.py

# 2025-08-13 16:04:05.097731
+manifest questions is a bit redundant now that you have vim for every section, right ?

# 2025-08-13 16:05:27.503835
+/run rm questions/manifest_question.yaml

# 2025-08-13 16:05:27.504223
+/run rm questions/manifest_question.yaml

# 2025-08-13 16:06:26.568618
+just ro bw clear, I do want both command and manifest-based questions to be on the test, each section should have at least one of each, and when generating should generate either at random 

# 2025-08-13 16:07:13.145069
+I need them for all of them - can you generate at least one for each

# 2025-08-13 16:10:12.046180
+/drop

# 2025-08-13 16:10:15.309978
+/clear

# 2025-08-14 10:21:30.314833
+can you integrate these into their respective categories for studying? '''categories:
+  - topic: Core workloads
+    questions:
+      - q: "Generate a Deployment named web (3 replicas) using image nginx:1.25 and output the manifest."
+        a: "kubectl create deploy web --image=nginx:1.25 --replicas=3 --dry-run=client -o yaml"
+      - q: "Manifest for a Deployment web (2 replicas) with label app=web and container port 80."
+        a: |
+          apiVersion: apps/v1
+          kind: Deployment
+          metadata:
+            name: web
+          spec:
+            replicas: 2
+            selector:
+              matchLabels:
+                app: web
+            template:
+              metadata:
+                labels:
+                  app: web
+              spec:
+                containers:
+                  - name: nginx
+                    image: nginx:1.27
+                    ports:
+                      - containerPort: 80
+
+  - topic: Pod design patterns
+    questions:
+      - q: "Pod manifest with one initContainer that waits 5s before starting app container."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: app-with-init
+          spec:
+            initContainers:
+              - name: wait
+                image: busybox
+                command: ["sh","-c","sleep 5"]
+            containers:
+              - name: app
+                image: nginx
+      - q: "Pod manifest with a sidecar that tails a shared log file."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: app-with-sidecar
+          spec:
+            volumes:
+              - name: logs
+                emptyDir: {}
+            containers:
+              - name: app
+                image: busybox
+                command: ["sh","-c","while true; do date >> /var/log/app/app.log; sleep 2; done"]
+                volumeMounts:
+                  - name: logs
+                    mountPath: /var/log/app
+              - name: log-tailer
+                image: busybox
+                command: ["sh","-c","tail -n+1 -F /var/log/app/app.log"]
+                volumeMounts:
+                  - name: logs
+                    mountPath: /var/log/app
+
+  - topic: Commands, args, and env
+    questions:
+      - q: "Pod manifest overriding command and args to print 'hello'."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: cmd-args
+          spec:
+            containers:
+              - name: c
+                image: busybox
+                command: ["sh","-c"]
+                args: ["echo hello && sleep 3600"]
+      - q: "Pod manifest loading env from a ConfigMap named app-cm."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: envfrom-cm
+          spec:
+            containers:
+              - name: c
+                image: busybox
+                envFrom:
+                  - configMapRef:
+                      name: app-cm
+
+  - topic: App configuration (ConfigMaps & Secrets)
+    questions:
+      - q: "Command to generate a ConfigMap app-cm with MODE=prod, output as YAML."
+        a: "kubectl create configmap app-cm --from-literal=MODE=prod --dry-run=client -o yaml"
+      - q: "Command to generate a generic Secret app-sec with key TOKEN=abc123, output as YAML."
+        a: "kubectl create secret generic app-sec --from-literal=TOKEN=abc123 --dry-run=client -o yaml"
+
+  - topic: Probes & health
+    questions:
+      - q: "Pod manifest with HTTP liveness probe on /healthz port 8080."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: liveness-http
+          spec:
+            containers:
+              - name: app
+                image: nginx
+                livenessProbe:
+                  httpGet:
+                    path: /healthz
+                    port: 8080
+                  initialDelaySeconds: 5
+                  periodSeconds: 10
+      - q: "Pod manifest with readiness exec probe checking /tmp/ready exists."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: readiness-exec
+          spec:
+            containers:
+              - name: app
+                image: busybox
+                command: ["sh","-c","touch /tmp/ready; sleep 3600"]
+                readinessProbe:
+                  exec:
+                    command: ["sh","-c","test -f /tmp/ready"]
+
+  - topic: Resource management
+    questions:
+      - q: "Command to set requests (200m,128Mi) and limits (500m,256Mi) on Deployment web."
+        a: "kubectl set resources deploy/web --requests=cpu=200m,memory=128Mi --limits=cpu=500m,memory=256Mi"
+      - q: "Command to create an HPA for web: min 2, max 5, target 50% CPU."
+        a: "kubectl autoscale deployment web --min=2 --max=5 --cpu-percent=50"
+
+  - topic: Jobs & CronJobs
+    questions:
+      - q: "Job manifest that runs busybox 'sleep 10' once with backoffLimit 2."
+        a: |
+          apiVersion: batch/v1
+          kind: Job
+          metadata:
+            name: run-once
+          spec:
+            backoffLimit: 2
+            template:
+              spec:
+                restartPolicy: Never
+                containers:
+                  - name: c
+                    image: busybox
+                    command: ["sh","-c","sleep 10"]
+      - q: "Command to generate a CronJob hello that echoes 'hi' every 5 minutes, output YAML."
+        a: "kubectl create cronjob hello --image=busybox --schedule='*/5 * * * *' -- /bin/sh -c 'echo hi' --dry-run=client -o yaml"
+
+  - topic: Services
+    questions:
+      - q: "Service manifest (ClusterIP) exposing app=web on port 80 to targetPort 8080."
+        a: |
+          apiVersion: v1
+          kind: Service
+          metadata:
+            name: web
+          spec:
+            selector:
+              app: web
+            ports:
+              - port: 80
+                targetPort: 8080
+      - q: "Headless Service manifest for app=db on port 5432."
+        a: |
+          apiVersion: v1
+          kind: Service
+          metadata:
+            name: db
+          spec:
+            clusterIP: None
+            selector:
+              app: db
+            ports:
+              - port: 5432
+                targetPort: 5432
+
+  - topic: Ingress & HTTP routing
+    questions:
+      - q: "Ingress manifest routing '/' to Service web:80."
+        a: |
+          apiVersion: networking.k8s.io/v1
+          kind: Ingress
+          metadata:
+            name: web
+          spec:
+            rules:
+              - http:
+                  paths:
+                    - path: /
+                      pathType: Prefix
+                      backend:
+                        service:
+                          name: web
+                          port:
+                            number: 80
+      - q: "Ingress manifest with two paths: '/api' -> api-svc:80 and '/' -> web-svc:80."
+        a: |
+          apiVersion: networking.k8s.io/v1
+          kind: Ingress
+          metadata:
+            name: routes
+          spec:
+            rules:
+              - http:
+                  paths:
+                    - path: /api
+                      pathType: Prefix
+                      backend:
+                        service:
+                          name: api-svc
+                          port:
+                            number: 80
+                    - path: /
+                      pathType: Prefix
+                      backend:
+                        service:
+                          name: web-svc
+                          port:
+                            number: 80
+
+  - topic: Networking utilities
+    questions:
+      - q: "Command to port-forward Service web port 80 to local 8080."
+        a: "kubectl port-forward svc/web 8080:80"
+      - q: "Command to exec into a Pod named nginx-abc with a shell."
+        a: "kubectl exec -it nginx-abc -- sh"
+
+  - topic: Persistence
+    questions:
+      - q: "Pod manifest using an emptyDir volume mounted at /cache."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: cache-user
+          spec:
+            volumes:
+              - name: cache
+                emptyDir: {}
+            containers:
+              - name: app
+                image: busybox
+                volumeMounts:
+                  - name: cache
+                    mountPath: /cache
+      - q: "PVC manifest requesting 1Gi, ReadWriteOnce."
+        a: |
+          apiVersion: v1
+          kind: PersistentVolumeClaim
+          metadata:
+            name: data-pvc
+          spec:
+            accessModes: ["ReadWriteOnce"]
+            resources:
+              requests:
+                storage: 1Gi
+
+  - topic: Observability & troubleshooting
+    questions:
+      - q: "Command to get the last 100 log lines from Pod web-0."
+        a: "kubectl logs web-0 --tail=100"
+      - q: "Command to add an ephemeral debug container to Pod web-0 and open a shell."
+        a: "kubectl debug pod/web-0 -it --image=busybox"
+
+  - topic: Labels, annotations & selectors
+    questions:
+      - q: "Command to label Namespace prod with tier=backend (overwrite if exists)."
+        a: "kubectl label ns prod tier=backend --overwrite"
+      - q: "Command to list Pod names only using jsonpath."
+        a: "kubectl get pods -o jsonpath='{.items[*].metadata.name}'"
+
+  - topic: Imperative vs declarative
+    questions:
+      - q: "Command to generate a Pod manifest named web-pod using image nginx."
+        a: "kubectl run web-pod --image=nginx --restart=Never --dry-run=client -o yaml"
+      - q: "Command to declaratively apply all manifests in ./manifests."
+        a: "kubectl apply -f ./manifests"
+
+  - topic: Image & registry use
+    questions:
+      - q: "Command to generate a docker-registry pull secret regcred (output YAML)."
+        a: "kubectl create secret docker-registry regcred --docker-server=registry.example.com --docker-username=USER --docker-password=PASS --docker-email=user@example.com --dry-run=client -o yaml"
+      - q: "Pod manifest with imagePullPolicy Always and using imagePullSecrets regcred."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: pull-demo
+          spec:
+            imagePullSecrets:
+              - name: regcred
+            containers:
+              - name: c
+                image: nginx
+                imagePullPolicy: Always
+
+  - topic: Security basics
+    questions:
+      - q: "Pod manifest running as non-root user 1000 with fsGroup 2000."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: nonroot
+          spec:
+            securityContext:
+              runAsUser: 1000
+              runAsNonRoot: true
+              fsGroup: 2000
+            containers:
+              - name: app
+                image: busybox
+                command: ["sh","-c","sleep 3600"]
+      - q: "Container securityContext dropping all capabilities and readOnlyRootFilesystem."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: strict-container
+          spec:
+            containers:
+              - name: app
+                image: busybox
+                command: ["sh","-c","sleep 3600"]
+                securityContext:
+                  readOnlyRootFilesystem: true
+                  capabilities:
+                    drop: ["ALL"]
+
+  - topic: ServiceAccounts in apps
+    questions:
+      - q: "Command to generate a ServiceAccount app-sa (output YAML)."
+        a: "kubectl create serviceaccount app-sa --dry-run=client -o yaml"
+      - q: "Pod manifest using serviceAccountName app-sa and not auto-mounting token."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: sa-pod
+          spec:
+            serviceAccountName: app-sa
+            automountServiceAccountToken: false
+            containers:
+              - name: app
+                image: busybox
+                command: ["sh","-c","sleep 3600"]
+
+  - topic: Scheduling hints
+    questions:
+      - q: "Deployment manifest with nodeSelector disktype=ssd."
+        a: |
+          apiVersion: apps/v1
+          kind: Deployment
+          metadata:
+            name: scheduled
+          spec:
+            replicas: 1
+            selector:
+              matchLabels:
+                app: scheduled
+            template:
+              metadata:
+                labels:
+                  app: scheduled
+              spec:
+                nodeSelector:
+                  disktype: ssd
+                containers:
+                  - name: app
+                    image: nginx
+      - q: "Pod manifest tolerating taint 'dedicated=ml:NoSchedule'."
+        a: |
+          apiVersion: v1
+          kind: Pod
+          metadata:
+            name: tolerate-ml
+          spec:
+            tolerations:
+              - key: "dedicated"
+                operator: "Equal"
+                value: "ml"
+                effect: "NoSchedule"
+            containers:
+              - name: app
+                image: busybox
+                command: ["sh","-c","sleep 3600"]
+
+  - topic: Namespaces & contexts
+    questions:
+      - q: "Command to generate Namespace dev as YAML."
+        a: "kubectl create namespace dev --dry-run=client -o yaml"
+      - q: "Command to set the current context's default Namespace to dev."
+        a: "kubectl config set-context --current --namespace=dev"
+
+  - topic: API discovery & docs
+    questions:
+      - q: "Command to list namespaced resources supporting 'list'."
+        a: "kubectl api-resources --verbs=list --namespaced"
+      - q: "Command to view the fields under Deployment.spec.strategy."
+        a: "kubectl explain deployment.spec.strategy"'''

# 2025-08-14 10:22:45.189546
+A

# 2025-08-14 10:27:58.621085
+/drop

# 2025-08-14 10:28:01.420232
+/clear

# 2025-08-14 10:28:38.258564
+when a user has gone through all questions of a type, it should bring them back to the main menu 

# 2025-08-14 10:35:29.834319
+/drop

# 2025-08-14 10:36:02.448647
+I renamed ckad_study.py to kubelingo.py. Do you think we should fold 'core concepts' into 'core workloads'? 

# 2025-08-14 10:36:42.095385
+n

# 2025-08-14 10:37:20.238176
+/run rm questions/core_concepts.yaml

# 2025-08-14 10:37:20.238631
+/run rm questions/core_concepts.yaml

# 2025-08-14 10:37:23.171529
+/drop

# 2025-08-14 10:37:27.137102
+/clear

# 2025-08-14 10:38:36.411308
+Can you add all of these to sections where they might be relevant? I am fine with you reformatting the yaml as you see fit: '''questions:
+- answers: []
+  category: General Operations
+  correct_yaml: null
+  difficulty: null
+  explanation: null
+  id: q1
+  initial_files: {}
+  pre_shell_cmds: []
+  prompt: hello
+  response: null
+  review: false
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  source: null
+  source_file: f.yaml
+  type: basic
+  validation_steps: null
+- id: add-cmds-q1
+  prompt: Create an alias 'k' for 'kubectl'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Linux Syntax
+  metadata:
+    id: add-cmds-q1
+    category: Additional Commands
+    response: alias k=kubectl
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=You%20can%20also%20use%20a,that%20also%20works%20with%20completion
+- id: add-cmds-q2
+  prompt: Enable kubectl autocompletion for bash
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Linux Syntax
+  metadata:
+    id: add-cmds-q2
+    category: Additional Commands
+    response: source <(kubectl completion bash)
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=BASH
+- id: add-cmds-q3
+  prompt: Add kubectl autocompletion to ~/.bashrc
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Linux Syntax
+  metadata:
+    id: add-cmds-q3
+    category: Additional Commands
+    response: echo "source <(kubectl completion bash)" >> ~/.bashrc
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=source%20%3C%28kubectl%20completion%20bash%29%20,permanently%20to%20your%20bash%20shell
+- id: add-cmds-q4
+  prompt: Set the KUBECONFIG environment variable to /home/user/config
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Linux Syntax
+  metadata:
+    id: add-cmds-q4
+    category: Additional Commands
+    response: export KUBECONFIG=/home/user/config
+    links:
+    - https://kubernetes.io/pt-br/docs/reference/kubectl/cheatsheet/#:~:text=Define%20com%20qual%20cluster%20Kubernetes,detalhadas%20do%20arquivo%20de%20configura%C3%A7%C3%A3o
+- id: add-cmds-q5
+  prompt: Check the kubectl client and server versions
+  type: command
+  schema_category: Command Syntax
+  subject_matter: API discovery & docs
+  metadata:
+    id: add-cmds-q5
+    category: Additional Commands
+    response: kubectl version
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,on%20the%20client%20and%20server
+- id: add-cmds-q6
+  prompt: Create a namespace named dev
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Namespaces & contexts
+  metadata:
+    id: add-cmds-q6
+    category: Additional Commands
+    response: kubectl create namespace dev
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_namespace/#:~:text=,namespace
+- id: add-cmds-q7
+  prompt: List all namespaces
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Namespaces & contexts
+  metadata:
+    id: add-cmds-q7
+    category: Additional Commands
+    response: kubectl get namespaces
+    links:
+    - https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#:~:text=Viewing%20namespaces
+- id: add-cmds-q8
+  prompt: Describe namespace dev
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Namespaces & contexts
+  metadata:
+    id: add-cmds-q8
+    category: Additional Commands
+    response: kubectl describe namespace dev
+    links:
+    - https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#:~:text=You%20can%20also%20get%20the,of%20a%20specific%20namespace%20using
+- id: add-cmds-q9
+  prompt: Delete namespace dev
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Namespaces & contexts
+  metadata:
+    id: add-cmds-q9
+    category: Additional Commands
+    response: kubectl delete namespace dev
+    links:
+    - https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#:~:text=Delete%20a%20namespace%20with
+- id: add-cmds-q10
+  prompt: Create a deployment named frontend using image nginx:1.14
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q10
+    category: Additional Commands
+    response: kubectl create deployment frontend --image=nginx:1.14
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_deployment/#:~:text=,image%3Dbusybox
+- id: add-cmds-q11
+  prompt: List all deployments
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q11
+    category: Additional Commands
+    response: kubectl get deployments
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=kubectl%20get%20pods%20,all%20pods%20in%20the%20namespace
+- id: add-cmds-q12
+  prompt: Describe deployment frontend
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q12
+    category: Additional Commands
+    response: kubectl describe deployment frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=3,the%20Deployment
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=Labels%3A%20%20%20%20,0
+- id: add-cmds-q13
+  prompt: Scale deployment frontend to 3 replicas
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q13
+    category: Additional Commands
+    response: kubectl scale deployment frontend --replicas=3
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=You%20can%20scale%20a%20Deployment,by%20using%20the%20following%20command
+- id: add-cmds-q14
+  prompt: Roll back the deployment frontend to the previous version
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q14
+    category: Additional Commands
+    response: kubectl rollout undo deployment frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=1,rollback%20to%20the%20previous%20revision
+- id: add-cmds-q15
+  prompt: Restart the deployment frontend
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q15
+    category: Additional Commands
+    response: kubectl rollout restart deployment frontend
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=kubectl%20set%20image%20deployment%2Ffrontend%20www%3Dimage%3Av2,Xem%20tr%E1%BA%A1ng
+- id: add-cmds-q16
+  prompt: Delete deployment frontend
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: add-cmds-q16
+    category: Additional Commands
+    response: kubectl delete deployment frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=The%20output%20is%20similar%20to,this
+- id: add-cmds-q17
+  prompt: Run a pod named busybox with image busybox that runs indefinitely
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Pod design patterns
+  metadata:
+    id: add-cmds-q17
+    category: Additional Commands
+    response: kubectl run busybox --image=busybox --restart=Never -- /bin/sh -c "sleep
+      3600"
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,restart%3DNever
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,argN)
+- id: add-cmds-q18
+  prompt: List all pods
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Pod design patterns
+  metadata:
+    id: add-cmds-q18
+    category: Additional Commands
+    response: kubectl get pods
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=kubectl%20get%20pods%20,all%20pods%20in%20the%20namespace
+- id: add-cmds-q19
+  prompt: Describe pod busybox
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Pod design patterns
+  metadata:
+    id: add-cmds-q19
+    category: Additional Commands
+    response: kubectl describe pod busybox
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=,pod)
+- id: add-cmds-q20
+  prompt: Delete pod busybox
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Pod design patterns
+  metadata:
+    id: add-cmds-q20
+    category: Additional Commands
+    response: kubectl delete pod busybox
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=cat%20pod.json%20,JSON%20%C4%91%C6%B0%E1%BB%A3c%20truy%E1%BB%81n%20v%C3%A0o%20std
+- id: add-cmds-q21
+  prompt: Expose deployment frontend on port 80 as a ClusterIP service named frontend-svc
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Services
+  metadata:
+    id: add-cmds-q21
+    category: Additional Commands
+    response: kubectl expose deployment frontend --port=80 --type=ClusterIP --name=frontend-svc
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=,port%3D8000
+- id: add-cmds-q22
+  prompt: List all services
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Services
+  metadata:
+    id: add-cmds-q22
+    category: Additional Commands
+    response: kubectl get services
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=,current%20namespace%2C%20with%20more%20details
+- id: add-cmds-q23
+  prompt: Describe service frontend-svc
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Services
+  metadata:
+    id: add-cmds-q23
+    category: Additional Commands
+    response: kubectl describe service frontend-svc
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=,pod)
+- id: add-cmds-q24
+  prompt: Delete service frontend-svc
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Services
+  metadata:
+    id: add-cmds-q24
+    category: Additional Commands
+    response: kubectl delete service frontend-svc
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=,port%3D8000
+- id: add-cmds-q25
+  prompt: Create a ConfigMap named app-config from file config.yaml
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: add-cmds-q25
+    category: Additional Commands
+    response: kubectl create configmap app-config --from-file=config.yaml
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=files%3A%20
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=)
+- id: add-cmds-q26
+  prompt: List all ConfigMaps
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: add-cmds-q26
+    category: Additional Commands
+    response: kubectl get configmaps
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Endpoints
+- id: add-cmds-q27
+  prompt: Describe configmap app-config
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: add-cmds-q27
+    category: Additional Commands
+    response: kubectl describe configmap app-config
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=pods%2Fpod,to%20clipboard
+- id: add-cmds-q28
+  prompt: Delete configmap app-config
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: add-cmds-q28
+    category: Additional Commands
+    response: kubectl delete configmap app-config
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Before%20proceeding%2C%20clean%20up%20some,of%20the%20ConfigMaps%20you%20made
+- id: add-cmds-q29
+  prompt: Create a generic secret named db-secret with literal username and password
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Security basics
+  metadata:
+    id: add-cmds-q29
+    category: Additional Commands
+    response: kubectl create secret generic db-secret --from-literal=username=admin
+      --from-literal=password=secret
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: add-cmds-q30
+  prompt: List all secrets
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Security basics
+  metadata:
+    id: add-cmds-q30
+    category: Additional Commands
+    response: kubectl get secrets
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Service
+- id: add-cmds-q31
+  prompt: Describe secret db-secret
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Security basics
+  metadata:
+    id: add-cmds-q31
+    category: Additional Commands
+    response: kubectl describe secret db-secret
+    links:
+    - https://kubernetes.io/docs/tasks/configmap-secret/managing-secret-using-config-file/#:~:text=Managing%20Secrets%20using%20Configuration%20File,yaml
+- id: add-cmds-q32
+  prompt: Delete secret db-secret
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Security basics
+  metadata:
+    id: add-cmds-q32
+    category: Additional Commands
+    response: kubectl delete secret db-secret
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=kubectl%20label%20pods%20my,T%E1%BB%B1%20%C4%91%E1%BB%99ng
+- id: add-cmds-q33
+  prompt: Create a ServiceAccount named default-sa
+  type: command
+  schema_category: Command Syntax
+  subject_matter: ServiceAccounts in apps
+  metadata:
+    id: add-cmds-q33
+    category: Additional Commands
+    response: kubectl create serviceaccount default-sa
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Service
+- id: add-cmds-q34
+  prompt: List all ServiceAccounts
+  type: command
+  schema_category: Command Syntax
+  subject_matter: ServiceAccounts in apps
+  metadata:
+    id: add-cmds-q34
+    category: Additional Commands
+    response: kubectl get serviceaccounts
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Service
+- id: add-cmds-q35
+  prompt: Describe serviceaccount default-sa
+  type: command
+  schema_category: Command Syntax
+  subject_matter: ServiceAccounts in apps
+  metadata:
+    id: add-cmds-q35
+    category: Additional Commands
+    response: kubectl describe serviceaccount default-sa
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: add-cmds-q36
+  prompt: Delete serviceaccount default-sa
+  type: command
+  schema_category: Command Syntax
+  subject_matter: ServiceAccounts in apps
+  metadata:
+    id: add-cmds-q36
+    category: Additional Commands
+    response: kubectl delete serviceaccount default-sa
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Service
+- id: add-cmds-q37
+  prompt: Label pod busybox with env=prod
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Metadata Labels, annotations & selectors
+  metadata:
+    id: add-cmds-q37
+    category: Additional Commands
+    response: kubectl label pod busybox env=prod
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=kubectl%20replace%20
+- id: add-cmds-q38
+  prompt: Remove the label env from pod busybox
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Metadata Labels, annotations & selectors
+  metadata:
+    id: add-cmds-q38
+    category: Additional Commands
+    response: kubectl label pod busybox env-
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=kubectl%20replace%20
+- id: add-cmds-q39
+  prompt: Annotate deployment frontend with description=test
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Metadata Labels, annotations & selectors
+  metadata:
+    id: add-cmds-q39
+    category: Additional Commands
+    response: kubectl annotate deployment frontend description=test
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=kubectl%20replace%20
+- id: add-cmds-q40
+  prompt: Remove the annotation description from deployment frontend
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Metadata Labels, annotations & selectors
+  metadata:
+    id: add-cmds-q40
+    category: Additional Commands
+    response: kubectl annotate deployment frontend description-
+    links:
+    - https://kubernetes.io/vi/docs/reference/kubectl/cheatsheet/#:~:text=kubectl%20label%20pods%20my,T%E1%BB%B1%20%C4%91%E1%BB%99ng
+- id: add-cmds-q41
+  prompt: Apply the configuration in deployment.yaml
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Imperative vs declarative
+  metadata:
+    id: add-cmds-q41
+    category: Additional Commands
+    response: kubectl apply -f deployment.yaml
+    links:
+    - https://kubernetes.io/pt-br/docs/reference/kubectl/cheatsheet/#:~:text=Manifestos%20Kubernetes%20podem%20ser%20definidos,podem%20ser%20usadas
+- id: add-cmds-q42
+  prompt: Use kubectl to edit deployment frontend
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Imperative vs declarative
+  metadata:
+    id: add-cmds-q42
+    category: Additional Commands
+    response: kubectl edit deployment frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=3,the%20Deployment
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=Labels%3A%20%20%20%20,0
+- id: cm-ops-q1
+  prompt: 'Create a ConfigMap named ''app-config'' with key-value pairs: APP_COLOR=blue
+    and APP_MODE=prod'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q1
+    category: ConfigMap Operations
+    response: kubectl create cm app-config --from-literal=APP_COLOR=blue --from-literal=APP_MODE=prod
+    validator:
+      type: ai
+      expected: kubectl create cm app-config --from-literal=APP_COLOR=blue --from-literal=APP_MODE=prod
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=apiVersion%3A%20v1%20kind%3A%20Pod%20metadata%3A,c%22%2C%20%22env%22
+- id: cm-ops-q2
+  prompt: Create a ConfigMap named 'game-config' from a configuration file located
+    at '/configs/game.properties'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q2
+    category: ConfigMap Operations
+    response: kubectl create cm game-config --from-file=/configs/game.properties
+    validator:
+      type: ai
+      expected: kubectl create cm game-config --from-file=/configs/game.properties
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=files%3A%20
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=)
+- id: cm-ops-q3
+  prompt: View the contents of a ConfigMap named 'db-config'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q3
+    category: ConfigMap Operations
+    response: kubectl describe cm db-config
+    validator:
+      type: ai
+      expected: kubectl describe cm db-config
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=pods%2Fpod,to%20clipboard
+- id: cm-ops-q4
+  prompt: Create a ConfigMap from all files in the '/configs' directory
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q4
+    category: ConfigMap Operations
+    response: kubectl create cm app-settings --from-file=/configs
+    validator:
+      type: ai
+      expected: kubectl create cm app-settings --from-file=/configs
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=files%3A%20
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=)
+- id: cm-ops-q6
+  prompt: Extract a ConfigMap to YAML format
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q6
+    category: ConfigMap Operations
+    response: kubectl get cm app-config -o yaml > config.yaml
+    validator:
+      type: ai
+      expected: kubectl get cm app-config -o yaml > config.yaml
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=pods%2Fpod,to%20clipboard
+- id: cm-ops-q7
+  prompt: Update a value in an existing ConfigMap named 'app-config'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q7
+    category: ConfigMap Operations
+    response: kubectl edit cm app-config
+    validator:
+      type: ai
+      expected: kubectl edit cm app-config
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+- id: cm-ops-q8
+  prompt: Create a ConfigMap named 'multi-config' with key-value pairs DB_URL=mysql://db,
+    API_KEY=123456, and DEBUG=true from the command line
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q8
+    category: ConfigMap Operations
+    response: kubectl create cm multi-config --from-literal=DB_URL=mysql://db --from-literal=API_KEY=123456
+      --from-literal=DEBUG=true
+    validator:
+      type: ai
+      expected: kubectl create cm multi-config --from-literal=DB_URL=mysql://db --from-literal=API_KEY=123456
+        --from-literal=DEBUG=true
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: cm-ops-q11
+  prompt: Create a configmap named configmap-web-moon-html in namespace moon from
+    the file /opt/course/15/web-moon.html with key index.html.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q11
+    category: ConfigMap Operations
+    response: kubectl -n moon create configmap configmap-web-moon-html --from-file=index.html=/opt/course/15/web-moon.html
+- id: cm-ops-q10
+  prompt: Create a ConfigMap from an env file
+  type: command
+  schema_category: Command Syntax
+  subject_matter: App configuration
+  metadata:
+    id: cm-ops-q10
+    category: ConfigMap Operations
+    response: kubectl create cm env-config --from-env-file=config.env
+    validator:
+      type: ai
+      expected: kubectl create cm env-config --from-env-file=config.env
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: ckad-sim::q5-sa-secret
+  prompt: In namespace `neptune`, find the Secret associated with the ServiceAccount
+    `neptune-sa-v2` and write its decoded token to the file `/opt/course/5/token`.
+  type: live_k8s_edit
+  schema_category: Command Syntax
+  subject_matter: ServiceAccounts in apps
+  pre_shell_cmds:
+  - kubectl create namespace neptune
+  - kubectl -n neptune create sa neptune-sa-v2
+  - kubectl -n neptune create secret generic neptune-secret-1 --from-literal=token=$(echo
+    -n my-secret-token-value | base64)
+  - kubectl -n neptune annotate secret neptune-secret-1 kubernetes.io/service-account.name=neptune-sa-v2
+  - mkdir -p /opt/course/5
+  validation_steps:
+  - cmd: cat /opt/course/5/token
+    matcher: {}
+  explanation: 'First, find the secret associated with the ServiceAccount `neptune-sa-v2`.
+    You can do this by listing secrets in the `neptune` namespace and checking their
+    annotations (`k -n neptune get secrets -o yaml`). The secret with the annotation
+    `kubernetes.io/service-account.name: neptune-sa-v2` is the correct one. Then,
+    get the token from the secret''s data, base64 decode it, and write it to the specified
+    file. A quick way is `kubectl -n neptune get secret <secret-name> -o jsonpath=''{.data.token}''
+    | base64 --decode > /opt/course/5/token`.'
+  metadata:
+    id: ckad-sim::q5-sa-secret
+    type: live_k8s_edit
+    category: Configuration & Security
+    source: https://killer.sh/ckad
+- id: ckad-sim::q6-readinessprobe
+  prompt: Create a single Pod named `pod6` in namespace `default` with image `busybox:1.31.0`.
+    The pod should run the command `touch /tmp/ready && sleep 1d`. Configure a readiness
+    probe that executes `cat /tmp/ready`, with an `initialDelaySeconds` of 5 and a
+    `periodSeconds` of 10. Create the pod and ensure it becomes ready.
+  type: live_k8s_edit
+  schema_category: YAML Manifest
+  subject_matter: Probes & health
+  validation_steps:
+  - cmd: kubectl get pod pod6 -o jsonpath='{.spec.containers[0].readinessProbe.initialDelaySeconds}'
+    matcher: {}
+  - cmd: kubectl get pod pod6 -o jsonpath='{.spec.containers[0].readinessProbe.periodSeconds}'
+    matcher: {}
+  - cmd: kubectl get pod pod6 -o jsonpath='{.spec.containers[0].command[2]}'
+    matcher: {}
+  - cmd: kubectl wait --for=condition=Ready pod/pod6 --timeout=30s
+    matcher: {}
+  explanation: A pod manifest can be generated using `kubectl run pod6 --image=busybox:1.31.0
+    --command -- sh -c "touch /tmp/ready && sleep 1d" --dry-run=client -o yaml`. Then,
+    edit the YAML to add the `readinessProbe` section to the container spec. The probe
+    should have an `exec` action with the command, and the specified `initialDelaySeconds`
+    and `periodSeconds`. Finally, create the pod with `kubectl apply -f <file.yaml>`.
+    You can monitor its status with `kubectl get pod pod6 -w`.
+  metadata:
+    id: ckad-sim::q6-readinessprobe
+    type: live_k8s_edit
+    category: Configuration & Security
+    source: https://killer.sh/ckad
+- id: ckad-sim::q7-move-pod
+  prompt: 'A pod named `webserver-sat-003` in namespace `saturn` needs to be moved
+    to namespace `neptune`. The pod is identifiable by the annotation `description:
+    this is the server for the E-Commerce System my-happy-shop`. Export its YAML,
+    modify it to run in the `neptune` namespace, apply the new manifest, and then
+    delete the original pod from `saturn`.'
+  type: live_k8s_edit
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  pre_shell_cmds:
+  - kubectl create ns saturn
+  - kubectl create ns neptune
+  - "cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Pod\nmetadata:\n  name:\
+    \ webserver-sat-003\n  namespace: saturn\n  labels:\n    id: webserver-sat-003\n\
+    \  annotations:\n    description: 'this is the server for the E-Commerce System\
+    \ my-happy-shop'\nspec:\n  containers:\n  - name: webserver-sat\n    image: nginx:1.16.1-alpine\n\
+    EOF\n"
+  validation_steps:
+  - cmd: kubectl -n neptune get pod webserver-sat-003 -o jsonpath='{.metadata.namespace}'
+    matcher: {}
+  - cmd: '! kubectl -n saturn get pod webserver-sat-003'
+    matcher: {}
+  explanation: The process involves exporting the Pod's YAML using `kubectl get pod
+    <pod-name> -n <namespace> -o yaml`. Then, edit the file to change the `namespace`
+    field and remove runtime-injected fields like `status`, `resourceVersion`, `uid`,
+    and `creationTimestamp`. After saving the cleaned YAML, create the Pod in the
+    new namespace with `kubectl apply -f <file.yaml>` and delete the original pod
+    with `kubectl delete pod <pod-name> -n <old-namespace>`.
+  metadata:
+    id: ckad-sim::q7-move-pod
+    type: live_k8s_edit
+    category: Core Concepts
+    source: https://killer.sh/ckad
+- id: ckad-sim::q1-namespaces
+  prompt: Get the list of all Namespaces in the cluster and save the output to `/opt/course/1/namespaces`.
+    The list can contain other columns like `STATUS` or `AGE`.
+  type: live_k8s_edit
+  schema_category: Command Syntax
+  subject_matter: Namespaces & contexts
+  pre_shell_cmds:
+  - mkdir -p /opt/course/1
+  validation_steps:
+  - cmd: grep -q default /opt/course/1/namespaces
+    matcher: {}
+  - cmd: grep -q kube-system /opt/course/1/namespaces
+    matcher: {}
+  explanation: The command `kubectl get namespaces` or its short form `k get ns` lists
+    all namespaces. The output can be redirected to a file using `> /path/to/file`.
+  metadata:
+    id: ckad-sim::q1-namespaces
+    type: live_k8s_edit
+    category: Core Concepts
+    source: https://killer.sh/ckad
+- id: ckad-sim::q2-pods
+  prompt: Create a single Pod named `pod1` of image `httpd:2.4.41-alpine` in Namespace
+    `default`. The container must be named `pod1-container`. Then, write a command
+    that outputs the status of this pod into the file `/opt/course/2/pod1-status-command.sh`.
+  type: live_k8s_edit
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  pre_shell_cmds:
+  - mkdir -p /opt/course/2
+  validation_steps:
+  - cmd: kubectl get pod pod1 -o jsonpath='{.spec.containers[0].name}'
+    matcher: {}
+  - cmd: kubectl get pod pod1 -o jsonpath='{.spec.containers[0].image}'
+    matcher: {}
+  - cmd: sh /opt/course/2/pod1-status-command.sh
+    matcher: {}
+  explanation: A Pod can be created imperatively with `kubectl run` and `--dry-run=client
+    -o yaml` to generate a manifest. The manifest can then be edited to meet specific
+    requirements like the container name. A command to check the pod's status can
+    use `kubectl describe pod <pod_name>` and `grep`, or `kubectl get pod <pod_name>`
+    with a `jsonpath` expression like `{.status.phase}`. This command is then saved
+    to the required file.
+  metadata:
+    id: ckad-sim::q2-pods
+    type: live_k8s_edit
+    category: Core Concepts
+    source: https://killer.sh/ckad
+- id: deploy-mgmt-q1
+  prompt: Create a deployment named webapp with image nginx:1.17 and 3 replicas
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q1
+    category: Deployment Management
+    response: kubectl create deployment webapp --image=nginx:1.17 --replicas=3
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_deployment/#:~:text=kubectl%20create%20deployment%20my,date
+- id: deploy-mgmt-q2
+  prompt: Generate a YAML file for a deployment with nginx image without creating
+    it
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Imperative vs declarative
+  metadata:
+    id: deploy-mgmt-q2
+    category: Deployment Management
+    response: kubectl create deployment nginx --image=nginx --dry-run=client -o yaml
+      > deploy.yaml
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_deployment/#:~:text=)
+- id: deploy-mgmt-q3
+  prompt: Scale a deployment named 'frontend' to 5 replicas
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q3
+    category: Deployment Management
+    response: kubectl scale deployment frontend --replicas=5
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=You%20can%20scale%20a%20Deployment,by%20using%20the%20following%20command
+- id: deploy-mgmt-q4
+  prompt: Update the image of a deployment named 'webapp' to nginx:1.18
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q4
+    category: Deployment Management
+    response: kubectl set image deployment/webapp webapp=nginx:1.18
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=,of%20the%20Deployment
+- id: deploy-mgmt-q5
+  prompt: Check the rollout status of a deployment named 'frontend'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q5
+    category: Deployment Management
+    response: kubectl rollout status deployment/frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=You%20can%20check%20if%20a,returns%20a%20zero%20exit%20code
+- id: deploy-mgmt-q6
+  prompt: Roll back a deployment named 'webapp' to its previous version
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q6
+    category: Deployment Management
+    response: kubectl rollout undo deployment/webapp
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=1,rollback%20to%20the%20previous%20revision
+- id: deploy-mgmt-q7
+  prompt: Create a deployment with a record of the change-cause for future reference
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q7
+    category: Deployment Management
+    response: kubectl create deployment nginx --image=nginx --record
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=Labels%3A%20%20%20%20,80%2FTCP
+- id: deploy-mgmt-q8
+  prompt: View the history of a deployment named 'webapp'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q8
+    category: Deployment Management
+    response: kubectl rollout history deployment/webapp
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=,rollout%20started
+- id: deploy-mgmt-q9
+  prompt: Pause the rollout of a deployment named 'frontend'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q9
+    category: Deployment Management
+    response: kubectl rollout pause deployment/frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=,following%20command
+- id: deploy-mgmt-q10
+  prompt: Resume the rollout of a deployment named 'frontend'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q10
+    category: Deployment Management
+    response: kubectl rollout resume deployment/frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#:~:text=,with%20all%20the%20new%20updates
+- id: deploy-mgmt-q11
+  prompt: View the details of a specific revision (e.g., 2) of a deployment named
+    'webapp'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q11
+    category: Deployment Management
+    response: kubectl rollout history deployment/webapp --revision=2
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#checking-rollout-history-of-a-deployment
+- id: deploy-mgmt-q12
+  prompt: Delete a deployment named 'frontend'
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q12
+    category: Deployment Management
+    response: kubectl delete deployment frontend
+    links:
+    - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#deleting-a-deployment
+- id: deploy-mgmt-q13
+  prompt: Roll back the deployment api-new-c32 in namespace neptune to the previous
+    revision.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q13
+    category: Deployment Management
+    response: kubectl -n neptune rollout undo deployment api-new-c32
+- id: deploy-mgmt-q14
+  prompt: Restart the deployment web-moon in the moon namespace.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Core workloads
+  metadata:
+    id: deploy-mgmt-q14
+    category: Deployment Management
+    response: kubectl -n moon rollout restart deployment web-moon
+- id: ckad-sim::q4-helm-install
+  prompt: In namespace `mercury`, install a new Helm release named `internal-issue-report-apache`
+    from the `bitnami/apache` chart. The Deployment created by the chart should have
+    2 replicas. Assume the `bitnami` repository has already been added and updated.
+  type: live_k8s_edit
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  pre_shell_cmds:
+  - kubectl create namespace mercury
+  - helm repo add bitnami https://charts.bitnami.com/bitnami
+  - helm repo update
+  validation_steps:
+  - cmd: helm -n mercury status internal-issue-report-apache
+    matcher: {}
+  - cmd: kubectl -n mercury get deploy internal-issue-report-apache -o jsonpath='{.spec.replicas}'
+    matcher: {}
+  explanation: Use `helm install <release-name> <chart-name> --namespace <ns> --set
+    <key>=<value>`. In this case, the command is `helm install internal-issue-report-apache
+    bitnami/apache --namespace mercury --set replicaCount=2`. You can find the correct
+    key (`replicaCount`) for setting replicas by using `helm show values bitnami/apache`.
+  metadata:
+    id: ckad-sim::q4-helm-install
+    type: live_k8s_edit
+    category: Helm
+    source: https://killer.sh/ckad
+- id: helm-q1
+  prompt: What is the command to create a basic Helm chart named `my-chart`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'Use `helm create <chart-name>` to create a new Helm chart with a default
+    structure. For example, `helm create my-chart` creates a directory named `my-chart`
+    with the necessary files.
+
+    '
+  metadata:
+    id: helm-q1
+    category: Helm Basics
+    response: helm create my-chart
+    links:
+    - https://helm.sh/docs/helm/helm_create/
+- id: helm-q2
+  prompt: How do you install the Helm chart located in `./my-chart` with the release
+    name `my-release`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'Use `helm install <release-name> <chart-path>` to deploy an application.
+    For example, `helm install my-release ./my-chart` installs the chart located in
+    the `./my-chart` directory with the release name `my-release`.
+
+    '
+  metadata:
+    id: helm-q2
+    category: Helm Basics
+    response: helm install my-release ./my-chart
+    links:
+    - https://helm.sh/docs/helm/helm_install/
+- id: helm-q3
+  prompt: How do you find all pending Helm deployments across all namespaces?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'To list all pending Helm releases in every namespace, run `helm list
+    --pending -A`. The `-A` or `--all-namespaces` flag is used to list releases across
+    all namespaces.
+
+    '
+  metadata:
+    id: helm-q3
+    category: Helm Basics
+    response: helm list --pending -A
+    links:
+    - https://helm.sh/docs/helm/helm_list/
+- id: helm-q4
+  prompt: How can you uninstall a Helm release named `my-release`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'To uninstall a release, use `helm uninstall <release_name>`. If the
+    release is in another namespace, use the `-n <namespace>` flag. This removes all
+    Kubernetes resources associated with the release.
+
+    '
+  metadata:
+    id: helm-q4
+    category: Helm Basics
+    response: helm uninstall my-release
+    links:
+    - https://helm.sh/docs/helm/helm_uninstall/
+- id: helm-q5
+  prompt: How do you upgrade an existing Helm release named `my-release` using the
+    chart in `./my-chart`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'The correct command is `helm upgrade my-release ./my-chart`. An answer
+    like `helm release upgrade` is incomplete and uses incorrect syntax. The `upgrade`
+    command requires the release name and the path to the chart.
+
+    '
+  metadata:
+    id: helm-q5
+    category: Helm Basics
+    response: helm upgrade my-release ./my-chart
+    links:
+    - https://helm.sh/docs/helm/helm_upgrade/
+- id: helm-q6
+  prompt: How do you add the Prometheus community Helm repository from `https://prometheus-community.github.io/helm-charts`
+    and name it `prometheus-community`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'Use `helm repo add prometheus-community https://prometheus-community.github.io/helm-charts`
+    to add the Prometheus community chart repository.
+
+    '
+  metadata:
+    id: helm-q6
+    category: Helm Repositories
+    response: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
+    links:
+    - https://github.com/prometheus-community/helm-charts
+- id: helm-q7
+  prompt: What command is used to list configured Helm chart repositories?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: '`helm repo list` (or `ls`) is used to list all configured chart repositories.
+
+    '
+  metadata:
+    id: helm-q7
+    category: Helm Repositories
+    response: helm repo list
+    links:
+    - https://helm.sh/docs/helm/helm_repo/
+- id: helm-q8
+  prompt: What command is used to remove a Helm chart repository named `stable`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: '`helm repo remove [REPO]` is used to remove one or more chart repositories.
+
+    '
+  metadata:
+    id: helm-q8
+    category: Helm Repositories
+    response: helm repo remove stable
+    links:
+    - https://helm.sh/docs/helm/helm_repo/
+- id: helm-q9
+  prompt: What command is used to update information from chart repositories?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: '`helm repo update` (or `up`) is used to fetch the latest information
+    from all configured chart repositories.
+
+    '
+  metadata:
+    id: helm-q9
+    category: Helm Repositories
+    response: helm repo update
+    links:
+    - https://helm.sh/docs/helm/helm_repo/
+- id: helm-q10
+  prompt: What command is used to generate an index file for a chart repository in
+    the current directory?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: '`helm repo index [DIR]` generates an `index.yaml` file for a directory
+    containing packaged charts, making it a valid chart repository.
+
+    '
+  metadata:
+    id: helm-q10
+    category: Helm Repositories
+    response: helm repo index .
+    links:
+    - https://helm.sh/docs/helm/helm_repo/
+- id: helm-q11
+  prompt: Assuming the `bitnami` repository has been added, what command downloads
+    the `wordpress` chart from it without installing it?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'Use `helm pull [repo/chartname]` to download a chart to your local
+    directory. Use the `--untar` flag to extract the chart after downloading.
+
+    '
+  metadata:
+    id: helm-q11
+    category: Helm Basics
+    response: helm pull bitnami/wordpress
+    links:
+    - https://helm.sh/docs/helm/helm_pull/
+- id: helm-q12
+  prompt: How do you add the Bitnami chart repository from `https://charts.bitnami.com/bitnami`
+    and name it `bitnami`?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'Add the Bitnami repo with: `helm repo add bitnami https://charts.bitnami.com/bitnami`.
+
+    Note that repository URLs are for the Helm client; opening them in a web browser
+    may not work.
+
+    '
+  metadata:
+    id: helm-q12
+    category: Helm Repositories
+    response: helm repo add bitnami https://charts.bitnami.com/bitnami
+    links:
+    - https://artifacthub.io/packages/helm/bitnami/node
+- id: helm-q13
+  prompt: Assuming the `bitnami` repository has been added, how do you print the contents
+    of the `values.yaml` for the `bitnami/node` chart?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: '`helm show values <chart>` displays the contents of the `values.yaml`
+    file for a given chart. For example: `helm show values bitnami/node`.
+
+    '
+  metadata:
+    id: helm-q13
+    category: Helm Basics
+    response: helm show values bitnami/node
+    links:
+    - https://helm.sh/docs/helm/helm_show/
+- id: helm-q14
+  prompt: Assuming the `bitnami` repository has been added, how do you install the
+    `bitnami/node` chart as a release named `my-node`, setting the `replicaCount`
+    value to 5?
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  explanation: 'You can override values in a chart''s `values.yaml` file at installation
+    time using the `--set` flag. First, find the relevant key (e.g., with `helm show
+    values bitnami/node | grep -i replica`). Then, install the chart with the override:
+    `helm install my-node bitnami/node --set replicaCount=5`.
+
+    '
+  metadata:
+    id: helm-q14
+    category: Helm Basics
+    response: helm install my-node bitnami/node --set replicaCount=5
+    links:
+    - https://artifacthub.io/packages/helm/bitnami/node
+    - https://helm.sh/docs/helm/helm_install/
+- id: helm-q15
+  prompt: List all Helm releases in the mercury namespace.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  metadata:
+    id: helm-q15
+    category: Helm Basics
+    response: helm -n mercury ls
+- id: helm-q16
+  prompt: Uninstall the Helm release internal-issue-report-apiv1 in the mercury namespace.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  metadata:
+    id: helm-q16
+    category: Helm Basics
+    response: helm -n mercury uninstall internal-issue-report-apiv1
+- id: helm-q17
+  prompt: Update the Helm chart repositories.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  metadata:
+    id: helm-q17
+    category: Helm Repositories
+    response: helm repo update
+- id: helm-q18
+  prompt: Search the Bitnami repository for all available nginx chart versions.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  metadata:
+    id: helm-q18
+    category: Helm Repositories
+    response: helm search repo nginx --versions
+- id: helm-q19
+  prompt: Upgrade the Helm release internal-issue-report-apiv2 in namespace mercury
+    to the latest nginx chart.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  metadata:
+    id: helm-q19
+    category: Helm Basics
+    response: helm -n mercury upgrade internal-issue-report-apiv2 bitnami/nginx
+- id: helm-q20
+  prompt: Install the Bitnami Apache chart as release internal-issue-report-apache
+    in namespace mercury with 2 replicas and image debug enabled.
+  type: command
+  schema_category: Command Syntax
+  subject_matter: Helm Basics
+  metadata:
+    id: helm-q20
+    category: Helm Basics
+    response: helm -n mercury install internal-issue-report-apache bitnami/apache
+      --set replicaCount=2 --set image.debug=true
+- id: apply::service
+  prompt: Create a service using the definition in example-service.yaml
+  type: command
+  validation_steps:
+  - cmd: kubectl apply -f example-service.yaml
+    matcher: {}
+  metadata:
+    id: apply::service
+    type: command
+    validator:
+      type: ai
+      expected: kubectl apply -f example-service.yaml
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: apply::controller
+  prompt: Create a replication controller using the definition in example-controller.yaml
+  type: command
+  validation_steps:
+  - cmd: kubectl apply -f example-controller.yaml
+    matcher: {}
+  metadata:
+    id: apply::controller
+    type: command
+    validator:
+      type: ai
+      expected: kubectl apply -f example-controller.yaml
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: apply::directory
+  prompt: Create the objects defined in all files within a directory
+  type: command
+  validation_steps:
+  - cmd: kubectl apply -f <directory>
+    matcher: {}
+  metadata:
+    id: apply::directory
+    type: command
+    validator:
+      type: ai
+      expected: kubectl apply -f <directory>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: get::pods
+  prompt: List all pods in plain-text output format
+  type: command
+  validation_steps:
+  - cmd: kubectl get pods
+    matcher: {}
+  metadata:
+    id: get::pods
+    type: command
+    validator:
+      type: ai
+      expected: kubectl get pods
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: get::pods-wide
+  prompt: List all pods and include additional information such as node name
+  type: command
+  validation_steps:
+  - cmd: kubectl get pods -o wide
+    matcher: {}
+  metadata:
+    id: get::pods-wide
+    type: command
+    validator:
+      type: ai
+      expected: kubectl get pods -o wide
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: get::rc
+  prompt: List the replication controller with the specified name using alias
+  type: command
+  validation_steps:
+  - cmd: kubectl get rc <rc-name>
+    matcher: {}
+  metadata:
+    id: get::rc
+    type: command
+    validator:
+      type: ai
+      expected: kubectl get rc <rc-name>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: get::rc-svc
+  prompt: List all replication controllers and services together
+  type: command
+  validation_steps:
+  - cmd: kubectl get rc,services
+    matcher: {}
+  metadata:
+    id: get::rc-svc
+    type: command
+    validator:
+      type: ai
+      expected: kubectl get rc,services
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: get::ds
+  prompt: List all daemon sets
+  type: command
+  validation_steps:
+  - cmd: kubectl get ds
+    matcher: {}
+  metadata:
+    id: get::ds
+    type: command
+    validator:
+      type: ai
+      expected: kubectl get ds
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: get::pods-node
+  prompt: List all pods running on node server01
+  type: command
+  validation_steps:
+  - cmd: kubectl get pods --field-selector=spec.nodeName=server01
+    matcher: {}
+  metadata:
+    id: get::pods-node
+    type: command
+    validator:
+      type: ai
+      expected: kubectl get pods --field-selector=spec.nodeName=server01
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: describe::node
+  prompt: Display the details of the node with name <node-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl describe nodes <node-name>
+    matcher: {}
+  metadata:
+    id: describe::node
+    type: command
+    validator:
+      type: ai
+      expected: kubectl describe nodes <node-name>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: describe::pod
+  prompt: Display the details of the pod with name <pod-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl describe pods/<pod-name>
+    matcher: {}
+  metadata:
+    id: describe::pod
+    type: command
+    validator:
+      type: ai
+      expected: kubectl describe pods/<pod-name>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: describe::pods-rc
+  prompt: Display the details of all pods managed by the replication controller <rc-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl describe pods <rc-name>
+    matcher: {}
+  metadata:
+    id: describe::pods-rc
+    type: command
+    validator:
+      type: ai
+      expected: kubectl describe pods <rc-name>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: describe::pods
+  prompt: Describe all pods
+  type: command
+  validation_steps:
+  - cmd: kubectl describe pods
+    matcher: {}
+  metadata:
+    id: describe::pods
+    type: command
+    validator:
+      type: ai
+      expected: kubectl describe pods
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: delete::pod-file
+  prompt: Delete a pod using the definition in pod.yaml
+  type: command
+  validation_steps:
+  - cmd: kubectl delete -f pod.yaml
+    matcher: {}
+  metadata:
+    id: delete::pod-file
+    type: command
+    validator:
+      type: ai
+      expected: kubectl delete -f pod.yaml
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: delete::label
+  prompt: Delete all pods and services with label '<label-key>=<label-value>'
+  type: command
+  validation_steps:
+  - cmd: kubectl delete pods,services -l <label-key>=<label-value>
+    matcher: {}
+  metadata:
+    id: delete::label
+    type: command
+    validator:
+      type: ai
+      expected: kubectl delete pods,services -l <label-key>=<label-value>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: delete::all-pods
+  prompt: Delete all pods, including uninitialized ones
+  type: command
+  validation_steps:
+  - cmd: kubectl delete pods --all
+    matcher: {}
+  metadata:
+    id: delete::all-pods
+    type: command
+    validator:
+      type: ai
+      expected: kubectl delete pods --all
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: exec::date
+  prompt: Get output of 'date' from pod <pod-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl exec <pod-name> -- date
+    matcher: {}
+  metadata:
+    id: exec::date
+    type: command
+    validator:
+      type: ai
+      expected: kubectl exec <pod-name> -- date
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: exec::date-container
+  prompt: Get output of 'date' in container <container-name> of pod <pod-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl exec <pod-name> -c <container-name> -- date
+    matcher: {}
+  metadata:
+    id: exec::date-container
+    type: command
+    validator:
+      type: ai
+      expected: kubectl exec <pod-name> -c <container-name> -- date
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: exec::bash
+  prompt: Open an interactive bash shell in pod <pod-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl exec -ti <pod-name> -- /bin/bash
+    matcher: {}
+  metadata:
+    id: exec::bash
+    type: command
+    validator:
+      type: ai
+      expected: kubectl exec -ti <pod-name> -- /bin/bash
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: logs::snapshot
+  prompt: Return a snapshot of logs from pod <pod-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl logs <pod-name>
+    matcher: {}
+  metadata:
+    id: logs::snapshot
+    type: command
+    validator:
+      type: ai
+      expected: kubectl logs <pod-name>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: logs::stream
+  prompt: Stream logs from pod <pod-name>
+  type: command
+  validation_steps:
+  - cmd: kubectl logs -f <pod-name>
+    matcher: {}
+  metadata:
+    id: logs::stream
+    type: command
+    validator:
+      type: ai
+      expected: kubectl logs -f <pod-name>
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: diff::file
+  prompt: View a diff of resources in pod.json
+  type: command
+  validation_steps:
+  - cmd: kubectl diff -f pod.json
+    matcher: {}
+  metadata:
+    id: diff::file
+    type: command
+    validator:
+      type: ai
+      expected: kubectl diff -f pod.json
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: diff::stdin
+  prompt: View a diff reading file from stdin
+  type: command
+  validation_steps:
+  - cmd: kubectl diff -f -
+    matcher: {}
+  metadata:
+    id: diff::stdin
+    type: command
+    validator:
+      type: ai
+      expected: kubectl diff -f -
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: plugin::invoke
+  prompt: Invoke the plugin named 'hello'
+  type: command
+  validation_steps:
+  - cmd: kubectl hello
+    matcher: {}
+  metadata:
+    id: plugin::invoke
+    type: command
+    validator:
+      type: ai
+      expected: kubectl hello
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: plugin::list
+  prompt: List available kubectl-compatible plugins
+  type: command
+  validation_steps:
+  - cmd: kubectl plugin list
+    matcher: {}
+  metadata:
+    id: plugin::list
+    type: command
+    validator:
+      type: ai
+      expected: kubectl plugin list
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: plugin::list-warning
+  prompt: What warning does 'kubectl plugin list' show when a plugin is not executable?
+  type: command
+  validation_steps:
+  - cmd: 'warning: <plugin-path> identified as a plugin, but it is not executable'
+    matcher: {}
+  metadata:
+    id: plugin::list-warning
+    type: command
+    validator:
+      type: ai
+      expected: 'warning: <plugin-path> identified as a plugin, but it is not executable'
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: plugin::whoami
+  prompt: Invoke the plugin named 'whoami'
+  type: command
+  validation_steps:
+  - cmd: kubectl whoami
+    matcher: {}
+  metadata:
+    id: plugin::whoami
+    type: command
+    validator:
+      type: ai
+      expected: kubectl whoami
+    category: Kubectl Common Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#examples-common-operations
+- id: operations::alpha
+  prompt: List the available commands that correspond to alpha features, which are
+    not enabled in Kubernetes clusters by default.
+  type: command
+  validation_steps:
+  - cmd: kubectl alpha
+    matcher: {}
+  metadata:
+    id: operations::alpha
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::annotate
+  prompt: Add or update the annotations of one or more resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl annotate
+    matcher: {}
+  metadata:
+    id: operations::annotate
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::api-resources
+  prompt: List the API resources that are available.
+  type: command
+  validation_steps:
+  - cmd: kubectl api-resources
+    matcher: {}
+  metadata:
+    id: operations::api-resources
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::api-versions
+  prompt: List the API versions that are available.
+  type: command
+  validation_steps:
+  - cmd: kubectl api-versions
+    matcher: {}
+  metadata:
+    id: operations::api-versions
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::apply
+  prompt: Apply a configuration change to a resource from a file or stdin.
+  type: command
+  validation_steps:
+  - cmd: kubectl apply
+    matcher: {}
+  metadata:
+    id: operations::apply
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::attach
+  prompt: Attach to a running container either to view the output stream or interact
+    with the container (stdin).
+  type: command
+  validation_steps:
+  - cmd: kubectl attach
+    matcher: {}
+  metadata:
+    id: operations::attach
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::auth
+  prompt: Inspect authorization.
+  type: command
+  validation_steps:
+  - cmd: kubectl auth
+    matcher: {}
+  metadata:
+    id: operations::auth
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::autoscale
+  prompt: Automatically scale the set of pods that are managed by a replication controller.
+  type: command
+  validation_steps:
+  - cmd: kubectl autoscale
+    matcher: {}
+  metadata:
+    id: operations::autoscale
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::certificate
+  prompt: Modify certificate resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl certificate
+    matcher: {}
+  metadata:
+    id: operations::certificate
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::cluster-info
+  prompt: Display endpoint information about the master and services in the cluster.
+  type: command
+  validation_steps:
+  - cmd: kubectl cluster-info
+    matcher: {}
+  metadata:
+    id: operations::cluster-info
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::completion
+  prompt: Output shell completion code for the specified shell (bash or zsh).
+  type: command
+  validation_steps:
+  - cmd: kubectl completion
+    matcher: {}
+  metadata:
+    id: operations::completion
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::config
+  prompt: Modifies kubeconfig files. See the individual subcommands for details.
+  type: command
+  validation_steps:
+  - cmd: kubectl config
+    matcher: {}
+  metadata:
+    id: operations::config
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::convert
+  prompt: Convert config files between different API versions. Both YAML and JSON
+    formats are accepted.
+  type: command
+  validation_steps:
+  - cmd: kubectl convert
+    matcher: {}
+  metadata:
+    id: operations::convert
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::cordon
+  prompt: Mark node as unschedulable.
+  type: command
+  validation_steps:
+  - cmd: kubectl cordon
+    matcher: {}
+  metadata:
+    id: operations::cordon
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::cp
+  prompt: Copy files and directories to and from containers.
+  type: command
+  validation_steps:
+  - cmd: kubectl cp
+    matcher: {}
+  metadata:
+    id: operations::cp
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::create
+  prompt: Create one or more resources from a file or stdin.
+  type: command
+  validation_steps:
+  - cmd: kubectl create
+    matcher: {}
+  metadata:
+    id: operations::create
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::delete
+  prompt: Delete resources either from a file, stdin, or specifying label selectors,
+    names, resource selectors, or resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl delete
+    matcher: {}
+  metadata:
+    id: operations::delete
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::describe
+  prompt: Display the detailed state of one or more resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl describe
+    matcher: {}
+  metadata:
+    id: operations::describe
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::diff
+  prompt: Diff file or stdin against live configuration.
+  type: command
+  validation_steps:
+  - cmd: kubectl diff
+    matcher: {}
+  metadata:
+    id: operations::diff
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::drain
+  prompt: Drain node in preparation for maintenance.
+  type: command
+  validation_steps:
+  - cmd: kubectl drain
+    matcher: {}
+  metadata:
+    id: operations::drain
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::edit
+  prompt: Edit and update the definition of one or more resources on the server by
+    using the default editor.
+  type: command
+  validation_steps:
+  - cmd: kubectl edit
+    matcher: {}
+  metadata:
+    id: operations::edit
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::events
+  prompt: List events
+  type: command
+  validation_steps:
+  - cmd: kubectl events
+    matcher: {}
+  metadata:
+    id: operations::events
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::exec
+  prompt: Execute a command against a container in a pod.
+  type: command
+  validation_steps:
+  - cmd: kubectl exec
+    matcher: {}
+  metadata:
+    id: operations::exec
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::explain
+  prompt: Get documentation of various resources. For instance pods, nodes, services,
+    etc.
+  type: command
+  validation_steps:
+  - cmd: kubectl explain
+    matcher: {}
+  metadata:
+    id: operations::explain
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::expose
+  prompt: Expose a replication controller, service, or pod as a new Kubernetes service.
+  type: command
+  validation_steps:
+  - cmd: kubectl expose
+    matcher: {}
+  metadata:
+    id: operations::expose
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::get
+  prompt: List one or more resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl get
+    matcher: {}
+  metadata:
+    id: operations::get
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::kustomize
+  prompt: List a set of API resources generated from instructions in a kustomization.yaml
+    file.
+  type: command
+  validation_steps:
+  - cmd: kubectl kustomize
+    matcher: {}
+  metadata:
+    id: operations::kustomize
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::label
+  prompt: Add or update the labels of one or more resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl label
+    matcher: {}
+  metadata:
+    id: operations::label
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::logs
+  prompt: Print the logs for a container in a pod.
+  type: command
+  validation_steps:
+  - cmd: kubectl logs
+    matcher: {}
+  metadata:
+    id: operations::logs
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::options
+  prompt: List of global command-line options, which apply to all commands.
+  type: command
+  validation_steps:
+  - cmd: kubectl options
+    matcher: {}
+  metadata:
+    id: operations::options
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::patch
+  prompt: Update one or more fields of a resource by using the strategic merge patch
+    process.
+  type: command
+  validation_steps:
+  - cmd: kubectl patch
+    matcher: {}
+  metadata:
+    id: operations::patch
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::plugin
+  prompt: Provides utilities for interacting with plugins.
+  type: command
+  validation_steps:
+  - cmd: kubectl plugin
+    matcher: {}
+  metadata:
+    id: operations::plugin
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::port-forward
+  prompt: Forward one or more local ports to a pod.
+  type: command
+  validation_steps:
+  - cmd: kubectl port-forward
+    matcher: {}
+  metadata:
+    id: operations::port-forward
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::proxy
+  prompt: Run a proxy to the Kubernetes API server.
+  type: command
+  validation_steps:
+  - cmd: kubectl proxy
+    matcher: {}
+  metadata:
+    id: operations::proxy
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::replace
+  prompt: Replace a resource from a file or stdin.
+  type: command
+  validation_steps:
+  - cmd: kubectl replace
+    matcher: {}
+  metadata:
+    id: operations::replace
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::rollout
+  prompt: Manage the rollout of a resource.
+  type: command
+  validation_steps:
+  - cmd: kubectl rollout
+    matcher: {}
+  metadata:
+    id: operations::rollout
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::run
+  prompt: Run a specified image on the cluster.
+  type: command
+  validation_steps:
+  - cmd: kubectl run
+    matcher: {}
+  metadata:
+    id: operations::run
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::scale
+  prompt: Update the size of the specified replication controller.
+  type: command
+  validation_steps:
+  - cmd: kubectl scale
+    matcher: {}
+  metadata:
+    id: operations::scale
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::set
+  prompt: Configure application resources.
+  type: command
+  validation_steps:
+  - cmd: kubectl set
+    matcher: {}
+  metadata:
+    id: operations::set
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::taint
+  prompt: Update the taints on one or more nodes.
+  type: command
+  validation_steps:
+  - cmd: kubectl taint
+    matcher: {}
+  metadata:
+    id: operations::taint
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::top
+  prompt: Display Resource (CPU/Memory/Storage) usage of pod or node.
+  type: command
+  validation_steps:
+  - cmd: kubectl top
+    matcher: {}
+  metadata:
+    id: operations::top
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::uncordon
+  prompt: Mark node as schedulable.
+  type: command
+  validation_steps:
+  - cmd: kubectl uncordon
+    matcher: {}
+  metadata:
+    id: operations::uncordon
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::version
+  prompt: Display the Kubernetes version running on the client and server.
+  type: command
+  validation_steps:
+  - cmd: kubectl version
+    matcher: {}
+  metadata:
+    id: operations::version
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: operations::wait
+  prompt: 'Experimental: Wait for a specific condition on one or many resources.'
+  type: command
+  validation_steps:
+  - cmd: kubectl wait
+    matcher: {}
+  metadata:
+    id: operations::wait
+    type: command
+    category: Kubectl Operations
+    citation: https://kubernetes.io/docs/reference/kubectl/#operations
+- id: ns-ops-q1
+  prompt: Create a new namespace called 'development'
+  type: command
+  metadata:
+    id: ns-ops-q1
+    category: Namespace Operations
+    response: kubectl create namespace development
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_namespace/#:~:text=,namespace
+- id: ns-ops-q2
+  prompt: Set the current context to use the 'production' namespace by default
+  type: command
+  metadata:
+    id: ns-ops-q2
+    category: Namespace Operations
+    response: kubectl config set-context --current --namespace=production
+    links:
+    - https://kubernetes.io/pt-br/docs/reference/kubectl/cheatsheet/#:~:text=)
+- id: ns-ops-q3
+  prompt: Verify which namespace is currently being used in your context
+  type: command
+  metadata:
+    id: ns-ops-q3
+    category: Namespace Operations
+    response: 'kubectl config view --minify | grep namespace:'
+    links:
+    - https://kubernetes.io/pt-br/docs/reference/kubectl/cheatsheet/#:~:text=kn%20para%20definir%20namespace,%3B%20f
+- id: ns-ops-q4
+  prompt: Create a new namespace called 'testing' and output its YAML definition
+  type: command
+  metadata:
+    id: ns-ops-q4
+    category: Namespace Operations
+    response: kubectl create ns testing --dry-run=client -o yaml
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_namespace/#:~:text=Create%20a%20namespace%20with%20the,specified%20name
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_namespace/#:~:text=)
+- id: ns-ops-q5
+  prompt: List all resources across all namespaces
+  type: command
+  metadata:
+    id: ns-ops-q5
+    category: Namespace Operations
+    response: kubectl get all -A
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=A%20note%20on%20%60
+- id: ns-ops-q6
+  prompt: List all pods in the 'kube-system' namespace
+  type: command
+  metadata:
+    id: ns-ops-q6
+    category: Namespace Operations
+    response: kubectl get pods -n kube-system
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=kubectl%20run%20nginx%20,in%20the%20namespace%20of%20mynamespace
+- id: ns-ops-q7
+  prompt: Create a pod in the 'development' namespace
+  type: command
+  metadata:
+    id: ns-ops-q7
+    category: Namespace Operations
+    response: kubectl run nginx --image=nginx -n development
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=kubectl%20run%20nginx%20,in%20the%20namespace%20of%20mynamespace
+- id: ns-ops-q8
+  prompt: Delete a namespace called 'testing' and all its resources
+  type: command
+  metadata:
+    id: ns-ops-q8
+    category: Namespace Operations
+    response: kubectl delete namespace testing
+    links:
+    - https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#:~:text=Delete%20a%20namespace%20with
+- id: ns-ops-q9
+  prompt: List all namespaces in the cluster
+  type: command
+  metadata:
+    id: ns-ops-q9
+    category: Namespace Operations
+    response: kubectl get namespaces
+    links:
+    - https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#:~:text=Viewing%20namespaces
+- id: ns-ops-q10
+  prompt: Create a resource quota for a namespace limiting it to 10 pods
+  type: command
+  metadata:
+    id: ns-ops-q10
+    category: Namespace Operations
+    response: kubectl create quota ns-quota --hard=pods=10 -n development
+    links:
+    - https://kubernetes.io/docs/concepts/policy/resource-quotas/#:~:text=kubectl%20create%20namespace%20myspace
+- id: pod-mgmt-q1
+  prompt: Create a pod named nginx using the nginx image and expose port 80
+  type: command
+  metadata:
+    id: pod-mgmt-q1
+    category: Pod Management
+    response: kubectl run nginx --image=nginx --port=80
+    validator:
+      type: ai
+      expected: kubectl run nginx --image=nginx --port=80
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,port%3D5701
+- id: pod-mgmt-q2
+  prompt: Create a pod named busybox using the busybox image that runs the command
+    'sleep 3600'
+  type: command
+  metadata:
+    id: pod-mgmt-q2
+    category: Pod Management
+    response: kubectl run busybox --image=busybox -- sleep 3600
+    validator:
+      type: ai
+      expected: kubectl run busybox --image=busybox -- sleep 3600
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,argN)
+- id: pod-mgmt-q3
+  prompt: Generate a YAML definition file for a pod named nginx, using the nginx image,
+    without creating it
+  type: command
+  review: true
+  metadata:
+    id: pod-mgmt-q3
+    category: Pod Management
+    response: kubectl run nginx --image=nginx --dry-run=client -o yaml > nginx.yaml
+    validator:
+      type: ai
+      expected: kubectl run nginx --image=nginx --dry-run=client -o yaml > nginx.yaml
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,run%3Dclient
+- id: pod-mgmt-q4
+  prompt: Create a pod named 'nginx' that runs the latest nginx image and sets an
+    environment variable DB_URL=postgresql://db
+  type: command
+  review: true
+  metadata:
+    id: pod-mgmt-q4
+    category: Pod Management
+    response: kubectl run nginx --image=nginx --env="DB_URL=postgresql://db"
+    validator:
+      type: ai
+      expected: kubectl run nginx --image=nginx --env="DB_URL=postgresql://db"
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,env%3D%22POD_NAMESPACE%3Ddefault
+- id: pod-mgmt-q5
+  prompt: Extract the YAML definition of a running pod named 'webapp' in the 'development'
+    namespace
+  type: command
+  metadata:
+    id: pod-mgmt-q5
+    category: Pod Management
+    response: kubectl get pod webapp -n development -o yaml > webapp.yaml
+    validator:
+      type: ai
+      expected: kubectl get pod webapp -n development -o yaml > webapp.yaml
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=kubectl%20get%20deployment%20my,Get%20a%20pod%27s%20YAML
+- id: pod-mgmt-q6
+  prompt: Create a pod named nginx using the nginx image and set labels app=web and
+    tier=frontend
+  type: command
+  metadata:
+    id: pod-mgmt-q6
+    category: Pod Management
+    response: kubectl run nginx --image=nginx --labels="app=web,tier=frontend"
+    validator:
+      type: ai
+      expected: kubectl run nginx --image=nginx --labels="app=web,tier=frontend"
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,labels%3D%22app%3Dhazelcast%2Cenv%3Dprod
+- id: pod-mgmt-q7
+  prompt: Create an interactive temporary pod named 'my-shell' using the Ubuntu image
+    to troubleshoot cluster issues
+  type: command
+  metadata:
+    id: pod-mgmt-q7
+    category: Pod Management
+    response: kubectl run my-shell --rm -i --tty --image=ubuntu -- bash
+    validator:
+      type: ai
+      expected: kubectl run my-shell --rm -i --tty --image=ubuntu -- bash
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,restart%3DNever
+- id: pod-mgmt-q13
+  prompt: Add a security context to the container in deployment holy-api (namespace
+    pluto) to disable privilege escalation and privileged mode.
+  type: command
+  metadata:
+    id: pod-mgmt-q13
+    category: Pod Management
+    response: "securityContext:\n  allowPrivilegeEscalation: false\n  privileged:\
+      \ false\n"
+- id: pod-mgmt-q8
+  prompt: Get detailed information about a pod named 'nginx'
+  type: command
+  metadata:
+    id: pod-mgmt-q8
+    category: Pod Management
+    response: kubectl describe pod nginx
+    validator:
+      type: ai
+      expected: kubectl describe pod nginx
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_describe/
+- id: pod-mgmt-q10
+  prompt: Delete a pod named 'nginx'
+  type: command
+  metadata:
+    id: pod-mgmt-q10
+    category: Pod Management
+    response: kubectl delete pod nginx
+    validator:
+      type: ai
+      expected: kubectl delete pod nginx
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_delete/
+- id: pod-mgmt-q11
+  prompt: View the logs for a pod named 'webapp'
+  type: command
+  metadata:
+    id: pod-mgmt-q11
+    category: Pod Management
+    response: kubectl logs webapp
+    validator:
+      type: ai
+      expected: kubectl logs webapp
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_logs/
+- id: pod-mgmt-q12
+  prompt: Execute the 'env' command in a pod named 'nginx'
+  type: command
+  metadata:
+    id: pod-mgmt-q12
+    category: Pod Management
+    response: kubectl exec nginx -- env
+    validator:
+      type: ai
+      expected: kubectl exec nginx -- env
+    links:
+    - https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/#executing-commands-in-a-container
+- id: pod-mgmt-q9
+  prompt: Create a temporary, interactive pod named 'curl1' using the 'curlimages/curl'
+    image to run a curl command against an internal service at 10.244.0.4
+  type: command
+  metadata:
+    id: pod-mgmt-q9
+    category: Pod Management
+    response: kubectl run curl1 --image=curlimages/curl -i -t --rm --restart=Never
+      -- curl 10.244.0.4
+    validator:
+      type: ai
+      expected: kubectl run curl1 --image=curlimages/curl -i -t --rm --restart=Never
+        -- curl 10.244.0.4
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/generated/kubectl_run/#:~:text=,restart%3DNever
+- id: binding::apiversion
+  prompt: What is the API version for Binding?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: binding::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: binding::namespaced
+  prompt: Is Binding a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: binding::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: componentstatus::shortnames
+  prompt: What is the shortname for ComponentStatus?
+  type: command
+  validation_steps:
+  - cmd: cs
+    matcher: {}
+  metadata:
+    id: componentstatus::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: componentstatus::apiversion
+  prompt: What is the API version for ComponentStatus?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: componentstatus::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: componentstatus::namespaced
+  prompt: Is ComponentStatus a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: componentstatus::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: configmap::shortnames
+  prompt: What is the shortname for ConfigMap?
+  type: command
+  validation_steps:
+  - cmd: cm
+    matcher: {}
+  metadata:
+    id: configmap::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: configmap::apiversion
+  prompt: What is the API version for ConfigMap?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: configmap::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: configmap::namespaced
+  prompt: Is ConfigMap a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: configmap::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: endpoints::shortnames
+  prompt: What is the shortname for Endpoints?
+  type: command
+  validation_steps:
+  - cmd: ep
+    matcher: {}
+  metadata:
+    id: endpoints::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: endpoints::apiversion
+  prompt: What is the API version for Endpoints?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: endpoints::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: endpoints::namespaced
+  prompt: Is Endpoints a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: endpoints::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: event::shortnames
+  prompt: What is the shortname for Event?
+  type: command
+  validation_steps:
+  - cmd: ev
+    matcher: {}
+  metadata:
+    id: event::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: event::apiversion
+  prompt: What is the API version for Event?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: event::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: event::namespaced
+  prompt: Is Event a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: event::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: limitrange::shortnames
+  prompt: What is the shortname for LimitRange?
+  type: command
+  validation_steps:
+  - cmd: limits
+    matcher: {}
+  metadata:
+    id: limitrange::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: limitrange::apiversion
+  prompt: What is the API version for LimitRange?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: limitrange::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: limitrange::namespaced
+  prompt: Is LimitRange a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: limitrange::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: namespace::shortnames
+  prompt: What is the shortname for Namespace?
+  type: command
+  validation_steps:
+  - cmd: ns
+    matcher: {}
+  metadata:
+    id: namespace::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: namespace::apiversion
+  prompt: What is the API version for Namespace?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: namespace::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: namespace::namespaced
+  prompt: Is Namespace a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: namespace::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: node::shortnames
+  prompt: What is the shortname for Node?
+  type: command
+  validation_steps:
+  - cmd: 'no'
+    matcher: {}
+  metadata:
+    id: node::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: node::apiversion
+  prompt: What is the API version for Node?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: node::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: node::namespaced
+  prompt: Is Node a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: node::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: persistentvolumeclaim::shortnames
+  prompt: What is the shortname for PersistentVolumeClaim?
+  type: command
+  validation_steps:
+  - cmd: pvc
+    matcher: {}
+  metadata:
+    id: persistentvolumeclaim::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: persistentvolumeclaim::apiversion
+  prompt: What is the API version for PersistentVolumeClaim?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: persistentvolumeclaim::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: persistentvolumeclaim::namespaced
+  prompt: Is PersistentVolumeClaim a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: persistentvolumeclaim::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: persistentvolume::shortnames
+  prompt: What is the shortname for PersistentVolume?
+  type: command
+  validation_steps:
+  - cmd: pv
+    matcher: {}
+  metadata:
+    id: persistentvolume::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: persistentvolume::apiversion
+  prompt: What is the API version for PersistentVolume?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: persistentvolume::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: persistentvolume::namespaced
+  prompt: Is PersistentVolume a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: persistentvolume::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: pod::shortnames
+  prompt: What is the shortname for Pod?
+  type: command
+  validation_steps:
+  - cmd: po
+    matcher: {}
+  metadata:
+    id: pod::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: pod::apiversion
+  prompt: What is the API version for Pod?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: pod::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: pod::namespaced
+  prompt: Is Pod a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: pod::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: podtemplate::apiversion
+  prompt: What is the API version for PodTemplate?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: podtemplate::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: podtemplate::namespaced
+  prompt: Is PodTemplate a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: podtemplate::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: replicationcontroller::shortnames
+  prompt: What is the shortname for ReplicationController?
+  type: command
+  validation_steps:
+  - cmd: rc
+    matcher: {}
+  metadata:
+    id: replicationcontroller::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: replicationcontroller::apiversion
+  prompt: What is the API version for ReplicationController?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: replicationcontroller::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: replicationcontroller::namespaced
+  prompt: Is ReplicationController a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: replicationcontroller::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: resourcequota::shortnames
+  prompt: What is the shortname for ResourceQuota?
+  type: command
+  validation_steps:
+  - cmd: quota
+    matcher: {}
+  metadata:
+    id: resourcequota::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: resourcequota::apiversion
+  prompt: What is the API version for ResourceQuota?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: resourcequota::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: resourcequota::namespaced
+  prompt: Is ResourceQuota a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: resourcequota::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: secret::apiversion
+  prompt: What is the API version for Secret?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: secret::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: secret::namespaced
+  prompt: Is Secret a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: secret::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: serviceaccount::shortnames
+  prompt: What is the shortname for ServiceAccount?
+  type: command
+  validation_steps:
+  - cmd: sa
+    matcher: {}
+  metadata:
+    id: serviceaccount::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: serviceaccount::apiversion
+  prompt: What is the API version for ServiceAccount?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: serviceaccount::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: serviceaccount::namespaced
+  prompt: Is ServiceAccount a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: serviceaccount::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: service::shortnames
+  prompt: What is the shortname for Service?
+  type: command
+  validation_steps:
+  - cmd: svc
+    matcher: {}
+  metadata:
+    id: service::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: service::apiversion
+  prompt: What is the API version for Service?
+  type: command
+  validation_steps:
+  - cmd: v1
+    matcher: {}
+  metadata:
+    id: service::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: service::namespaced
+  prompt: Is Service a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: service::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: mutatingwebhookconfiguration::apiversion
+  prompt: What is the API version for MutatingWebhookConfiguration?
+  type: command
+  validation_steps:
+  - cmd: admissionregistration.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: mutatingwebhookconfiguration::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: mutatingwebhookconfiguration::namespaced
+  prompt: Is MutatingWebhookConfiguration a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: mutatingwebhookconfiguration::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: validatingwebhookconfiguration::apiversion
+  prompt: What is the API version for ValidatingWebhookConfiguration?
+  type: command
+  validation_steps:
+  - cmd: admissionregistration.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: validatingwebhookconfiguration::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: validatingwebhookconfiguration::namespaced
+  prompt: Is ValidatingWebhookConfiguration a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: validatingwebhookconfiguration::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: customresourcedefinition::shortnames
+  prompt: What is the shortname for CustomResourceDefinition?
+  type: command
+  validation_steps:
+  - cmd: crd,crds
+    matcher: {}
+  metadata:
+    id: customresourcedefinition::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: customresourcedefinition::apiversion
+  prompt: What is the API version for CustomResourceDefinition?
+  type: command
+  validation_steps:
+  - cmd: apiextensions.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: customresourcedefinition::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: customresourcedefinition::namespaced
+  prompt: Is CustomResourceDefinition a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: customresourcedefinition::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: apiservice::apiversion
+  prompt: What is the API version for APIService?
+  type: command
+  validation_steps:
+  - cmd: apiregistration.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: apiservice::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: apiservice::namespaced
+  prompt: Is APIService a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: apiservice::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: controllerrevision::apiversion
+  prompt: What is the API version for ControllerRevision?
+  type: command
+  validation_steps:
+  - cmd: apps/v1
+    matcher: {}
+  metadata:
+    id: controllerrevision::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: controllerrevision::namespaced
+  prompt: Is ControllerRevision a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: controllerrevision::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: daemonset::shortnames
+  prompt: What is the shortname for DaemonSet?
+  type: command
+  validation_steps:
+  - cmd: ds
+    matcher: {}
+  metadata:
+    id: daemonset::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: daemonset::apiversion
+  prompt: What is the API version for DaemonSet?
+  type: command
+  validation_steps:
+  - cmd: apps/v1
+    matcher: {}
+  metadata:
+    id: daemonset::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: daemonset::namespaced
+  prompt: Is DaemonSet a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: daemonset::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: deployment::shortnames
+  prompt: What is the shortname for Deployment?
+  type: command
+  validation_steps:
+  - cmd: deploy
+    matcher: {}
+  metadata:
+    id: deployment::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: deployment::apiversion
+  prompt: What is the API version for Deployment?
+  type: command
+  validation_steps:
+  - cmd: apps/v1
+    matcher: {}
+  metadata:
+    id: deployment::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: deployment::namespaced
+  prompt: Is Deployment a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: deployment::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: replicaset::shortnames
+  prompt: What is the shortname for ReplicaSet?
+  type: command
+  validation_steps:
+  - cmd: rs
+    matcher: {}
+  metadata:
+    id: replicaset::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: replicaset::apiversion
+  prompt: What is the API version for ReplicaSet?
+  type: command
+  validation_steps:
+  - cmd: apps/v1
+    matcher: {}
+  metadata:
+    id: replicaset::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: replicaset::namespaced
+  prompt: Is ReplicaSet a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: replicaset::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: statefulset::shortnames
+  prompt: What is the shortname for StatefulSet?
+  type: command
+  validation_steps:
+  - cmd: sts
+    matcher: {}
+  metadata:
+    id: statefulset::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: statefulset::apiversion
+  prompt: What is the API version for StatefulSet?
+  type: command
+  validation_steps:
+  - cmd: apps/v1
+    matcher: {}
+  metadata:
+    id: statefulset::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: statefulset::namespaced
+  prompt: Is StatefulSet a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: statefulset::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: tokenreview::apiversion
+  prompt: What is the API version for TokenReview?
+  type: command
+  validation_steps:
+  - cmd: authentication.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: tokenreview::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: tokenreview::namespaced
+  prompt: Is TokenReview a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: tokenreview::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: localsubjectaccessreview::apiversion
+  prompt: What is the API version for LocalSubjectAccessReview?
+  type: command
+  validation_steps:
+  - cmd: authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: localsubjectaccessreview::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: localsubjectaccessreview::namespaced
+  prompt: Is LocalSubjectAccessReview a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: localsubjectaccessreview::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: selfsubjectaccessreview::apiversion
+  prompt: What is the API version for SelfSubjectAccessReview?
+  type: command
+  validation_steps:
+  - cmd: authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: selfsubjectaccessreview::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: selfsubjectaccessreview::namespaced
+  prompt: Is SelfSubjectAccessReview a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: selfsubjectaccessreview::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: selfsubjectrulesreview::apiversion
+  prompt: What is the API version for SelfSubjectRulesReview?
+  type: command
+  validation_steps:
+  - cmd: authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: selfsubjectrulesreview::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: selfsubjectrulesreview::namespaced
+  prompt: Is SelfSubjectRulesReview a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: selfsubjectrulesreview::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: subjectaccessreview::apiversion
+  prompt: What is the API version for SubjectAccessReview?
+  type: command
+  validation_steps:
+  - cmd: authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: subjectaccessreview::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: subjectaccessreview::namespaced
+  prompt: Is SubjectAccessReview a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: subjectaccessreview::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: horizontalpodautoscaler::shortnames
+  prompt: What is the shortname for HorizontalPodAutoscaler?
+  type: command
+  validation_steps:
+  - cmd: hpa
+    matcher: {}
+  metadata:
+    id: horizontalpodautoscaler::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: horizontalpodautoscaler::apiversion
+  prompt: What is the API version for HorizontalPodAutoscaler?
+  type: command
+  validation_steps:
+  - cmd: autoscaling/v2
+    matcher: {}
+  metadata:
+    id: horizontalpodautoscaler::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: horizontalpodautoscaler::namespaced
+  prompt: Is HorizontalPodAutoscaler a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: horizontalpodautoscaler::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: cronjob::shortnames
+  prompt: What is the shortname for CronJob?
+  type: command
+  validation_steps:
+  - cmd: cj
+    matcher: {}
+  metadata:
+    id: cronjob::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: cronjob::apiversion
+  prompt: What is the API version for CronJob?
+  type: command
+  validation_steps:
+  - cmd: batch/v1
+    matcher: {}
+  metadata:
+    id: cronjob::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: cronjob::namespaced
+  prompt: Is CronJob a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: cronjob::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: job::apiversion
+  prompt: What is the API version for Job?
+  type: command
+  validation_steps:
+  - cmd: batch/v1
+    matcher: {}
+  metadata:
+    id: job::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: job::namespaced
+  prompt: Is Job a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: job::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: certificatesigningrequest::shortnames
+  prompt: What is the shortname for CertificateSigningRequest?
+  type: command
+  validation_steps:
+  - cmd: csr
+    matcher: {}
+  metadata:
+    id: certificatesigningrequest::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: certificatesigningrequest::apiversion
+  prompt: What is the API version for CertificateSigningRequest?
+  type: command
+  validation_steps:
+  - cmd: certificates.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: certificatesigningrequest::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: certificatesigningrequest::namespaced
+  prompt: Is CertificateSigningRequest a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: certificatesigningrequest::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: lease::apiversion
+  prompt: What is the API version for Lease?
+  type: command
+  validation_steps:
+  - cmd: coordination.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: lease::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: lease::namespaced
+  prompt: Is Lease a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: lease::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: endpointslice::apiversion
+  prompt: What is the API version for EndpointSlice?
+  type: command
+  validation_steps:
+  - cmd: discovery.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: endpointslice::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: endpointslice::namespaced
+  prompt: Is EndpointSlice a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: endpointslice::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: flowschema::apiversion
+  prompt: What is the API version for FlowSchema?
+  type: command
+  validation_steps:
+  - cmd: flowcontrol.apiserver.k8s.io/v1beta2
+    matcher: {}
+  metadata:
+    id: flowschema::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: flowschema::namespaced
+  prompt: Is FlowSchema a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: flowschema::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: prioritylevelconfiguration::apiversion
+  prompt: What is the API version for PriorityLevelConfiguration?
+  type: command
+  validation_steps:
+  - cmd: flowcontrol.apiserver.k8s.io/v1beta2
+    matcher: {}
+  metadata:
+    id: prioritylevelconfiguration::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: prioritylevelconfiguration::namespaced
+  prompt: Is PriorityLevelConfiguration a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: prioritylevelconfiguration::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: ingressclass::apiversion
+  prompt: What is the API version for IngressClass?
+  type: command
+  validation_steps:
+  - cmd: networking.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: ingressclass::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: ingressclass::namespaced
+  prompt: Is IngressClass a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: ingressclass::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: ingress::shortnames
+  prompt: What is the shortname for Ingress?
+  type: command
+  validation_steps:
+  - cmd: ing
+    matcher: {}
+  metadata:
+    id: ingress::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: ingress::apiversion
+  prompt: What is the API version for Ingress?
+  type: command
+  validation_steps:
+  - cmd: networking.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: ingress::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: ingress::namespaced
+  prompt: Is Ingress a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: ingress::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: networkpolicy::shortnames
+  prompt: What is the shortname for NetworkPolicy?
+  type: command
+  validation_steps:
+  - cmd: netpol
+    matcher: {}
+  metadata:
+    id: networkpolicy::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: networkpolicy::apiversion
+  prompt: What is the API version for NetworkPolicy?
+  type: command
+  validation_steps:
+  - cmd: networking.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: networkpolicy::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: networkpolicy::namespaced
+  prompt: Is NetworkPolicy a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: networkpolicy::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: runtimeclass::apiversion
+  prompt: What is the API version for RuntimeClass?
+  type: command
+  validation_steps:
+  - cmd: node.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: runtimeclass::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: runtimeclass::namespaced
+  prompt: Is RuntimeClass a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: runtimeclass::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: poddisruptionbudget::shortnames
+  prompt: What is the shortname for PodDisruptionBudget?
+  type: command
+  validation_steps:
+  - cmd: pdb
+    matcher: {}
+  metadata:
+    id: poddisruptionbudget::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: poddisruptionbudget::apiversion
+  prompt: What is the API version for PodDisruptionBudget?
+  type: command
+  validation_steps:
+  - cmd: policy/v1
+    matcher: {}
+  metadata:
+    id: poddisruptionbudget::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: poddisruptionbudget::namespaced
+  prompt: Is PodDisruptionBudget a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: poddisruptionbudget::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: podsecuritypolicy::shortnames
+  prompt: What is the shortname for PodSecurityPolicy?
+  type: command
+  validation_steps:
+  - cmd: psp
+    matcher: {}
+  metadata:
+    id: podsecuritypolicy::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: podsecuritypolicy::apiversion
+  prompt: What is the API version for PodSecurityPolicy?
+  type: command
+  validation_steps:
+  - cmd: policy/v1beta1
+    matcher: {}
+  metadata:
+    id: podsecuritypolicy::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: podsecuritypolicy::namespaced
+  prompt: Is PodSecurityPolicy a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: podsecuritypolicy::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: clusterrolebinding::apiversion
+  prompt: What is the API version for ClusterRoleBinding?
+  type: command
+  validation_steps:
+  - cmd: rbac.authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: clusterrolebinding::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: clusterrolebinding::namespaced
+  prompt: Is ClusterRoleBinding a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: clusterrolebinding::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: clusterrole::apiversion
+  prompt: What is the API version for ClusterRole?
+  type: command
+  validation_steps:
+  - cmd: rbac.authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: clusterrole::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: clusterrole::namespaced
+  prompt: Is ClusterRole a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: clusterrole::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: rolebinding::apiversion
+  prompt: What is the API version for RoleBinding?
+  type: command
+  validation_steps:
+  - cmd: rbac.authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: rolebinding::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: rolebinding::namespaced
+  prompt: Is RoleBinding a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: rolebinding::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: role::apiversion
+  prompt: What is the API version for Role?
+  type: command
+  validation_steps:
+  - cmd: rbac.authorization.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: role::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: role::namespaced
+  prompt: Is Role a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: role::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: priorityclass::shortnames
+  prompt: What is the shortname for PriorityClass?
+  type: command
+  validation_steps:
+  - cmd: pc
+    matcher: {}
+  metadata:
+    id: priorityclass::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: priorityclass::apiversion
+  prompt: What is the API version for PriorityClass?
+  type: command
+  validation_steps:
+  - cmd: scheduling.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: priorityclass::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: priorityclass::namespaced
+  prompt: Is PriorityClass a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: priorityclass::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: csidriver::apiversion
+  prompt: What is the API version for CSIDriver?
+  type: command
+  validation_steps:
+  - cmd: storage.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: csidriver::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: csidriver::namespaced
+  prompt: Is CSIDriver a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: csidriver::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: csinode::apiversion
+  prompt: What is the API version for CSINode?
+  type: command
+  validation_steps:
+  - cmd: storage.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: csinode::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: csinode::namespaced
+  prompt: Is CSINode a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: csinode::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: csistoragecapacity::apiversion
+  prompt: What is the API version for CSIStorageCapacity?
+  type: command
+  validation_steps:
+  - cmd: storage.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: csistoragecapacity::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: csistoragecapacity::namespaced
+  prompt: Is CSIStorageCapacity a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'true'
+    matcher: {}
+  metadata:
+    id: csistoragecapacity::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: storageclass::shortnames
+  prompt: What is the shortname for StorageClass?
+  type: command
+  validation_steps:
+  - cmd: sc
+    matcher: {}
+  metadata:
+    id: storageclass::shortnames
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: storageclass::apiversion
+  prompt: What is the API version for StorageClass?
+  type: command
+  validation_steps:
+  - cmd: storage.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: storageclass::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: storageclass::namespaced
+  prompt: Is StorageClass a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: storageclass::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: volumeattachment::apiversion
+  prompt: What is the API version for VolumeAttachment?
+  type: command
+  validation_steps:
+  - cmd: storage.k8s.io/v1
+    matcher: {}
+  metadata:
+    id: volumeattachment::apiversion
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: volumeattachment::namespaced
+  prompt: Is VolumeAttachment a namespaced resource? (true/false)
+  type: command
+  validation_steps:
+  - cmd: 'false'
+    matcher: {}
+  metadata:
+    id: volumeattachment::namespaced
+    type: command
+    category: Resource Reference
+    citation: https://kubernetes.io/docs/reference/kubectl/#resource-types
+- id: secret-mgmt-q1
+  prompt: Create a Secret named 'db-creds' with username=admin and password=password123
+  type: command
+  metadata:
+    id: secret-mgmt-q1
+    category: Secret Management
+    response: kubectl create secret generic db-creds --from-literal=username=admin
+      --from-literal=password=password123
+    validator:
+      type: ai
+      expected: kubectl create secret generic db-creds --from-literal=username=admin
+        --from-literal=password=password123
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: secret-mgmt-q2
+  prompt: Create a Secret named 'tls-cert' from a certificate file
+  type: command
+  metadata:
+    id: secret-mgmt-q2
+    category: Secret Management
+    response: kubectl create secret generic tls-cert --from-file=/path/to/cert.pem
+    validator:
+      type: ai
+      expected: kubectl create secret generic tls-cert --from-file=/path/to/cert.pem
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=Define%20container%20environment%20variables%20using,ConfigMap%20data
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: secret-mgmt-q3
+  prompt: View the encoded values in a Secret named 'api-secrets'
+  type: command
+  metadata:
+    id: secret-mgmt-q3
+    category: Secret Management
+    response: kubectl get secret api-secrets -o yaml
+    validator:
+      type: ai
+      expected: kubectl get secret api-secrets -o yaml
+    links:
+    - https://kubernetes.io/docs/tasks/configmap-secret/managing-secret-using-config-file/#:~:text=Managing%20Secrets%20using%20Configuration%20File,yaml
+- id: secret-mgmt-q4
+  prompt: Encode a string for use in a Secret YAML definition
+  type: command
+  metadata:
+    id: secret-mgmt-q4
+    category: Secret Management
+    response: echo -n 'string' | base64
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: secret-mgmt-q5
+  prompt: Decode a base64 encoded Secret value
+  type: command
+  metadata:
+    id: secret-mgmt-q5
+    category: Secret Management
+    response: echo -n 'encoded string...' | base64 --decode
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: secret-mgmt-q6
+  prompt: Create a TLS Secret type from certificate and key files
+  type: command
+  metadata:
+    id: secret-mgmt-q6
+    category: Secret Management
+    response: kubectl create secret tls my-tls --cert=path/to/cert.crt --key=path/to/key.key
+    validator:
+      type: ai
+      expected: kubectl create secret tls my-tls --cert=path/to/cert.crt --key=path/to/key.key
+    links:
+    - https://kubernetes.io/docs/concepts/configuration/secret/#:~:text=kubectl%20get%20secret%20secret,which%20is
+- id: secret-mgmt-q8
+  prompt: Create a Secret from a .env file
+  type: command
+  metadata:
+    id: secret-mgmt-q8
+    category: Secret Management
+    response: kubectl create secret generic my-secrets --from-env-file=.env
+    validator:
+      type: ai
+      expected: kubectl create secret generic my-secrets --from-env-file=.env
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=1,value%20pair%20in%20a%20ConfigMap
+    - https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#:~:text=,you%20want%20to%20assign%20to
+- id: secret-mgmt-q10
+  prompt: Create a docker-registry type Secret for private registry authentication
+  type: command
+  metadata:
+    id: secret-mgmt-q10
+    category: Secret Management
+    response: kubectl create secret docker-registry regcred --docker-server=REGISTRY_SERVER
+      --docker-username=USERNAME --docker-password=PASSWORD --docker-email=EMAIL
+    validator:
+      type: ai
+      expected: kubectl create secret docker-registry regcred --docker-server=REGISTRY_SERVER
+        --docker-username=USERNAME --docker-password=PASSWORD --docker-email=EMAIL
+    links:
+    - https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#:~:text=Pull%20an%20Image%20from%20a,your
+- id: secret-mgmt-q11
+  prompt: Create a generic secret named secret1 in namespace moon with two keys user=test
+    and pass=pwd.
+  type: command
+  metadata:
+    id: secret-mgmt-q11
+    category: Secret Management
+    response: kubectl -n moon create secret generic secret1 --from-literal=user=test
+      --from-literal=pass=pwd
+- id: secret-mgmt-q12
+  prompt: Create a generic secret named secret2 in namespace moon with a key 'key'
+    and value '12345678'.
+  type: command
+  metadata:
+    id: secret-mgmt-q12
+    category: Secret Management
+    response: kubectl -n moon create secret generic secret2 --from-literal=key=12345678
+- id: secret-mgmt-q13
+  prompt: Mount the secret named secret2 as a volume at /tmp/secret2 in a pod.
+  type: command
+  metadata:
+    id: secret-mgmt-q13
+    category: Secret Management
+    response: "volumes:\n  - name: secret2-volume\n    secret:\n      secretName:\
+      \ secret2\nvolumeMounts:\n  - name: secret2-volume\n    mountPath: /tmp/secret2\n"
+- id: secret-mgmt-q14
+  prompt: Add environment variables SECRET1_USER and SECRET1_PASS to a pod, populated
+    from the user and pass keys of secret1.
+  type: command
+  metadata:
+    id: secret-mgmt-q14
+    category: Secret Management
+    response: "env:\n  - name: SECRET1_USER\n    valueFrom:\n      secretKeyRef:\n\
+      \        name: secret1\n        key: user\n  - name: SECRET1_PASS\n    valueFrom:\n\
+      \      secretKeyRef:\n        name: secret1\n        key: pass\n"
+- id: shell-setup-q1
+  prompt: Shell aliases are shortcuts for longer commands, saving you from typing
+    long commands repeatedly. A common alias is `k` for `kubectl`, which lets you
+    run commands like `k get pods`. Create the `k` alias now.
+  type: command
+  metadata:
+    id: shell-setup-q1
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: alias k=kubectl
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=You%20can%20also%20use%20a,that%20also%20works%20with%20completion
+- id: shell-setup-q8
+  prompt: Enable kubectl autocomplete in your shell
+  type: command
+  metadata:
+    id: shell-setup-q8
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: 'source <(kubectl completion bash)
+
+      complete -F __start_kubectl k
+
+      '
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=BASH
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=alias%20k%3Dkubectl%20complete%20,F%20__start_kubectl%20k
+- id: shell-setup-q9
+  prompt: List pods using the 'k' alias
+  type: command
+  metadata:
+    id: shell-setup-q9
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get pods
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=,List%20all%20pods%20in%20the
+- id: shell-setup-q10
+  prompt: List replicasets using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q10
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get rs
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,apps%2Fv1%20true%20StatefulSet
+- id: shell-setup-q11
+  prompt: List daemonsets using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q11
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get ds
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,apps%2Fv1%20true%20ReplicaSet
+- id: shell-setup-q12
+  prompt: List services using the 'k' alias
+  type: command
+  metadata:
+    id: shell-setup-q12
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get svc
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/quick-reference/#:~:text=,all%20pods%20in%20the%20current
+- id: shell-setup-q13
+  prompt: List ConfigMaps using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q13
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get cm
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Endpoints
+- id: shell-setup-q14
+  prompt: List secrets using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q14
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get secret
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Secret
+- id: shell-setup-q15
+  prompt: List HorizontalPodAutoscalers using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q15
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get hpa
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,batch%2Fv1%20true%20CronJob
+- id: shell-setup-q16
+  prompt: List Ingresses using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q16
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get ing
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=PriorityLevelConfiguration%20,networking.k8s.io%2Fv1%20true%20NetworkPolicy
+- id: shell-setup-q17
+  prompt: List NetworkPolicies using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q17
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get netpol
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=PriorityLevelConfiguration%20,node.k8s.io%2Fv1%20false%20RuntimeClass
+- id: shell-setup-q18
+  prompt: List ServiceAccounts using the short alias
+  type: command
+  metadata:
+    id: shell-setup-q18
+    category: 'Shell Setup: Aliases & Autocomplete'
+    response: k get sa
+    links:
+    - https://kubernetes.io/docs/reference/kubectl/#:~:text=,v1%20true%20Service
+- id: vim_quiz_data::0
+  prompt: Enter insert mode at cursor
+  type: command
+  validation_steps:
+  - cmd: i
+    matcher: {}
+  explanation: insert before the cursor
+  metadata:
+    id: vim_quiz_data::0
+    category: Vim Basics
+    answers:
+    - i
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::1
+  prompt: Append text after cursor
+  type: command
+  validation_steps:
+  - cmd: a
+    matcher: {}
+  explanation: insert (append) after the cursor
+  metadata:
+    id: vim_quiz_data::1
+    category: Vim Basics
+    answers:
+    - a
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::2
+  prompt: Open a new line below the current line
+  type: command
+  validation_steps:
+  - cmd: o
+    matcher: {}
+  explanation: append (open) a new line below the current line
+  metadata:
+    id: vim_quiz_data::2
+    category: Vim Basics
+    answers:
+    - o
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::3
+  prompt: Save file and quit
+  type: command
+  validation_steps:
+  - cmd: :wq
+    matcher: {}
+  - cmd: :x
+    matcher: {}
+  - cmd: ZZ
+    matcher: {}
+  explanation: write (save) and quit
+  metadata:
+    id: vim_quiz_data::3
+    category: Vim Basics
+    answers:
+    - :wq
+    - :x
+    - ZZ
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::4
+  prompt: Exit without saving changes
+  type: command
+  validation_steps:
+  - cmd: :q!
+    matcher: {}
+  - cmd: ZQ
+    matcher: {}
+  explanation: quit and throw away unsaved changes
+  metadata:
+    id: vim_quiz_data::4
+    category: Vim Basics
+    answers:
+    - :q!
+    - ZQ
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::5
+  prompt: Save file without exiting
+  type: command
+  validation_steps:
+  - cmd: :w
+    matcher: {}
+  explanation: write (save) the file, but don't exit
+  metadata:
+    id: vim_quiz_data::5
+    category: Vim Basics
+    answers:
+    - :w
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::6
+  prompt: Delete current line
+  type: command
+  validation_steps:
+  - cmd: dd
+    matcher: {}
+  explanation: delete (cut) a line
+  metadata:
+    id: vim_quiz_data::6
+    category: Vim Basics
+    answers:
+    - dd
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::7
+  prompt: Copy current line (yank)
+  type: command
+  validation_steps:
+  - cmd: yy
+    matcher: {}
+  explanation: yank (copy) a line
+  metadata:
+    id: vim_quiz_data::7
+    category: Vim Basics
+    answers:
+    - yy
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::8
+  prompt: Paste after cursor
+  type: command
+  validation_steps:
+  - cmd: p
+    matcher: {}
+  explanation: put (paste) the clipboard after cursor
+  metadata:
+    id: vim_quiz_data::8
+    category: Vim Basics
+    answers:
+    - p
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::9
+  prompt: Undo last change
+  type: command
+  validation_steps:
+  - cmd: u
+    matcher: {}
+  explanation: undo
+  metadata:
+    id: vim_quiz_data::9
+    category: Vim Basics
+    answers:
+    - u
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::10
+  prompt: Search forward for 'pattern'
+  type: command
+  validation_steps:
+  - cmd: /pattern
+    matcher: {}
+  explanation: search for pattern
+  metadata:
+    id: vim_quiz_data::10
+    category: Vim Basics
+    answers:
+    - /pattern
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::11
+  prompt: Find next search occurrence
+  type: command
+  validation_steps:
+  - cmd: n
+    matcher: {}
+  explanation: repeat search in same direction
+  metadata:
+    id: vim_quiz_data::11
+    category: Vim Basics
+    answers:
+    - n
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::12
+  prompt: Go to top of file
+  type: command
+  validation_steps:
+  - cmd: gg
+    matcher: {}
+  explanation: go to the first line of the document
+  metadata:
+    id: vim_quiz_data::12
+    category: Vim Basics
+    answers:
+    - gg
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::13
+  prompt: Go to end of file
+  type: command
+  validation_steps:
+  - cmd: G
+    matcher: {}
+  explanation: go to the last line of the document
+  metadata:
+    id: vim_quiz_data::13
+    category: Vim Basics
+    answers:
+    - G
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::14
+  prompt: Go to line 10
+  type: command
+  validation_steps:
+  - cmd: :10
+    matcher: {}
+  - cmd: 10gg
+    matcher: {}
+  - cmd: 10G
+    matcher: {}
+  explanation: go to line N (e.g. 5gg or 5G)
+  metadata:
+    id: vim_quiz_data::14
+    category: Vim Basics
+    answers:
+    - :10
+    - 10gg
+    - 10G
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::15
+  prompt: Exit insert mode
+  type: command
+  validation_steps:
+  - cmd: <Esc>
+    matcher: {}
+  - cmd: <C-c>
+    matcher: {}
+  explanation: exit insert mode
+  metadata:
+    id: vim_quiz_data::15
+    category: Vim Basics
+    answers:
+    - <Esc>
+    - <C-c>
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::17
+  prompt: Redo the last undone change
+  type: command
+  validation_steps:
+  - cmd: <C-r>
+    matcher: {}
+  explanation: redo
+  metadata:
+    id: vim_quiz_data::17
+    category: Vim Basics
+    answers:
+    - <C-r>
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::18
+  prompt: Enter visual mode
+  type: command
+  validation_steps:
+  - cmd: v
+    matcher: {}
+  explanation: start visual mode, mark lines, then do a command (like y-yank)
+  metadata:
+    id: vim_quiz_data::18
+    category: Vim Basics
+    answers:
+    - v
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::19
+  prompt: Enter visual line mode
+  type: command
+  validation_steps:
+  - cmd: V
+    matcher: {}
+  explanation: start linewise visual mode
+  metadata:
+    id: vim_quiz_data::19
+    category: Vim Basics
+    answers:
+    - V
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::20
+  prompt: Enter visual block mode
+  type: command
+  validation_steps:
+  - cmd: <C-v>
+    matcher: {}
+  explanation: start visual block mode
+  metadata:
+    id: vim_quiz_data::20
+    category: Vim Basics
+    answers:
+    - <C-v>
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::21
+  prompt: Enter replace mode
+  type: command
+  validation_steps:
+  - cmd: R
+    matcher: {}
+  explanation: replace more than one character, until ESC is pressed
+  metadata:
+    id: vim_quiz_data::21
+    category: Vim Basics
+    answers:
+    - R
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::22
+  prompt: Move to the next word
+  type: command
+  validation_steps:
+  - cmd: w
+    matcher: {}
+  explanation: jump forwards to the start of a word
+  metadata:
+    id: vim_quiz_data::22
+    category: Vim Basics
+    answers:
+    - w
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::23
+  prompt: Move to the previous word
+  type: command
+  validation_steps:
+  - cmd: b
+    matcher: {}
+  explanation: jump backwards to the start of a word
+  metadata:
+    id: vim_quiz_data::23
+    category: Vim Basics
+    answers:
+    - b
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::24
+  prompt: Move to the end of the word
+  type: command
+  validation_steps:
+  - cmd: e
+    matcher: {}
+  explanation: jump forwards to the end of a word
+  metadata:
+    id: vim_quiz_data::24
+    category: Vim Basics
+    answers:
+    - e
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::25
+  prompt: Move to the first character of the line
+  type: command
+  validation_steps:
+  - cmd: '0'
+    matcher: {}
+  explanation: jump to the start of the line
+  metadata:
+    id: vim_quiz_data::25
+    category: Vim Basics
+    answers:
+    - '0'
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::26
+  prompt: Move to the end of the line
+  type: command
+  validation_steps:
+  - cmd: $
+    matcher: {}
+  explanation: jump to the end of the line
+  metadata:
+    id: vim_quiz_data::26
+    category: Vim Basics
+    answers:
+    - $
+    source: https://www.vim.org/docs.php
+- id: vim_quiz_data::27
+  prompt: Jump to matching bracket
+  type: command
+  validation_steps:
+  - cmd: '%'
+    matcher: {}
+  explanation: 'move cursor to matching character (default supported pairs: ''()'',
+    ''{}'', ''[]'')'
+  metadata:
+    id: vim_quiz_data::27
+    category: Vim Basics
+    answers:
+    - '%'
+    source: https://www.vim.org/docs.php
+- id: ckad-sim::q8-rollout-undo
+  prompt: A deployment named `api-new-c32` in namespace `neptune` is failing after
+    a recent update due to an image with a typo (`ngnix` instead of `nginx`). Check
+    the deployment's history and roll back to the previous working revision.
+  type: live_k8s_edit
+  pre_shell_cmds:
+  - kubectl create ns neptune
+  - kubectl -n neptune create deploy api-new-c32 --image=nginx:1.16.1
+  - kubectl -n neptune wait --for=condition=available deploy/api-new-c32 --timeout=60s
+  - kubectl -n neptune set image deploy/api-new-c32 nginx=ngnix:1.16.3
+  validation_steps:
+  - cmd: kubectl -n neptune wait --for=condition=available deploy/api-new-c32 --timeout=30s
+    matcher: {}
+  - cmd: kubectl -n neptune get deploy api-new-c32 -o jsonpath='{.spec.template.spec.containers[0].image}'
+    matcher: {}
+  explanation: Use `kubectl -n neptune rollout history deployment <name>` to see revisions.
+    To find the error, `kubectl -n neptune describe pod <pod-name>` on one of the
+    failing pods will show an `ImagePullBackOff` error. To fix this, use `kubectl
+    -n neptune rollout undo deployment <name>` to revert to the previous, working
+    revision.
+  metadata:
+    id: ckad-sim::q8-rollout-undo
+    type: live_k8s_edit
+    category: Workload Management
+    source: https://killer.sh/ckad
+- id: ckad-sim::q9-pod-to-deployment
+  prompt: 'A single pod `holy-api` is running in namespace `pluto`. Convert it into
+    a high-availability Deployment named `holy-api` with 3 replicas. The original
+    pod''s definition is available at `/opt/course/9/holy-api-pod.yaml`. The new Deployment
+    must add a `securityContext` to the container, setting `allowPrivilegeEscalation:
+    false` and `privileged: false`. Save the final Deployment manifest to `/opt/course/9/holy-api-deployment.yaml`,
+    create the Deployment, and delete the original pod.'
+  type: live_k8s_edit
+  pre_shell_cmds:
+  - kubectl create ns pluto
+  - mkdir -p /opt/course/9
+  - "cat <<'EOF' > /opt/course/9/holy-api-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n\
+    \  labels:\n    id: holy-api\n  name: holy-api\nspec:\n  containers:\n  - env:\n\
+    \    - name: CACHE_KEY_1\n      value: b&MTCi0=[T66RXm!jO@\n    - name: CACHE_KEY_2\n\
+    \      value: PCAILGej5Ld@Q%{Q1=#\n    - name: CACHE_KEY_3\n      value: 2qz-]2OJlWDSTn_;RFQ\n\
+    \    image: nginx:1.17.3-alpine\n    name: holy-api-container\n    volumeMounts:\n\
+    \    - mountPath: /cache1\n      name: cache-volume1\n    - mountPath: /cache2\n\
+    \      name: cache-volume2\n    - mountPath: /cache3\n      name: cache-volume3\n\
+    \  volumes:\n  - emptyDir: {}\n    name: cache-volume1\n  - emptyDir: {}\n   \
+    \ name: cache-volume2\n  - emptyDir: {}\n    name: cache-volume3\nEOF\n"
+  - kubectl -n pluto apply -f /opt/course/9/holy-api-pod.yaml
+  validation_steps:
+  - cmd: kubectl -n pluto get deploy holy-api -o jsonpath='{.spec.replicas}'
+    matcher: {}
+  - cmd: kubectl -n pluto wait --for=condition=available deploy/holy-api --timeout=60s
+    matcher: {}
+  - cmd: kubectl -n pluto get deploy holy-api -o jsonpath='{.spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation}'
+    matcher: {}
+  - cmd: kubectl -n pluto get deploy holy-api -o jsonpath='{.spec.template.spec.containers[0].securityContext.privileged}'
+    matcher: {}
+  - cmd: test -f /opt/course/9/holy-api-deployment.yaml
+    matcher: {}
+  - cmd: '! kubectl -n pluto get pod holy-api'
+    matcher: {}
+  explanation: 'Start by creating a Deployment manifest based on the pod definition
+    in `/opt/course/9/holy-api-pod.yaml`. Change `kind: Pod` to `kind: Deployment`
+    and `apiVersion: v1` to `apiVersion: apps/v1`. Wrap the pod''s `spec` and `metadata`
+    inside a `template` field. Add `replicas: 3` and a `selector` to the top-level
+    `spec`. Add the required `securityContext`. Finally, apply the new manifest and
+    delete the old pod.'
+  metadata:
+    id: ckad-sim::q9-pod-to-deployment
+    type: live_k8s_edit
+    category: Workload Management
+    source: https://killer.sh/ckad
+- id: ckad-sim::q3-job
+  prompt: 'Create a Job manifest at `/opt/course/3/job.yaml`. The Job, named `neb-new-job`
+    in namespace `neptune`, should run the command `sleep 2 && echo done` with image
+    `busybox:1.31.0`. It should have a total of 3 completions, with 2 running in parallel.
+    Pods created by the Job must have the label `id: awesome-job`, and the container
+    should be named `neb-new-job-container`. After creating the manifest, apply it
+    to start the Job.'
+  type: live_k8s_edit
+  pre_shell_cmds:
+  - kubectl create namespace neptune
+  - mkdir -p /opt/course/3
+  validation_steps:
+  - cmd: kubectl -n neptune get job neb-new-job -o jsonpath='{.spec.completions}'
+    matcher: {}
+  - cmd: kubectl -n neptune get job neb-new-job -o jsonpath='{.spec.parallelism}'
+    matcher: {}
+  - cmd: kubectl -n neptune get job neb-new-job -o jsonpath='{.spec.template.metadata.labels.id}'
+    matcher: {}
+  - cmd: kubectl -n neptune get job neb-new-job -o jsonpath='{.spec.template.spec.containers[0].name}'
+    matcher: {}
+  - cmd: test -f /opt/course/3/job.yaml
+    matcher: {}
+  - cmd: kubectl -n neptune get job neb-new-job
+    matcher: {}
+  explanation: A Job manifest can be created using `kubectl create job --dry-run=client
+    -o yaml`. The YAML should then be edited to set `completions`, `parallelism`,
+    container name, and pod labels in the `template` section. The job is then created
+    using `kubectl apply -f <file.yaml>`. The job's status can be monitored with `kubectl
+    get job` and `kubectl describe job`.
+  metadata:
+    id: ckad-sim::q3-job
+    type: live_k8s_edit
+    category: Workload Management
+    source: https://killer.sh/ckad
+- id: yaml-author-q1
+  prompt: 'In namespace limit create a Pod named resource-checker using image httpd:alpine
+    with container name my-container; requests: cpu=30m, memory=30Mi; limits: cpu=300m,
+    memory=30Mi.'
+  type: yaml_author
+  metadata:
+    id: yaml-author-q1
+    category: YAML Authoring
+    type: yaml_author
+    answer: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-checker\n  namespace:\
+      \ limit\nspec:\n  containers:\n  - name: my-container\n    image: httpd:alpine\n\
+      \    resources:\n      requests:\n        cpu: 30m\n        memory: 30Mi\n \
+      \     limits:\n        cpu: 300m\n        memory: 30Mi\n"
+- id: yaml-author-q2
+  prompt: Create a ConfigMap named trauerweide with data tree=trauerweide.
+  type: yaml_author
+  metadata:
+    id: yaml-author-q2
+    category: YAML Authoring
+    type: yaml_author
+    answer: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: trauerweide\ndata:\n\
+      \  tree: trauerweide\n"
+- id: yaml-author-q3
+  prompt: Create a Pod named pod1 using image nginx:alpine with env var TREE1 from
+    ConfigMap trauerweide:key=tree and mount all keys of ConfigMap birke under /etc/birke.
+  type: yaml_author
+  metadata:
+    id: yaml-author-q3
+    category: YAML Authoring
+    type: yaml_author
+    answer: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\nspec:\n  containers:\n\
+      \  - name: nginx\n    image: nginx:alpine\n    env:\n    - name: TREE1\n   \
+      \   valueFrom:\n        configMapKeyRef:\n          name: trauerweide\n    \
+      \      key: tree\n    volumeMounts:\n    - name: birke-volume\n      mountPath:\
+      \ /etc/birke\n  volumes:\n  - name: birke-volume\n    configMap:\n      name:\
+      \ birke\n"
+- id: yaml-author-q4
+  prompt: Create a Deployment named space-alien-welcome-message-generator using image
+    httpd:alpine with 1 replica and readinessProbe running stat /tmp/ready with initialDelaySeconds=10
+    and periodSeconds=5.
+  type: yaml_author
+  metadata:
+    id: yaml-author-q4
+    category: YAML Authoring
+    type: yaml_author
+    answer: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: space-alien-welcome-message-generator\n\
+      spec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: space-alien-welcome-message-generator\n\
+      \  template:\n    metadata:\n      labels:\n        app: space-alien-welcome-message-generator\n\
+      \    spec:\n      containers:\n      - name: httpd\n        image: httpd:alpine\n\
+      \        readinessProbe:\n          exec:\n            command:\n          \
+      \  - stat\n            - /tmp/ready\n          initialDelaySeconds: 10\n   \
+      \       periodSeconds: 5\n"
+- id: yaml_quiz::app-config-cm
+  prompt: Edit 'configmap.yaml' to create a ConfigMap named 'app-config' with the
+    data 'database_url=mysql://localhost:3306/app'. After editing, apply the manifest.
+  type: live_k8s_edit
+  initial_files:
+    configmap.yaml: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: # TODO: Add\
+      \ name\ndata:\n  # TODO: Add data fields\n"
+  validation_steps:
+  - cmd: kubectl get configmap app-config -o jsonpath='{.data.database_url}'
+    matcher:
+      contains: mysql://localhost:3306/app
+  explanation: ConfigMap with key-value data for application configuration. Validation
+    is performed by checking the live resource in the cluster, not by comparing YAML
+    files.
+  metadata:
+    id: yaml_quiz::app-config-cm
+    type: live_k8s_edit
+    category: YAML Editing - ConfigMaps
+- id: yaml-edit-q4
+  prompt: 'Create a ConfigMap named ''app-config'' with data: database_url=mysql://localhost:3306/app'
+  type: yaml_edit
+  explanation: ConfigMap with key-value data for application configuration
+  metadata:
+    id: yaml-edit-q4
+    category: YAML Editing - ConfigMaps
+    type: yaml_edit
+    starting_yaml: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: # TODO: Add\
+      \ name\ndata:\n  # TODO: Add data fields\n"
+    answer: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n\
+      \  database_url: mysql://localhost:3306/app\n"
+- id: yaml_quiz::frontend-deployment
+  prompt: Edit 'deployment.yaml' to create a Deployment named 'frontend' with 3 replicas
+    of 'nginx:1.21'. After editing, apply the manifest.
+  type: live_k8s_edit
+  initial_files:
+    deployment.yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: #\
+      \ TODO: Add name\nspec:\n  replicas: # TODO: Set replicas\n  selector:\n   \
+      \ matchLabels:\n      app: frontend\n  template:\n    metadata:\n      labels:\n\
+      \        app: frontend\n    spec:\n      containers:\n      - name: nginx\n\
+      \        image: # TODO: Set image\n"
+  validation_steps:
+  - cmd: kubectl get deploy frontend -o jsonpath='{.spec.replicas}'
+    matcher:
+      contains: '3'
+  - cmd: kubectl get deploy frontend -o jsonpath='{.spec.template.spec.containers[0].image}'
+    matcher:
+      contains: nginx:1.21
+  explanation: Deployment with replica count and proper label selectors. Validation
+    is performed by checking the live resource in the cluster, not by comparing YAML
+    files.
+  metadata:
+    id: yaml_quiz::frontend-deployment
+    type: live_k8s_edit
+    category: YAML Editing - Deployments
+- id: yaml-edit-q3
+  prompt: Create a Deployment named 'frontend' with 3 replicas. Set the image for
+    the 'nginx' container to nginx:1.21.
+  type: yaml_edit
+  explanation: Deployment with replica count and proper label selectors
+  metadata:
+    id: yaml-edit-q3
+    category: YAML Editing - Deployments
+    type: yaml_edit
+    starting_yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: # TODO:\
+      \ Add name\nspec:\n  replicas: # TODO: Set replicas\n  selector:\n    matchLabels:\n\
+      \      app: frontend\n  template:\n    metadata:\n      labels:\n        app:\
+      \ frontend\n    spec:\n      containers:\n      - name: nginx\n        image:\
+      \ # TODO: Set image\n"
+    answer: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n\
+      spec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: frontend\n \
+      \ template:\n    metadata:\n      labels:\n        app: frontend\n    spec:\n\
+      \      containers:\n      - name: nginx\n        image: nginx:1.21\n"
+- id: yaml_quiz::resource-checker-pod
+  prompt: A namespace 'limit' has been created. Edit 'pod.yaml' to define a Pod named
+    'resource-checker' in that namespace. It should use the 'httpd:alpine' image with
+    a container named 'my-container'. Configure resource requests for 'cpu=30m' and
+    'memory=30Mi', and limits for 'cpu=300m' and 'memory=30Mi'. After editing, apply
+    the manifest.
+  type: live_k8s_edit
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-checker\n  namespace:\
+      \ limit\nspec:\n  containers:\n  - name: my-container\n    image: httpd:alpine\n\
+      \    resources:\n      requests:\n        cpu: # TODO\n        memory: # TODO\n\
+      \      limits:\n        cpu: # TODO\n        memory: # TODO\n"
+  pre_shell_cmds:
+  - kubectl create ns limit
+  validation_steps:
+  - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.requests.cpu}'
+    matcher:
+      contains: 30m
+  - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.requests.memory}'
+    matcher:
+      contains: 30Mi
+  - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.limits.cpu}'
+    matcher:
+      contains: 300m
+  - cmd: kubectl get pod resource-checker -n limit -o jsonpath='{.spec.containers[0].resources.limits.memory}'
+    matcher:
+      contains: 30Mi
+  explanation: Pod with resource requests and limits. Validation is performed by checking
+    the live resource in the cluster, not by comparing YAML files.
+  metadata:
+    id: yaml_quiz::resource-checker-pod
+    type: live_k8s_edit
+    category: YAML Editing - General
+- id: yaml_quiz::trauerweide-cm
+  prompt: Edit 'configmap.yaml' to create a ConfigMap named 'trauerweide' with the
+    data 'tree=trauerweide'. After editing, apply the manifest.
+  type: live_k8s_edit
+  initial_files:
+    configmap.yaml: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: # TODO\n\
+      data:\n  # TODO\n"
+  validation_steps:
+  - cmd: kubectl get configmap trauerweide -o jsonpath='{.data.tree}'
+    matcher:
+      contains: trauerweide
+  explanation: Basic ConfigMap creation. Validation is performed by checking the live
+    resource in the cluster, not by comparing YAML files.
+  metadata:
+    id: yaml_quiz::trauerweide-cm
+    type: live_k8s_edit
+    category: YAML Editing - General
+- id: yaml_quiz::pod-with-cm-ref
+  prompt: Two ConfigMaps, 'trauerweide' and 'birke', have been created. Edit 'pod.yaml'
+    to create a Pod named 'pod1' using the 'nginx:alpine' image. The Pod should have
+    an environment variable 'TREE1' that gets its value from the 'tree' key of the
+    'trauerweide' ConfigMap. It should also mount all keys from the 'birke' ConfigMap
+    into the directory '/etc/birke'. After editing, apply the manifest.
+  type: live_k8s_edit
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\nspec:\n  containers:\n\
+      \  - name: nginx\n    image: nginx:alpine\n    env:\n      # TODO\n    volumeMounts:\n\
+      \      # TODO\n  volumes:\n    # TODO\n"
+  pre_shell_cmds:
+  - kubectl create configmap trauerweide --from-literal=tree=trauerweide
+  - kubectl create configmap birke --from-literal=sample-key=sample-value
+  validation_steps:
+  - cmd: kubectl get pod pod1 -o jsonpath='{.spec.containers[0].env[0].valueFrom.configMapKeyRef.name}'
+    matcher:
+      contains: trauerweide
+  - cmd: kubectl get pod pod1 -o jsonpath='{.spec.volumes[0].configMap.name}'
+    matcher:
+      contains: birke
+  explanation: Pod with environment variable and volume from ConfigMaps. Validation
+    is performed by checking the live resource in the cluster, not by comparing YAML
+    files.
+  metadata:
+    id: yaml_quiz::pod-with-cm-ref
+    type: live_k8s_edit
+    category: YAML Editing - General
+- id: yaml_quiz::deployment-readiness
+  prompt: Edit 'deployment.yaml' to create a Deployment named 'space-alien-welcome-message-generator'
+    using the 'httpd:alpine' image. It should have 1 replica and a readinessProbe
+    that runs the command 'stat /tmp/ready' with an 'initialDelaySeconds' of 10 and
+    a 'periodSeconds' of 5. After editing, apply the manifest.
+  type: live_k8s_edit
+  initial_files:
+    deployment.yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: space-alien-welcome-message-generator\n\
+      spec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: space-alien-welcome-message-generator\n\
+      \  template:\n    metadata:\n      labels:\n        app: space-alien-welcome-message-generator\n\
+      \    spec:\n      containers:\n      - name: httpd\n        image: httpd:alpine\n\
+      \        readinessProbe:\n          # TODO\n"
+  validation_steps:
+  - cmd: kubectl get deploy space-alien-welcome-message-generator -o jsonpath='{.spec.template.spec.containers[0].readinessProbe.exec.command[1]}'
+    matcher:
+      contains: /tmp/ready
+  - cmd: kubectl get deploy space-alien-welcome-message-generator -o jsonpath='{.spec.template.spec.containers[0].readinessProbe.initialDelaySeconds}'
+    matcher:
+      contains: '10'
+  explanation: Deployment with a readiness probe. Validation is performed by checking
+    the live resource in the cluster, not by comparing YAML files.
+  metadata:
+    id: yaml_quiz::deployment-readiness
+    type: live_k8s_edit
+    category: YAML Editing - General
+- id: yaml_quiz::web-server-pod
+  prompt: Edit 'pod.yaml' to create a Pod named 'web-server' using the 'nginx:1.20'
+    image, exposing port 80. After editing, apply the manifest.
+  type: live_k8s_edit
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: # TODO: Add name\nspec:\n\
+      \  containers:\n  - name: # TODO: Add container name\n    image: # TODO: Add\
+      \ image\n    ports:\n    - containerPort: # TODO: Add port\n"
+  validation_steps:
+  - cmd: kubectl get pod web-server -o jsonpath='{.spec.containers[0].image}'
+    matcher:
+      contains: nginx:1.20
+  - cmd: kubectl get pod web-server -o jsonpath='{.spec.containers[0].ports[0].containerPort}'
+    matcher:
+      contains: '80'
+  explanation: Basic pod with specific name, image, and port configuration. Validation
+    is performed by checking the live resource in the cluster, not by comparing YAML
+    files.
+  metadata:
+    id: yaml_quiz::web-server-pod
+    type: live_k8s_edit
+    category: YAML Editing - Pods
+- id: yaml_quiz::pod-with-env
+  prompt: 'Edit ''pod.yaml'' to create a Pod named ''app-pod'' with environment variables:
+    DB_HOST=localhost, DB_PORT=5432. After editing, apply the manifest.'
+  type: live_k8s_edit
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n\
+      \  - name: app\n    image: nginx\n    env:\n    # TODO: Add environment variables\n"
+  validation_steps:
+  - cmd: kubectl get pod app-pod -o jsonpath='{.spec.containers[0].env[0].name}'
+    matcher:
+      contains: DB_HOST
+  - cmd: kubectl get pod app-pod -o jsonpath='{.spec.containers[0].env[1].value}'
+    matcher:
+      contains: '5432'
+  explanation: Pod with environment variables defined in container spec. Validation
+    is performed by checking the live resource in the cluster, not by comparing YAML
+    files.
+  metadata:
+    id: yaml_quiz::pod-with-env
+    type: live_k8s_edit
+    category: YAML Editing - Pods
+- id: yaml-edit-q1
+  prompt: Create a Pod named 'web-server' with a container named 'nginx' using the
+    nginx:1.20 image, and expose port 80.
+  type: yaml_edit
+  explanation: Basic pod with specific name, image, and port configuration
+  metadata:
+    id: yaml-edit-q1
+    category: YAML Editing - Pods
+    type: yaml_edit
+    starting_yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: # TODO: Add name\n\
+      spec:\n  containers:\n  - name: # TODO: Add container name\n    image: # TODO:\
+      \ Add image\n    ports:\n    - containerPort: # TODO: Add port\n"
+    answer: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: web-server\nspec:\n  containers:\n\
+      \  - name: nginx\n    image: nginx:1.20\n    ports:\n    - containerPort: 80\n"
+- id: yaml-edit-q2
+  prompt: 'Create a Pod named ''app-pod'' with container name ''app'' and environment
+    variables: DB_HOST=localhost, DB_PORT=5432'
+  type: yaml_edit
+  explanation: Pod with environment variables defined in container spec
+  metadata:
+    id: yaml-edit-q2
+    category: YAML Editing - Pods
+    type: yaml_edit
+    starting_yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n\
+      \  containers:\n  - name: app\n    image: nginx\n    env:\n    # TODO: Add environment\
+      \ variables\n"
+    answer: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n\
+      \  - name: app\n    image: nginx\n    env:\n    - name: DB_HOST\n      value:\
+      \ localhost\n    - name: DB_PORT\n      value: \"5432\"\n"
+- id: manifests::configmaps::add-data
+  prompt: 'Edit the ConfigMap manifest to add a new key-value pair: `database.host`
+    with value `mysql.example.com`.'
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    configmap.yaml: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-config\n\
+      data:\n  app.name: my-app\n"
+  correct_yaml: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-config\ndata:\n\
+    \  app.name: my-app\n  database.host: mysql.example.com\n"
+- id: manifests::deployments::increase-replicas
+  prompt: Edit the deployment manifest to increase the number of replicas to 3.
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    deployment.yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n\
+      spec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n\
+      \    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n\
+      \      - name: nginx\n        image: nginx:1.14.2\n"
+  correct_yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n\
+    spec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n    template:\n\
+    \      metadata:\n        labels:\n          app: nginx\n    spec:\n      containers:\n\
+    \      - name: nginx\n        image: nginx:1.14.2\n"
+- id: manifests::deployments::change-image
+  prompt: Edit the deployment manifest to change the container image from `nginx:1.14.2`
+    to `nginx:1.16.1`.
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    deployment.yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n\
+      spec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n\
+      \    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n\
+      \      - name: nginx\n        image: nginx:1.14.2\n"
+  correct_yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n\
+    spec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n    template:\n\
+    \      metadata:\n        labels:\n          app: nginx\n    spec:\n      containers:\n\
+    \      - name: nginx\n        image: nginx:1.16.1\n"
+- id: manifests::deployments::add-init-container
+  prompt: 'A Deployment needs an init container to prepare a volume. For the `test-init-container`
+    Deployment in namespace `mars`, add an `initContainer` named `init-con`. It should
+    use the `busybox:1.31.0` image and run a command to create a file: `echo ''check
+    this out!'' > /tmp/web-content/index.html`. The init container should mount the
+    existing `web-content` volume at `/tmp/web-content`.'
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    deployment.yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: test-init-container\n\
+      \  namespace: mars\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n  \
+      \    id: test-init-container\n  template:\n    metadata:\n      labels:\n  \
+      \      id: test-init-container\n    spec:\n      volumes:\n      - name: web-content\n\
+      \        emptyDir: {}\n      containers:\n      - name: nginx\n        image:\
+      \ nginx:1.17.3-alpine\n        volumeMounts:\n        - name: web-content\n\
+      \          mountPath: /usr/share/nginx/html\n        ports:\n        - containerPort:\
+      \ 80\n"
+  correct_yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: test-init-container\n\
+    \  namespace: mars\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n    \
+    \  id: test-init-container\n  template:\n    metadata:\n      labels:\n      \
+    \  id: test-init-container\n    spec:\n      volumes:\n      - name: web-content\n\
+    \        emptyDir: {}\n      initContainers:\n      - name: init-con\n       \
+    \ image: busybox:1.31.0\n        command: ['sh', '-c', 'echo \"check this out!\"\
+    \ > /tmp/web-content/index.html']\n        volumeMounts:\n        - name: web-content\n\
+    \          mountPath: /tmp/web-content\n      containers:\n      - name: nginx\n\
+    \        image: nginx:1.17.3-alpine\n        volumeMounts:\n        - name: web-content\n\
+    \          mountPath: /usr/share/nginx/html\n        ports:\n        - containerPort:\
+    \ 80\n"
+- id: pod-mgmt-q10
+  category: Pod Management
+  prompt: Create a pod named pod1 with image httpd:2.4.41-alpine and output YAML only.
+  response: kubectl run pod1 --image=httpd:2.4.41-alpine --dry-run=client -o yaml
+- id: pod-mgmt-q11
+  category: Pod Management
+  prompt: Force delete a pod named webserver-sat-003 in the saturn namespace.
+  response: kubectl -n saturn delete pod webserver-sat-003 --force --grace-period=0
+- id: pod-mgmt-q12
+  category: Pod Management
+  prompt: Print the status phase of pod pod1 in the default namespace using a jsonpath
+    query.
+  response: kubectl -n default get pod pod1 -o jsonpath="{.status.phase}"
+- id: manifests::pods::add-env-var
+  prompt: Edit the pod manifest to add an environment variable `GREETING` with the
+    value `Hello World` to the `nginx` container.
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n\
+      \  - name: nginx\n    image: nginx:1.14.2\n"
+  correct_yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n\
+    \  - name: nginx\n    image: nginx:1.14.2\n    env:\n    - name: GREETING\n  \
+    \    value: \"Hello World\"\n"
+- id: manifests::pods::add-volume-mount
+  prompt: Edit the pod manifest to mount a volume named `workdir` at path `/app/data`.
+    The volume should be an `emptyDir`.
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod-with-volume\n\
+      spec:\n  containers:\n  - name: my-container\n    image: busybox\n    command:\
+      \ [\"sleep\", \"3600\"]\n"
+  correct_yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod-with-volume\n\
+    spec:\n  containers:\n  - name: my-container\n    image: busybox\n    command:\
+    \ [\"sleep\", \"3600\"]\n    volumeMounts:\n    - name: workdir\n      mountPath:\
+    \ /app/data\n  volumes:\n  - name: workdir\n    emptyDir: {}\n"
+- id: manifests::pods::readiness-probe
+  prompt: A Pod needs a readiness probe. Edit the Pod manifest for `pod6` to add a
+    readiness probe that executes `cat /tmp/ready`. The probe should have an `initialDelaySeconds`
+    of 5 and a `periodSeconds` of 10. The Pod's command should be `touch /tmp/ready
+    && sleep 1d`.
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    pod.yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod6\nspec:\n  containers:\n\
+      \  - name: pod6\n    image: busybox:1.31.0\n    command:\n    - \"sh\"\n   \
+      \ - \"-c\"\n    - \"touch /tmp/ready && sleep 1d\"\n"
+  correct_yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod6\nspec:\n  containers:\n\
+    \  - name: pod6\n    image: busybox:1.31.0\n    command:\n    - \"sh\"\n    -\
+    \ \"-c\"\n    - \"touch /tmp/ready && sleep 1d\"\n    readinessProbe:\n      exec:\n\
+    \        command:\n        - cat\n        - /tmp/ready\n      initialDelaySeconds:\
+    \ 5\n      periodSeconds: 10\n"
+- id: manifests::services::change-port
+  prompt: Edit the Service manifest to change the `targetPort` from 80 to 8080.
+  type: yaml_edit
+  category: YAML Editing Practice
+  initial_files:
+    service.yaml: "apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\n\
+      spec:\n  selector:\n    app: MyApp\n  ports:\n    - protocol: TCP\n      port:\
+      \ 80\n      targetPort: 80\n"
+  correct_yaml: "apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n\
+    \  selector:\n    app: MyApp\n  ports:\n    - protocol: TCP\n      port: 80\n\
+    \      targetPort: 8080\n"
+'''

# 2025-08-14 10:38:48.968458
+S

# 2025-08-14 10:40:20.151795
+A

# 2025-08-14 10:51:34.028803
+dont you think that '  26. Yaml Authoring
+  27. Yaml Editing Practice ' are a bit redundant, when we are supposed to have manifest-based questions for most sections? Could you possibly refactor those to go with more directly along with CKAD subject matter areas? 

# 2025-08-14 10:53:29.280142
+I believe they are already in the chat window

# 2025-08-14 10:55:40.601309
+/drop

# 2025-08-14 10:55:41.461157
+/clear

# 2025-08-14 10:55:46.914004
+dont you think that '  26. Yaml Authoring
+  27. Yaml Editing Practice ' are a bit redundant, when we are supposed to have manifest-based questions for most sections? Could you possibly refactor those to go with more directly along with CKAD subject matter areas? 

# 2025-08-14 10:58:44.088686
+A

# 2025-08-14 11:36:10.845159
+/run rm questions/yaml_authoring.yaml

# 2025-08-14 11:36:10.846192
+/run rm questions/yaml_authoring.yaml

# 2025-08-14 11:36:11.381779
+/run rm questions/yaml_editing_practice.yaml

# 2025-08-14 11:36:11.381844
+/run rm questions/yaml_editing_practice.yaml

# 2025-08-14 12:05:20.465058
+/drop

# 2025-08-14 12:12:50.919654
+Looking through git at the questions you have added, you may need to do some detailed reformatting to fit the spec you have already created in the app - the yaml is wildly different. For example: '''  - id: manifests::services::change-port
+    prompt: Edit the Service manifest to change the `targetPort` from 80 to 8080.
+    type: yaml_edit
+    category: YAML Editing Practice
+    initial_files:
+      service.yaml: "apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\n\
+        spec:\n  selector:\n    app: MyApp\n  ports:\n    - protocol: TCP\n      port:\
+        \ 80\n      targetPort: 80\n"
+    correct_yaml: "apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n\
+      \  selector:\n    app: MyApp\n  ports:\n    - protocol: TCP\n      port: 80\n\
+      \      targetPort: 8080\n"''' compared to simply: '''- question: "Create a manifest for a Pod named 'nginx-pod-manifest' using the 'nginx:alpine' image."
+    solution: |
+      apiVersion: v1
+      kind: Pod
+      metadata:
+        name: nginx-pod-manifest
+      spec:
+        containers:
+        - name: nginx
+          image: nginx:alpine''' 

# 2025-08-14 12:17:54.620578
+A

# 2025-08-14 12:36:44.016525
+/drop

# 2025-08-14 12:43:32.083866
+have you managed to get all of them? it seems this is a result of incorrect yaml schema still being present: ```
+Question 4/4 (Topic: persistence)
+----------------------------------------
+Traceback (most recent call last):
+  File "/Users/user/Documents/GitHub/kubelingo/kubelingo.py", line 445, in <module>
+    main()
+  File "/Users/user/Documents/GitHub/kubelingo/kubelingo.py", line 436, in main
+    run_topic(topic)
+  File "/Users/user/Documents/GitHub/kubelingo/kubelingo.py", line 318, in run_topic
+    print(q['question'])
+          ~^^^^^^^^^^^^
+KeyError: 'question'
+```
+
+in this yaml though, it looks like the schema is correct - is it just an issue with indexing? '''questions:
+  - question: "Create a PersistentVolumeClaim named 'my-pvc' that requests 1Gi of storage with the 'ReadWriteOnce' access mode."
+    solution: |
+      apiVersion: v1
+      kind: PersistentVolumeClaim
+      metadata:
+        name: my-pvc
+      spec:
+        accessModes:
+          - ReadWriteOnce
+        resources:
+          requests:
+            storage: 1Gi
+  - question: "Pod manifest using an emptyDir volume mounted at /cache."
+    solution: |
+      apiVersion: v1
+      kind: Pod
+      metadata:
+        name: cache-user
+      spec:
+        volumes:
+          - name: cache
+            emptyDir: {}
+        containers:
+          - name: app
+            image: busybox
+            volumeMounts:
+              - name: cache
+                mountPath: /cache
+  - question: "PVC manifest requesting 1Gi, ReadWriteOnce."
+    solution: |
+      apiVersion: v1
+      kind: PersistentVolumeClaim
+      metadata:
+        name: data-pvc
+      spec:
+        accessModes: ["ReadWriteOnce"]
+        resources:
+          requests:
+            storage: 1Gi
+  - question: "Create a Pod `my-pod-with-volume` with a `busybox` container running `sleep 3600`. Mount an `emptyDir` volume named `workdir` at `/app/data`."
+    solution: |
+      apiVersion: v1
+      kind: Pod
+      metadata:
+        name: my-pod-with-volume
+      spec:
+        containers:
+        - name: my-container
+          image: busybox
+          command: ["sleep", "3600"]
+          volumeMounts:
+          - name: workdir
+            mountPath: /app/data
+        volumes:
+        - name: workdir
+          emptyDir: {}
+'''

# 2025-08-14 12:57:10.981750
+/drop

# 2025-08-14 13:00:25.232727
+write a test for all files, and see if they crash the app looking for the wrong key like this: '''> Traceback (most recent call last): 
+>   File "/Users/user/Documents/GitHub/kubelingo/kubelingo.py", line 445, in <module> 
+>     main() 
+>   File "/Users/user/Documents/GitHub/kubelingo/kubelingo.py", line 436, in main 
+>     run_topic(topic) 
+>   File "/Users/user/Documents/GitHub/kubelingo/kubelingo.py", line 318, in run_topic 
+>     print(q['question']) 
+>           ~^^^^^^^^^^^^ 
+> KeyError: 'question' ''' there are many yaml files that now have improperly formatted yaml attached to them - you will have to take the time and consider each question to be able to tell how you want the solution to look like in your yaml specification. For now, lets just identify all the questions that need reformatting.

# 2025-08-14 13:08:26.949078
+/run python3 test_questions_schema.py

# 2025-08-14 13:08:26.949583
+/run python3 test_questions_schema.py

# 2025-08-14 13:08:49.446884
+put that test in a /tests dir and fix the yaml it failed on, please 

# 2025-08-14 13:11:49.433166
+A

# 2025-08-14 13:21:19.427965
+/run python3 tests/test_questions_schema.py

# 2025-08-14 13:21:19.428544
+/run python3 tests/test_questions_schema.py

# 2025-08-14 13:21:30.670196
+/drop\

# 2025-08-14 13:21:32.389470
+/drop

# 2025-08-14 13:21:39.297840
+put it in the tests dir and run the test

# 2025-08-14 13:31:23.809786
+/run mkdir -p tests

# 2025-08-14 13:31:23.810460
+/run mkdir -p tests

# 2025-08-14 13:31:25.127612
+/run python3 tests/test_questions_schema.py

# 2025-08-14 13:31:25.127843
+/run python3 tests/test_questions_schema.py

# 2025-08-14 13:33:44.117328
+/drop

# 2025-08-14 13:33:45.323421
+/clear

# 2025-08-14 13:35:44.445727
+- flag should be reformatted as 'create issue' and apply more generally to the whole app, the user can easily append to the list of issues without burdening AI at the same time; issues should be added here with the simplest formatting possible 
+- this should occur after the question is asked; many times i need to create an issue because the question did not give complete information. for example: 
+
+```
+Question 1/20 (Topic: helm_basics)
+----------------------------------------
+How do you add the Prometheus community Helm repository and name it `prometheus-community`?
+----------------------------------------
+Enter command(s). Type 'done' to check. Special commands: 'solution', 'flag', 'generate', 'vim'.
+> helm repo add prometheus-community
+> 
+> done
+
+Not quite. Here's one possible solution:
+
+helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
+
+--- AI Feedback ---
+The student's answer is missing the repository URL.  To correctly add the Prometheus community Helm repository, they need to specify the URL `https://prometheus-community.github.io/helm-charts` after the repository name.  Adding the URL tells Helm where to find the charts.
+
+----------------------------------------
+Press Enter for the next question...
+
+```
+
+- in the above, how was I supposed to know to add the URL? 

# 2025-08-16 11:29:29.174152
+
+```
+Question 1/20 (Topic: helm_basics)
+----------------------------------------
+How do you add the Prometheus community Helm repository and name it `prometheus-community`?
+----------------------------------------
+Enter command(s). Type 'done' to check. Special commands: 'solution', 'flag', 'generate', 'vim'.
+> helm repo add prometheus-community
+> 
+> done
+
+Not quite. Here's one possible solution:
+
+helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
+
+--- AI Feedback ---
+The student's answer is missing the repository URL.  To correctly add the Prometheus community Helm repository, they need to specify the URL `https://prometheus-community.github.io/helm-charts` after the repository name.  Adding the URL tells Helm where to find the charts.
+
+----------------------------------------
+Press Enter for the next question...
+
+```
+
+- in the above, how was I supposed to know to add the URL? 

# 2025-08-16 11:29:30.075775
+A

# 2025-08-16 11:34:16.029073
+delete does not work; I cannot edit my answers after I type them 

# 2025-08-16 11:39:02.780832
+write a test for it

# 2025-08-16 11:40:04.379932
+/run python -m unittest tests/test_kubelingo.py

# 2025-08-16 11:40:04.380523
+/run python -m unittest tests/test_kubelingo.py

# 2025-08-16 11:40:20.055791
+fix - and wouldnt it be easier to use pytest? 

# 2025-08-16 11:43:53.103427
+/run pip install pytest

# 2025-08-16 11:43:53.104162
+/run pip install pytest

# 2025-08-16 11:43:54.876723
+/run pytest

# 2025-08-16 11:43:54.876789
+/run pytest

# 2025-08-16 11:51:54.258503
+- need the ability to navigate forward and backward through individual characters in answers (will require a test to be written ) - this is what happens when I try to use the left and right arrow keys: '''> helm repo install bitnami/node ^[[D^[[D^[[D'''

# 2025-08-16 12:01:21.233555
+/run pytest

# 2025-08-16 12:01:21.234225
+/run pytest

# 2025-08-16 12:07:32.689879
+- .vimrc needs to specify tab as two spaces (will require a test to be written )

# 2025-08-16 12:36:15.092334
+/run pytest

# 2025-08-16 12:36:15.092792
+/run pytest

# 2025-08-16 12:46:59.849795
+/drop

# 2025-08-16 12:47:00.761095
+/clear

# 2025-08-16 12:48:17.622109
+need to be grading performance and tracking relative strengths and weaknesses of students (will require a test to be written )

# 2025-08-16 13:06:33.941483
+A

# 2025-08-16 13:18:23.809777
+/run python3 -m pytest tests/test_kubelingo.py

# 2025-08-16 13:18:23.810355
+/run python3 -m pytest tests/test_kubelingo.py

# 2025-08-16 13:19:12.939264
+/drop

# 2025-08-16 13:19:13.788185
+/clear

# 2025-08-16 13:19:14.595917
+- there should be some colorful formatting around the CLI output (will require a test to be written )

# 2025-08-16 13:21:28.438125
+/run pip install -r requirements.txt

# 2025-08-16 13:21:28.438441
+/run pip install -r requirements.txt

# 2025-08-16 13:21:30.030116
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:21:30.030182
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:21:37.246078
+fix

# 2025-08-16 13:22:58.590404
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:22:58.590951
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:28:48.009950
+I am not seeing any color - can you use this as the title, and colorama as the coloring library: '''ASCII_ART = r"""                                      bbbbbbbb
+KKKKKKKKK    KKKKKKK                  b::::::b                                lllllll   iiii
+K:::::::K    K:::::K                  b::::::b                                l:::::l  i::::i
+K:::::::K    K:::::K                  b::::::b                                l:::::l   iiii
+K:::::::K   K::::::K                   b:::::b                                l:::::l
+KK::::::K  K:::::KKKuuuuuu    uuuuuu   b:::::bbbbbbbbb        eeeeeeeeeeee     l::::l iiiiiii nnnn  nnnnnnnn       ggggggggg   ggggg   ooooooooooo
+  K:::::K K:::::K   u::::u    u::::u   b::::::::::::::bb    ee::::::::::::ee   l::::l i:::::i n:::nn::::::::nn    g:::::::::ggg::::g oo:::::::::::oo
+  K::::::K:::::K    u::::u    u::::u   b::::::::::::::::b  e::::::eeeee:::::ee l::::l  i::::i n::::::::::::::nn  g:::::::::::::::::go:::::::::::::::o
+  K:::::::::::K     u::::u    u::::u   b:::::bbbbb:::::::be::::::e     e:::::e l::::l  i::::i nn:::::::::::::::ng::::::ggggg::::::ggo:::::ooooo:::::o
+  K:::::::::::K     u::::u    u::::u   b:::::b    b::::::be:::::::eeeee::::::e l::::l  i::::i   n:::::nnnn:::::ng:::::g     g:::::g o::::o     o::::o
+  K::::::K:::::K    u::::u    u::::u   b:::::b     b:::::be:::::::::::::::::e  l::::l  i::::i   n::::n    n::::ng:::::g     g:::::g o::::o     o::::o
+  K:::::K K:::::K   u::::u    u::::u   b:::::b     b:::::be::::::eeeeeeeeeee   l::::l  i::::i   n::::n    n::::ng:::::g     g:::::g o::::o     o::::o
+KK::::::K  K:::::KKKu:::::uuuu:::::u   b:::::b     b:::::be:::::::e            l::::l  i::::i   n::::n    n::::ng::::::g    g:::::g o::::o     o::::o
+K:::::::K   K::::::Ku:::::::::::::::uu b:::::bbbbbb::::::be::::::::e          l::::::li::::::i  n::::n    n::::ng:::::::ggggg:::::g o:::::ooooo:::::o
+K:::::::K    K:::::K u:::::::::::::::u b::::::::::::::::b  e::::::::eeeeeeee  l::::::li::::::i  n::::n    n::::n g::::::::::::::::g o:::::::::::::::o
+K:::::::K    K:::::K  uu::::::::uu:::u b:::::::::::::::b    ee:::::::::::::e  l::::::li::::::i  n::::n    n::::n  gg::::::::::::::g  oo:::::::::::oo
+KKKKKKKKK    KKKKKKK    uuuuuuuu  uuuu bbbbbbbbbbbbbbbb       eeeeeeeeeeeeee  lllllllliiiiiiii  nnnnnn    nnnnnn    gggggggg::::::g    ooooooooooo
+                                                                                                                            g:::::g
+                                                                                                                gggggg      g:::::g
+                                                                                                                g:::::gg   gg:::::g
+                                                                                                                 g::::::ggg:::::::g
+                                                                                                                  gg:::::::::::::g
+                                                                                                                    ggg::::::ggg
+                                                                                                                       gggggg                    """'''

# 2025-08-16 13:29:37.550047
+I am not seeing any color - can you use this as the title, and colorama as the coloring library: '''ASCII_ART = r"""                                      bbbbbbbb
+KKKKKKKKK    KKKKKKK                  b::::::b                                lllllll   iiii
+K:::::::K    K:::::K                  b::::::b                                l:::::l  i::::i
+K:::::::K    K:::::K                  b::::::b                                l:::::l   iiii
+K:::::::K   K::::::K                   b:::::b                                l:::::l
+KK::::::K  K:::::KKKuuuuuu    uuuuuu   b:::::bbbbbbbbb        eeeeeeeeeeee     l::::l iiiiiii nnnn  nnnnnnnn       ggggggggg   ggggg   ooooooooooo
+  K:::::K K:::::K   u::::u    u::::u   b::::::::::::::bb    ee::::::::::::ee   l::::l i:::::i n:::nn::::::::nn    g:::::::::ggg::::g oo:::::::::::oo
+  K::::::K:::::K    u::::u    u::::u   b::::::::::::::::b  e::::::eeeee:::::ee l::::l  i::::i n::::::::::::::nn  g:::::::::::::::::go:::::::::::::::o
+  K:::::::::::K     u::::u    u::::u   b:::::bbbbb:::::::be::::::e     e:::::e l::::l  i::::i nn:::::::::::::::ng::::::ggggg::::::ggo:::::ooooo:::::o
+  K:::::::::::K     u::::u    u::::u   b:::::b    b::::::be:::::::eeeee::::::e l::::l  i::::i   n:::::nnnn:::::ng:::::g     g:::::g o::::o     o::::o
+  K::::::K:::::K    u::::u    u::::u   b:::::b     b:::::be:::::::::::::::::e  l::::l  i::::i   n::::n    n::::ng:::::g     g:::::g o::::o     o::::o
+  K:::::K K:::::K   u::::u    u::::u   b:::::b     b:::::be::::::eeeeeeeeeee   l::::l  i::::i   n::::n    n::::ng:::::g     g:::::g o::::o     o::::o
+KK::::::K  K:::::KKKu:::::uuuu:::::u   b:::::b     b:::::be:::::::e            l::::l  i::::i   n::::n    n::::ng::::::g    g:::::g o::::o     o::::o
+K:::::::K   K::::::Ku:::::::::::::::uu b:::::bbbbbb::::::be::::::::e          l::::::li::::::i  n::::n    n::::ng:::::::ggggg:::::g o:::::ooooo:::::o
+K:::::::K    K:::::K u:::::::::::::::u b::::::::::::::::b  e::::::::eeeeeeee  l::::::li::::::i  n::::n    n::::n g::::::::::::::::g o:::::::::::::::o
+K:::::::K    K:::::K  uu::::::::uu:::u b:::::::::::::::b    ee:::::::::::::e  l::::::li::::::i  n::::n    n::::n  gg::::::::::::::g  oo:::::::::::oo
+KKKKKKKKK    KKKKKKK    uuuuuuuu  uuuu bbbbbbbbbbbbbbbb       eeeeeeeeeeeeee  lllllllliiiiiiii  nnnnnn    nnnnnn    gggggggg::::::g    ooooooooooo
+                                                                                                                            g:::::g
+                                                                                                                gggggg      g:::::g
+                                                                                                                g:::::gg   gg:::::g
+                                                                                                                 g::::::ggg:::::::g
+                                                                                                                  gg:::::::::::::g
+                                                                                                                    ggg::::::ggg
+                                                                                                                       gggggg                    """''' and its very important the manifest yaml has color coordination because the various fields and indentions mean that we need some contrast to understand it more easily  

# 2025-08-16 13:34:13.502345
+/run pip install -r requirements.txt

# 2025-08-16 13:34:13.502913
+/run pip install -r requirements.txt

# 2025-08-16 13:34:15.071700
+/run python kubelingo.py

# 2025-08-16 13:34:15.071765
+/run python kubelingo.py

# 2025-08-16 13:34:23.435601
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:34:23.435686
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:35:08.004494
+/drop

# 2025-08-16 13:35:10.401780
+
+
+Please select a topic to study:
+  1. Api Discovery Docs (3/3 correct - 100%)
+  2. App Configuration
+  3. Commands Args Env
+  4. Core Workloads
+  5. Helm Basics
+  6. Image Registry Use
+  7. Imperative Vs Declarative
+  8. Ingress Http Routing
+  9. Jobs Cronjobs
+  10. Kubectl Common Operations
+  11. Kubectl Operations
+  12. Labels Annotations Selectors
+  13. Linux Syntax
+  14. Namespaces Contexts
+  15. Networking Utilities
+  16. Observability Troubleshooting
+  17. Persistence
+  18. Pod Design Patterns
+  19. Probes Health
+  20. Resource Management
+  21. Resource Reference
+  22. Scheduling Hints
+  23. Security Basics
+  24. Service Accounts In Apps
+  25. Services
+
+Or, select a special action:
+  m. Review Missed Questions
+
+Enter a number (1-25) or letter 'm': 
+Invalid input. Please enter a number or letter.
+
+Enter a number (1-25) or letter 'm': 1
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+Question 1/5 (Topic: api_discovery_docs)
+----------------------------------------
+Command to view the fields under Deployment.spec.strategy.
+----------------------------------------
+Enter command(s). Type 'done' to check. Special commands: 'solution', 'issue', 'generate', 'vim', 'back'.
+> 
+
+- should not be as much of a space for the next question, that whitespace should be removed
+- grading is not correct (I scored 3 our 5)
+- total questions should be listed next to each topic
+- menus need color 
+
+write tests and make sure all of these are fixed 

# 2025-08-16 13:36:46.783361
+A

# 2025-08-16 13:39:31.126764
+
+
+Please select a topic to study:
+  1. Api Discovery Docs (3/3 correct - 100%)
+  2. App Configuration
+  3. Commands Args Env
+  4. Core Workloads
+  5. Helm Basics
+  6. Image Registry Use
+  7. Imperative Vs Declarative
+  8. Ingress Http Routing
+  9. Jobs Cronjobs
+  10. Kubectl Common Operations
+  11. Kubectl Operations
+  12. Labels Annotations Selectors
+  13. Linux Syntax
+  14. Namespaces Contexts
+  15. Networking Utilities
+  16. Observability Troubleshooting
+  17. Persistence
+  18. Pod Design Patterns
+  19. Probes Health
+  20. Resource Management
+  21. Resource Reference
+  22. Scheduling Hints
+  23. Security Basics
+  24. Service Accounts In Apps
+  25. Services
+
+Or, select a special action:
+  m. Review Missed Questions
+
+Enter a number (1-25) or letter 'm': 
+Invalid input. Please enter a number or letter.
+
+Enter a number (1-25) or letter 'm': 1
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+Question 1/5 (Topic: api_discovery_docs)
+----------------------------------------
+Command to view the fields under Deployment.spec.strategy.
+----------------------------------------
+Enter command(s). Type 'done' to check. Special commands: 'solution', 'issue', 'generate', 'vim', 'back'.
+> 
+
+- should not be as much of a space for the next question, that whitespace should be removed
+- grading is not correct (I scored 3 our 5)
+- total questions should be listed next to each topic
+- menus need color 
+
+write tests and make sure all of these are fixed  - another bug is that it is simply adding counts of what is correct, so now it shows 7/7 after it took it again - when it should only say 4/5 because I still got one wrong

# 2025-08-16 13:42:04.417445
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:42:04.417597
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:42:11.098512
+fix

# 2025-08-16 13:46:05.561229
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:46:05.564222
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:46:13.276752
+/drop

# 2025-08-16 13:46:43.545129
+make certain that the manifests have color formatting, and that a diff is shown for every wrong manifest submitted 

# 2025-08-16 13:51:44.898165
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:51:44.898832
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:52:10.687771
+this is still displaying incorrect grading: '''Please select a topic to study:
+  1. Api Discovery Docs [5 questions] (7/7 correct - 100%)
+  2. App Configuration [17 questions]
+  3. Commands Args Env [4 questions] (0/3 correct - 0%)
+  4. Core Workloads [18 questions]
+  5. Helm Basics [20 questions]
+  6. Image Registry Use [3 questions]
+  7. Imperative Vs Declarative [7 questions]
+  8. Ingress Http Routing [4 questions]
+  9. Jobs Cronjobs [5 questions]
+  10. Kubectl Common Operations [25 questions]
+  11. Kubectl Operations [44 questions]
+  12. Labels Annotations Selectors [9 questions]
+  13. Linux Syntax [44 questions]
+  14. Namespaces Contexts [11 questions]
+  15. Networking Utilities [3 questions]
+  16. Observability Troubleshooting [4 questions]
+  17. Persistence [3 questions]
+  18. Pod Design Patterns [8 questions]
+  19. Probes Health [5 questions]
+  20. Resource Management [5 questions]
+  21. Resource Reference [138 questions]
+  22. Scheduling Hints [3 questions]
+  23. Security Basics [7 questions]
+  24. Service Accounts In Apps [9 questions]
+  25. Services [9 questions]
+
+Or, select a special action:
+  m. Review Missed Questions
+
+Enter a number (1-25) or letter 'm': 
+'''

# 2025-08-16 13:55:06.076005
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:55:06.076434
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:55:39.210617
+fix

# 2025-08-16 13:56:11.707522
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:56:11.707964
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:56:20.720902
+fix

# 2025-08-16 13:58:12.336831
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:58:12.337525
+/run pytest tests/test_kubelingo.py

# 2025-08-16 13:58:30.237432
+/drop

# 2025-08-16 13:58:31.221431
+/clear

# 2025-08-16 13:59:00.272986
+this is an incorrect reporting of correctness, as shown by the listing of the number of questions per topic: '''Please select a topic to study:
+  1. Api Discovery Docs [5 questions] (7/7 correct - 100%)
+  2. App Configuration [17 questions]
+  3. Commands Args Env [4 questions] (0/3 correct - 0%)
+  4. Core Workloads [18 questions]
+  5. Helm Basics [20 questions]
+  6. Image Registry Use [3 questions]
+  7. Imperative Vs Declarative [7 questions]
+  8. Ingress Http Routing [4 questions]
+  9. Jobs Cronjobs [5 questions]
+  10. Kubectl Common Operations [25 questions]
+  11. Kubectl Operations [44 questions]
+  12. Labels Annotations Selectors [9 questions]
+  13. Linux Syntax [44 questions]
+  14. Namespaces Contexts [11 questions]
+  15. Networking Utilities [3 questions]
+  16. Observability Troubleshooting [4 questions]
+  17. Persistence [3 questions]
+  18. Pod Design Patterns [8 questions]
+  19. Probes Health [5 questions]
+  20. Resource Management [5 questions]
+  21. Resource Reference [138 questions]
+  22. Scheduling Hints [3 questions]
+  23. Security Basics [7 questions]
+  24. Service Accounts In Apps [9 questions]
+  25. Services [9 questions]
+
+Or, select a special action:
+  m. Review Missed Questions
+
+Enter a number (1-25) or letter 'm': 
+'''

# 2025-08-16 13:59:58.913652
+A

# 2025-08-16 14:02:58.573499
+/run pytest tests/test_kubelingo.py

# 2025-08-16 14:02:58.574059
+/run pytest tests/test_kubelingo.py

# 2025-08-16 14:04:50.923295
+/drop

# 2025-08-16 14:04:56.314318
+this still is not fixed: '''➜  kubelingo git:(reset_081325) python kubelingo.py
+                                      bbbbbbbb
+KKKKKKKKK    KKKKKKK                  b::::::b                                lllllll   iiii
+K:::::::K    K:::::K                  b::::::b                                l:::::l  i::::i
+K:::::::K    K:::::K                  b::::::b                                l:::::l   iiii
+K:::::::K   K::::::K                   b:::::b                                l:::::l
+KK::::::K  K:::::KKKuuuuuu    uuuuuu   b:::::bbbbbbbbb        eeeeeeeeeeee     l::::l iiiiiii nnnn  nnnnnnnn       ggggggggg   ggggg   ooooooooooo
+  K:::::K K:::::K   u::::u    u::::u   b::::::::::::::bb    ee::::::::::::ee   l::::l i:::::i n:::nn::::::::nn    g:::::::::ggg::::g oo:::::::::::oo
+  K::::::K:::::K    u::::u    u::::u   b::::::::::::::::b  e::::::eeeee:::::ee l::::l  i::::i n::::::::::::::nn  g:::::::::::::::::go:::::::::::::::o
+  K:::::::::::K     u::::u    u::::u   b:::::bbbbb:::::::be::::::e     e:::::e l::::l  i::::i nn:::::::::::::::ng::::::ggggg::::::ggo:::::ooooo:::::o
+  K:::::::::::K     u::::u    u::::u   b:::::b    b::::::be:::::::eeeee::::::e l::::l  i::::i   n:::::nnnn:::::ng:::::g     g:::::g o::::o     o::::o
+  K::::::K:::::K    u::::u    u::::u   b:::::b     b:::::be:::::::::::::::::e  l::::l  i::::i   n::::n    n::::ng:::::g     g:::::g o::::o     o::::o
+  K:::::K K:::::K   u::::u    u::::u   b:::::b     b:::::be::::::eeeeeeeeeee   l::::l  i::::i   n::::n    n::::ng:::::g     g:::::g o::::o     o::::o
+KK::::::K  K:::::KKKu:::::uuuu:::::u   b:::::b     b:::::be:::::::e            l::::l  i::::i   n::::n    n::::ng::::::g    g:::::g o::::o     o::::o
+K:::::::K   K::::::Ku:::::::::::::::uu b:::::bbbbbb::::::be::::::::e          l::::::li::::::i  n::::n    n::::ng:::::::ggggg:::::g o:::::ooooo:::::o
+K:::::::K    K:::::K u:::::::::::::::u b::::::::::::::::b  e::::::::eeeeeeee  l::::::li::::::i  n::::n    n::::n g::::::::::::::::g o:::::::::::::::o
+K:::::::K    K:::::K  uu::::::::uu:::u b:::::::::::::::b    ee:::::::::::::e  l::::::li::::::i  n::::n    n::::n  gg::::::::::::::g  oo:::::::::::oo
+KKKKKKKKK    KKKKKKK    uuuuuuuu  uuuu bbbbbbbbbbbbbbbb       eeeeeeeeeeeeee  lllllllliiiiiiii  nnnnnn    nnnnnn    gggggggg::::::g    ooooooooooo
+                                                                                                                            g:::::g
+                                                                                                                gggggg      g:::::g
+                                                                                                                g:::::gg   gg:::::g
+                                                                                                                 g::::::ggg:::::::g
+                                                                                                                  gg:::::::::::::g
+                                                                                                                    ggg::::::ggg
+                                                                                                                       gggggg                    
+
+Please select a topic to study:
+  1. Api Discovery Docs [5 questions] (7/7 correct - 100%)
+  2. App Configuration [17 questions]
+  3. Commands Args Env [4 questions] (0/3 correct - 0%)
+  4. Core Workloads [18 questions]
+  5. Helm Basics [20 questions]
+  6. Image Registry Use [3 questions]
+  7. Imperative Vs Declarative [7 questions]
+  8. Ingress Http Routing [4 questions]
+  9. Jobs Cronjobs [5 questions]
+  10. Kubectl Common Operations [25 questions]
+  11. Kubectl Operations [44 questions]
+  12. Labels Annotations Selectors [9 questions]
+  13. Linux Syntax [44 questions]
+  14. Namespaces Contexts [11 questions]
+  15. Networking Utilities [3 questions]
+  16. Observability Troubleshooting [4 questions]
+  17. Persistence [3 questions]
+  18. Pod Design Patterns [8 questions]
+  19. Probes Health [5 questions]
+  20. Resource Management [5 questions]
+  21. Resource Reference [138 questions]
+  22. Scheduling Hints [3 questions]
+  23. Security Basics [7 questions]
+  24. Service Accounts In Apps [9 questions]
+  25. Services [9 questions]
+
+Or, select a special action:
+  m. Review Missed Questions
+
+'''

# 2025-08-16 14:04:57.063119
+A

# 2025-08-16 14:05:59.843674
+can you test and prove it will not happen again ?

# 2025-08-16 14:11:01.105225
+/run pytest tests/test_kubelingo.py

# 2025-08-16 14:11:01.105907
+/run pytest tests/test_kubelingo.py

# 2025-08-19 16:07:04.272501
+➜  kubelingo git:(reset_081325) ✗ pytest
+/Users/user/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
+The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"
+
+  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
+================================================================================================================ test session starts ================================================================================================================
+platform darwin -- Python 3.11.0, pytest-8.3.5, pluggy-1.6.0
+benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
+rootdir: /Users/user/Documents/GitHub/kubelingo
+plugins: xdist-3.7.0, hypothesis-6.135.16, html-4.1.1, metadata-3.1.1, anyio-4.10.0, playwright-0.7.0, mock-3.14.1, typeguard-2.13.3, benchmark-5.1.0, asyncio-0.26.0, base-url-2.1.0, langsmith-0.4.3, cov-6.1.1
+asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
+collected 12 items                                                                                                                                                                                                                                  
+
+tests/test_kubelingo.py FFF..FFFFFF                                                                                                                                                                                                           [ 91%]
+tests/test_questions_schema.py .                                                                                                                                                                                                              [100%]
+
+===================================================================================================================== FAILURES ======================================================================================================================
+_______________________________________________________________________________________________________ test_back_command_removes_last_entry ________________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10992b910>, capsys = <_pytest.capture.CaptureFixture object at 0x10ac58e90>
+
+    def test_back_command_removes_last_entry(monkeypatch, capsys):
+        """Tests that 'back' removes the previously entered command."""
+        inputs = iter(['cmd1', 'back', 'done'])
+        monkeypatch.setattr('builtins.input', lambda _prompt: next(inputs))
+        user_commands, special_action = get_user_input()
+        captured = capsys.readouterr()
+>       assert user_commands == []
+E       AssertionError: assert ['cmd1', 'back'] == []
+E         
+E         Left contains 2 more items, first extra item: 'cmd1'
+E         Use -v to get more diff
+
+tests/test_kubelingo.py:15: AssertionError
+__________________________________________________________________________________________________________ test_back_command_on_empty_list __________________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10aca82d0>, capsys = <_pytest.capture.CaptureFixture object at 0x10aca8590>
+
+    def test_back_command_on_empty_list(monkeypatch, capsys):
+        """Tests that 'back' does nothing when the command list is empty."""
+        inputs = iter(['back', 'done'])
+        monkeypatch.setattr('builtins.input', lambda _prompt: next(inputs))
+        user_commands, special_action = get_user_input()
+        captured = capsys.readouterr()
+>       assert user_commands == []
+E       AssertionError: assert ['back'] == []
+E         
+E         Left contains one more item: 'back'
+E         Use -v to get more diff
+
+tests/test_kubelingo.py:26: AssertionError
+__________________________________________________________________________________________________________ test_back_command_in_the_middle __________________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10aca0350>, capsys = <_pytest.capture.CaptureFixture object at 0x10aca3190>
+
+    def test_back_command_in_the_middle(monkeypatch, capsys):
+        """Tests using 'back' to remove a command between other commands."""
+        inputs = iter(['cmd1', 'cmd2', 'back', 'cmd3', 'done'])
+        monkeypatch.setattr('builtins.input', lambda _prompt: next(inputs))
+        user_commands, special_action = get_user_input()
+        captured = capsys.readouterr()
+>       assert user_commands == ['cmd1', 'cmd3']
+E       AssertionError: assert ['cmd1', 'cmd...back', 'cmd3'] == ['cmd1', 'cmd3']
+E         
+E         At index 1 diff: 'cmd2' != 'cmd3'
+E         Left contains 2 more items, first extra item: 'back'
+E         Use -v to get more diff
+
+tests/test_kubelingo.py:37: AssertionError
+_______________________________________________________________________________________________________ test_back_command_feedback_is_colored _______________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10ac539d0>, capsys = <_pytest.capture.CaptureFixture object at 0x10bd90810>
+
+    def test_back_command_feedback_is_colored(monkeypatch, capsys):
+        """Tests that feedback from the 'back' command is colorized."""
+        colorama.init(strip=False)
+        try:
+            # Test when an item is removed
+            inputs = iter(['cmd1', 'back', 'done'])
+            monkeypatch.setattr('builtins.input', lambda _prompt: next(inputs))
+            get_user_input()
+            captured = capsys.readouterr()
+>           assert "(Removed: 'cmd1')" in captured.out
+E           assert "(Removed: 'cmd1')" in ''
+E            +  where '' = CaptureResult(out='', err='').out
+
+tests/test_kubelingo.py:99: AssertionError
+_____________________________________________________________________________________________ test_performance_data_updates_with_unique_correct_answers _____________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10ac9c850>
+
+    def test_performance_data_updates_with_unique_correct_answers(monkeypatch):
+        """
+        Tests that performance data is updated with unique correctly answered questions,
+        and doesn't just overwrite with session data.
+        """
+        # Start with q1 already correct
+        mock_data_source = {'existing_topic': {'correct_questions': ['q1']}}
+        saved_data = {}
+    
+        def mock_load_performance_data():
+            return mock_data_source.copy()
+    
+        def mock_save_performance_data(data):
+            nonlocal saved_data
+            saved_data = data
+    
+        monkeypatch.setattr('kubelingo.load_performance_data', mock_load_performance_data)
+        monkeypatch.setattr('kubelingo.save_performance_data', mock_save_performance_data)
+    
+        # In this session, user answers q1 again correctly and q2 correctly.
+        questions = [{'question': 'q1', 'solution': 's1'}, {'question': 'q2', 'solution': 's2'}]
+        monkeypatch.setattr('kubelingo.load_questions', lambda topic: {'questions': questions})
+        monkeypatch.setattr('kubelingo.clear_screen', lambda: None)
+        monkeypatch.setattr('time.sleep', lambda seconds: None)
+        monkeypatch.setattr('kubelingo.save_question_to_list', lambda *args: None)
+        monkeypatch.setattr('kubelingo.random.shuffle', lambda x: None)
+    
+        from kubelingo import run_topic
+    
+        user_inputs = iter([
+            (['s1'], None),      # Correct answer for q1
+            (['s2'], None),      # Correct answer for q2
+        ])
+        monkeypatch.setattr('kubelingo.get_user_input', lambda: next(user_inputs))
+    
+>       run_topic('existing_topic')
+E       TypeError: run_topic() missing 2 required positional arguments: 'num_to_study' and 'performance_data'
+
+tests/test_kubelingo.py:148: TypeError
+__________________________________________________________________________________________________ test_performance_data_migrates_from_old_format ___________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10bda0890>
+
+    def test_performance_data_migrates_from_old_format(monkeypatch):
+        """
+        Tests that old performance data format is correctly migrated to the new
+        format that tracks unique questions.
+        """
+        # Start with old format data
+        mock_data_source = {'existing_topic': {'correct': 5, 'total': 10}}
+        saved_data = {}
+    
+        def mock_load_performance_data():
+            return mock_data_source.copy()
+    
+        def mock_save_performance_data(data):
+            nonlocal saved_data
+            saved_data = data
+    
+        monkeypatch.setattr('kubelingo.load_performance_data', mock_load_performance_data)
+        monkeypatch.setattr('kubelingo.save_performance_data', mock_save_performance_data)
+    
+        # In this session, user answers q1 correctly.
+        questions = [{'question': 'q1', 'solution': 's1'}]
+        monkeypatch.setattr('kubelingo.load_questions', lambda topic: {'questions': questions})
+        monkeypatch.setattr('kubelingo.clear_screen', lambda: None)
+        monkeypatch.setattr('time.sleep', lambda seconds: None)
+        monkeypatch.setattr('kubelingo.save_question_to_list', lambda *args: None)
+        monkeypatch.setattr('kubelingo.random.shuffle', lambda x: None)
+    
+        from kubelingo import run_topic
+    
+        user_inputs = iter([
+            (['s1'], None),      # Correct answer for q1
+        ])
+        monkeypatch.setattr('kubelingo.get_user_input', lambda: next(user_inputs))
+    
+>       run_topic('existing_topic')
+E       TypeError: run_topic() missing 2 required positional arguments: 'num_to_study' and 'performance_data'
+
+tests/test_kubelingo.py:192: TypeError
+__________________________________________________________________________________________________ test_topic_menu_shows_question_count_and_color ___________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10992be10>, capsys = <_pytest.capture.CaptureFixture object at 0x10992a810>
+
+    def test_topic_menu_shows_question_count_and_color(monkeypatch, capsys):
+        """
+        Tests that the topic selection menu displays the number of questions
+        for each topic and uses colors for performance stats.
+        """
+        # Mock filesystem and data
+        monkeypatch.setattr('os.listdir', lambda path: ['topic1.yaml', 'topic2.yaml'])
+        monkeypatch.setattr('os.path.exists', lambda path: False) # For missed questions
+    
+        mock_perf_data = {
+            'topic1': {'correct_questions': ['q1', 'q2']},
+            'topic2': {'correct_questions': ['q1', 'q2', 'q3', 'q4', 'q5']}
+        }
+        monkeypatch.setattr('kubelingo.load_performance_data', lambda: mock_perf_data)
+    
+        def mock_load_questions(topic):
+            if topic == 'topic1':
+                return {'questions': [{}, {}, {}]} # 3 questions
+            if topic == 'topic2':
+                return {'questions': [{}, {}, {}, {}, {}]} # 5 questions
+            return None
+        monkeypatch.setattr('kubelingo.load_questions', mock_load_questions)
+    
+        # Mock input to exit menu
+        def mock_input_eof(prompt):
+            raise EOFError
+        monkeypatch.setattr('builtins.input', mock_input_eof)
+    
+        from kubelingo import list_and_select_topic
+    
+>       topic = list_and_select_topic()
+E       TypeError: list_and_select_topic() missing 1 required positional argument: 'performance_data'
+
+tests/test_kubelingo.py:232: TypeError
+__________________________________________________________________________________________________ test_topic_menu_ignores_old_performance_format ___________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10bd87b90>, capsys = <_pytest.capture.CaptureFixture object at 0x10bd87e10>
+
+    def test_topic_menu_ignores_old_performance_format(monkeypatch, capsys):
+        """
+        Tests that the topic menu ignores old-format performance data and only
+        displays stats for the new format.
+        """
+        # Mock filesystem and data
+        monkeypatch.setattr('os.listdir', lambda path: ['old_format_topic.yaml', 'new_format_topic.yaml'])
+        monkeypatch.setattr('os.path.exists', lambda path: False) # For missed questions
+    
+        mock_perf_data = {
+            'old_format_topic': {'correct': 8, 'total': 10}, # Old format, should be ignored
+            'new_format_topic': {'correct_questions': ['q1']} # New format, should be displayed
+        }
+        monkeypatch.setattr('kubelingo.load_performance_data', lambda: mock_perf_data)
+    
+        def mock_load_questions(topic):
+            if topic == 'old_format_topic':
+                return {'questions': [{}, {}]} # 2 questions
+            if topic == 'new_format_topic':
+                return {'questions': [{}, {}, {}]} # 3 questions
+            return None
+        monkeypatch.setattr('kubelingo.load_questions', mock_load_questions)
+    
+        # Mock input to exit menu
+        def mock_input_eof(prompt):
+            raise EOFError
+        monkeypatch.setattr('builtins.input', mock_input_eof)
+    
+        from kubelingo import list_and_select_topic
+    
+>       list_and_select_topic()
+E       TypeError: list_and_select_topic() missing 1 required positional argument: 'performance_data'
+
+tests/test_kubelingo.py:275: TypeError
+_____________________________________________________________________________________________________ test_diff_is_shown_for_incorrect_manifest _____________________________________________________________________________________________________
+
+monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10ace3450>, capsys = <_pytest.capture.CaptureFixture object at 0x10ace36d0>
+
+    def test_diff_is_shown_for_incorrect_manifest(monkeypatch, capsys):
+        """
+        Tests that a diff is shown when a user submits an incorrect manifest via vim.
+        """
+        colorama.init(strip=False)
+        try:
+            question = {
+                'question': 'Create a manifest for a pod.',
+                'solution': 'apiVersion: v1\nkind: Pod\nmetadata:\n  name: correct-pod'
+            }
+            user_manifest = 'apiVersion: v1\nkind: Pod\nmetadata:\n  name: wrong-pod'
+    
+            monkeypatch.setattr('kubelingo.load_questions', lambda topic: {'questions': [question]})
+            monkeypatch.setattr('kubelingo.get_user_input', lambda: ([], 'vim'))
+            mock_result = {'correct': False, 'feedback': 'Incorrect name.'}
+            monkeypatch.setattr('kubelingo.handle_vim_edit', lambda q: (user_manifest, mock_result, False))
+    
+            monkeypatch.setattr('kubelingo.clear_screen', lambda: None)
+            monkeypatch.setattr('time.sleep', lambda seconds: None)
+            monkeypatch.setattr('kubelingo.save_question_to_list', lambda file, q, topic: None)
+    
+            from kubelingo import run_topic
+>           run_topic('some_topic')
+E           TypeError: run_topic() missing 2 required positional arguments: 'num_to_study' and 'performance_data'
+
+tests/test_kubelingo.py:311: TypeError
+============================================================================================================== short test summary info ==============================================================================================================
+FAILED tests/test_kubelingo.py::test_back_command_removes_last_entry - AssertionError: assert ['cmd1', 'back'] == []
+FAILED tests/test_kubelingo.py::test_back_command_on_empty_list - AssertionError: assert ['back'] == []
+FAILED tests/test_kubelingo.py::test_back_command_in_the_middle - AssertionError: assert ['cmd1', 'cmd...back', 'cmd3'] == ['cmd1', 'cmd3']
+FAILED tests/test_kubelingo.py::test_back_command_feedback_is_colored - assert "(Removed: 'cmd1')" in ''
+FAILED tests/test_kubelingo.py::test_performance_data_updates_with_unique_correct_answers - TypeError: run_topic() missing 2 required positional arguments: 'num_to_study' and 'performance_data'
+FAILED tests/test_kubelingo.py::test_performance_data_migrates_from_old_format - TypeError: run_topic() missing 2 required positional arguments: 'num_to_study' and 'performance_data'
+FAILED tests/test_kubelingo.py::test_topic_menu_shows_question_count_and_color - TypeError: list_and_select_topic() missing 1 required positional argument: 'performance_data'
+FAILED tests/test_kubelingo.py::test_topic_menu_ignores_old_performance_format - TypeError: list_and_select_topic() missing 1 required positional argument: 'performance_data'
+FAILED tests/test_kubelingo.py::test_diff_is_shown_for_incorrect_manifest - TypeError: run_topic() missing 2 required positional arguments: 'num_to_study' and 'performance_data'
+============================================================================================================ 9 failed, 3 passed in 0.49s ==============================================================

# 2025-08-19 16:07:04.912548
+A

# 2025-08-19 17:01:28.720091
+remove all of these that will break the string literals: '''➜  kubelingo git:(reset_081325) ✗ kubelingo
+Traceback (most recent call last):
+  File "/Users/user/.pyenv/versions/3.11.0/bin/kubelingo", line 3, in <module>
+    from kubelingo.kubelingo import cli
+  File "/Users/user/Documents/GitHub/kubelingo/kubelingo/kubelingo.py", line 213
+    """Gets feedback from an LLM on the user's answer."""
+                                            ^
+SyntaxError: unterminated string literal (detected at line 213)
+➜  kubelingo git:(reset_081325) ✗ kubelingo
+Traceback (most recent call last):
+  File "/Users/user/.pyenv/versions/3.11.0/bin/kubelingo", line 3, in <module>
+    from kubelingo.kubelingo import cli
+  File "/Users/user/Documents/GitHub/kubelingo/kubelingo/kubelingo.py", line 224
+    You are a Kubernetes expert grading a student's YAML manifest for a CKAD exam practice question.
+                                                 ^
+SyntaxError: unterminated string literal (detected at line 224)
+'''

# 2025-08-20 10:08:24.566910
+option 0 should be listed before option #1 here: '''
+Please select a topic to study:
+  1. Api Discovery Docs [5 questions] (4/5 correct - 80%)
+  2. App Configuration [17 questions] (2/17 correct - 12%)
+  3. Commands Args Env [4 questions] (0/4 correct - 0%)
+  4. Core Workloads [18 questions] (0/18 correct - 0%)
+  5. Helm Basics [20 questions] (0/20 correct - 0%)
+  6. Image Registry Use [3 questions] (0/3 correct - 0%)
+  7. Imperative Vs Declarative [7 questions] (0/7 correct - 0%)
+  8. Ingress Http Routing [4 questions] (0/4 correct - 0%)
+  9. Jobs Cronjobs [5 questions] (0/5 correct - 0%)
+  10. Kubectl Common Operations [25 questions] (0/25 correct - 0%)
+  11. Kubectl Operations [44 questions] (0/44 correct - 0%)
+  12. Labels Annotations Selectors [9 questions] (0/9 correct - 0%)
+  13. Linux Syntax [44 questions] (2/44 correct - 5%)
+  14. Namespaces Contexts [11 questions] (0/11 correct - 0%)
+  15. Networking Utilities [3 questions] (0/3 correct - 0%)
+  16. Observability Troubleshooting [4 questions] (0/4 correct - 0%)
+  17. Persistence [3 questions] (0/3 correct - 0%)
+  18. Pod Design Patterns [8 questions] (0/8 correct - 0%)
+  19. Probes Health [5 questions] (0/5 correct - 0%)
+  20. Resource Management [5 questions] (0/5 correct - 0%)
+  21. Resource Reference [138 questions] (0/138 correct - 0%)
+  22. Scheduling Hints [3 questions] (0/3 correct - 0%)
+  23. Security Basics [7 questions] (0/7 correct - 0%)
+  24. Service Accounts In Apps [9 questions] (0/9 correct - 0%)
+  25. Services [9 questions] (0/9 correct - 0%)
+
+Or, select a special action:
+  0. Review Missed Questions [70]
+  c. Configure API Keys
+  q. Quit
+
+Enter a number (1-25) or '0', 'c', 'q': ''' put it at the top of the list
